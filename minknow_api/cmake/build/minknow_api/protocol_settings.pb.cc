// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: minknow_api/protocol_settings.proto

#include "minknow_api/protocol_settings.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace minknow_api {
namespace protocol_settings {
constexpr ProtocolSetting_ProtocolSettingValue::ProtocolSetting_ProtocolSettingValue(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct ProtocolSetting_ProtocolSettingValueDefaultTypeInternal {
  constexpr ProtocolSetting_ProtocolSettingValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProtocolSetting_ProtocolSettingValueDefaultTypeInternal() {}
  union {
    ProtocolSetting_ProtocolSettingValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProtocolSetting_ProtocolSettingValueDefaultTypeInternal _ProtocolSetting_ProtocolSettingValue_default_instance_;
constexpr ProtocolSetting_Constraint::ProtocolSetting_Constraint(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(nullptr)
  , condition_(0)
{}
struct ProtocolSetting_ConstraintDefaultTypeInternal {
  constexpr ProtocolSetting_ConstraintDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProtocolSetting_ConstraintDefaultTypeInternal() {}
  union {
    ProtocolSetting_Constraint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProtocolSetting_ConstraintDefaultTypeInternal _ProtocolSetting_Constraint_default_instance_;
constexpr ProtocolSetting_Dependency::ProtocolSetting_Dependency(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : constraints_()
  , identifier_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ProtocolSetting_DependencyDefaultTypeInternal {
  constexpr ProtocolSetting_DependencyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProtocolSetting_DependencyDefaultTypeInternal() {}
  union {
    ProtocolSetting_Dependency _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProtocolSetting_DependencyDefaultTypeInternal _ProtocolSetting_Dependency_default_instance_;
constexpr ProtocolSetting::ProtocolSetting(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : constraints_()
  , dependencies_()
  , choices_()
  , identifier_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , display_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , help_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , default_value_(nullptr)
  , category_(0)

  , unit_(0)

  , visibility_(0)
{}
struct ProtocolSettingDefaultTypeInternal {
  constexpr ProtocolSettingDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProtocolSettingDefaultTypeInternal() {}
  union {
    ProtocolSetting _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProtocolSettingDefaultTypeInternal _ProtocolSetting_default_instance_;
}  // namespace protocol_settings
}  // namespace minknow_api
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_minknow_5fapi_2fprotocol_5fsettings_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_minknow_5fapi_2fprotocol_5fsettings_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_minknow_5fapi_2fprotocol_5fsettings_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_minknow_5fapi_2fprotocol_5fsettings_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue, protocol_setting_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting_Constraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting_Constraint, condition_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting_Constraint, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting_Dependency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting_Dependency, identifier_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting_Dependency, constraints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, category_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, identifier_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, display_name_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, help_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, unit_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, default_value_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, constraints_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, dependencies_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, visibility_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::protocol_settings::ProtocolSetting, choices_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue)},
  { 12, -1, -1, sizeof(::minknow_api::protocol_settings::ProtocolSetting_Constraint)},
  { 20, -1, -1, sizeof(::minknow_api::protocol_settings::ProtocolSetting_Dependency)},
  { 28, -1, -1, sizeof(::minknow_api::protocol_settings::ProtocolSetting)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::protocol_settings::_ProtocolSetting_ProtocolSettingValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::protocol_settings::_ProtocolSetting_Constraint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::protocol_settings::_ProtocolSetting_Dependency_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::protocol_settings::_ProtocolSetting_default_instance_),
};

const char descriptor_table_protodef_minknow_5fapi_2fprotocol_5fsettings_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#minknow_api/protocol_settings.proto\022\035m"
  "inknow_api.protocol_settings\032(minknow_ap"
  "i/analysis_configuration.proto\032\035minknow_"
  "api/rpc_options.proto\"\274\014\n\017ProtocolSettin"
  "g\022I\n\010category\030\001 \001(\01627.minknow_api.protoc"
  "ol_settings.ProtocolSetting.Category\022\030\n\n"
  "identifier\030\002 \001(\tB\004\210\265\030\001\022\032\n\014display_name\030\003"
  " \001(\tB\004\210\265\030\001\022\014\n\004help\030\020 \001(\t\022A\n\004unit\030\005 \001(\01623"
  ".minknow_api.protocol_settings.ProtocolS"
  "etting.Unit\022Z\n\rdefault_value\030\006 \001(\0132C.min"
  "know_api.protocol_settings.ProtocolSetti"
  "ng.ProtocolSettingValue\022N\n\013constraints\030\007"
  " \003(\01329.minknow_api.protocol_settings.Pro"
  "tocolSetting.Constraint\022O\n\014dependencies\030"
  "\010 \003(\01329.minknow_api.protocol_settings.Pr"
  "otocolSetting.Dependency\022M\n\nvisibility\030\t"
  " \001(\01629.minknow_api.protocol_settings.Pro"
  "tocolSetting.Visibility\022\017\n\007choices\030\021 \003(\t"
  "\032\366\001\n\024ProtocolSettingValue\022\026\n\014string_valu"
  "e\030\001 \001(\tH\000\022\025\n\013float_value\030\002 \001(\001H\000\022\027\n\rinte"
  "ger_value\030\003 \001(\003H\000\022\024\n\nbool_value\030\004 \001(\010H\000\022"
  "f\n\016channels_value\030\005 \001(\0132L.minknow_api.an"
  "alysis_configuration.WriterConfiguration"
  ".ChannelConfigurationH\000B\030\n\026protocol_sett"
  "ing_value\032\271\002\n\nConstraint\022V\n\tcondition\030\001 "
  "\001(\0162C.minknow_api.protocol_settings.Prot"
  "ocolSetting.Constraint.Condition\022R\n\005valu"
  "e\030\002 \001(\0132C.minknow_api.protocol_settings."
  "ProtocolSetting.ProtocolSettingValue\"\177\n\t"
  "Condition\022\t\n\005EQUAL\020\000\022\r\n\tNOT_EQUAL\020\001\022\t\n\005G"
  "T_EQ\020\002\022\006\n\002GT\020\003\022\t\n\005LT_EQ\020\004\022\006\n\002LT\020\005\022\006\n\002IN\020"
  "\006\022\n\n\006NOT_IN\020\007\022\r\n\tENDS_WITH\020\010\022\017\n\013STARTS_W"
  "ITH\020\t\032p\n\nDependency\022\022\n\nidentifier\030\001 \001(\t\022"
  "N\n\013constraints\030\002 \003(\01329.minknow_api.proto"
  "col_settings.ProtocolSetting.Constraint\""
  "C\n\010Category\022\t\n\005OTHER\020\000\022\017\n\013RUN_OPTIONS\020\001\022"
  "\017\n\013BASECALLING\020\002\022\n\n\006OUTPUT\020\003\"\314\001\n\004Unit\022\014\n"
  "\010UNITLESS\020\000\022\017\n\013UTF8_STRING\020\001\022\020\n\014ASCII_ST"
  "RING\020\002\022\010\n\004PATH\020\003\022\007\n\003URL\020\004\022\022\n\016PRIVATE_STR"
  "ING\020\005\022\n\n\006CHOICE\020\006\022\020\n\014MULTI_CHOICE\020\007\022\n\n\006S"
  "ECOND\020\010\022\010\n\004HOUR\020\t\022\010\n\004BASE\020\n\022\t\n\005KBASE\020\013\022\t"
  "\n\005MBASE\020\014\022\t\n\005GBASE\020\r\022\r\n\tMILLIVOLT\020\016\"\?\n\nV"
  "isibility\022\014\n\010EDITABLE\020\000\022\n\n\006HIDDEN\020\001\022\t\n\005F"
  "IXED\020\002\022\014\n\010REQUIRED\020\003B&\n\034com.nanoporetech"
  ".minknow_api\242\002\005MKAPIb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_deps[2] = {
  &::descriptor_table_minknow_5fapi_2fanalysis_5fconfiguration_2eproto,
  &::descriptor_table_minknow_5fapi_2frpc_5foptions_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto = {
  false, false, 1788, descriptor_table_protodef_minknow_5fapi_2fprotocol_5fsettings_2eproto, "minknow_api/protocol_settings.proto", 
  &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_once, descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_deps, 2, 4,
  schemas, file_default_instances, TableStruct_minknow_5fapi_2fprotocol_5fsettings_2eproto::offsets,
  file_level_metadata_minknow_5fapi_2fprotocol_5fsettings_2eproto, file_level_enum_descriptors_minknow_5fapi_2fprotocol_5fsettings_2eproto, file_level_service_descriptors_minknow_5fapi_2fprotocol_5fsettings_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_getter() {
  return &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_minknow_5fapi_2fprotocol_5fsettings_2eproto(&descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto);
namespace minknow_api {
namespace protocol_settings {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtocolSetting_Constraint_Condition_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto);
  return file_level_enum_descriptors_minknow_5fapi_2fprotocol_5fsettings_2eproto[0];
}
bool ProtocolSetting_Constraint_Condition_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::EQUAL;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::NOT_EQUAL;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::GT_EQ;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::GT;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::LT_EQ;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::LT;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::IN;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::NOT_IN;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::ENDS_WITH;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::STARTS_WITH;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::Condition_MIN;
constexpr ProtocolSetting_Constraint_Condition ProtocolSetting_Constraint::Condition_MAX;
constexpr int ProtocolSetting_Constraint::Condition_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtocolSetting_Category_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto);
  return file_level_enum_descriptors_minknow_5fapi_2fprotocol_5fsettings_2eproto[1];
}
bool ProtocolSetting_Category_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ProtocolSetting_Category ProtocolSetting::OTHER;
constexpr ProtocolSetting_Category ProtocolSetting::RUN_OPTIONS;
constexpr ProtocolSetting_Category ProtocolSetting::BASECALLING;
constexpr ProtocolSetting_Category ProtocolSetting::OUTPUT;
constexpr ProtocolSetting_Category ProtocolSetting::Category_MIN;
constexpr ProtocolSetting_Category ProtocolSetting::Category_MAX;
constexpr int ProtocolSetting::Category_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtocolSetting_Unit_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto);
  return file_level_enum_descriptors_minknow_5fapi_2fprotocol_5fsettings_2eproto[2];
}
bool ProtocolSetting_Unit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ProtocolSetting_Unit ProtocolSetting::UNITLESS;
constexpr ProtocolSetting_Unit ProtocolSetting::UTF8_STRING;
constexpr ProtocolSetting_Unit ProtocolSetting::ASCII_STRING;
constexpr ProtocolSetting_Unit ProtocolSetting::PATH;
constexpr ProtocolSetting_Unit ProtocolSetting::URL;
constexpr ProtocolSetting_Unit ProtocolSetting::PRIVATE_STRING;
constexpr ProtocolSetting_Unit ProtocolSetting::CHOICE;
constexpr ProtocolSetting_Unit ProtocolSetting::MULTI_CHOICE;
constexpr ProtocolSetting_Unit ProtocolSetting::SECOND;
constexpr ProtocolSetting_Unit ProtocolSetting::HOUR;
constexpr ProtocolSetting_Unit ProtocolSetting::BASE;
constexpr ProtocolSetting_Unit ProtocolSetting::KBASE;
constexpr ProtocolSetting_Unit ProtocolSetting::MBASE;
constexpr ProtocolSetting_Unit ProtocolSetting::GBASE;
constexpr ProtocolSetting_Unit ProtocolSetting::MILLIVOLT;
constexpr ProtocolSetting_Unit ProtocolSetting::Unit_MIN;
constexpr ProtocolSetting_Unit ProtocolSetting::Unit_MAX;
constexpr int ProtocolSetting::Unit_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtocolSetting_Visibility_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto);
  return file_level_enum_descriptors_minknow_5fapi_2fprotocol_5fsettings_2eproto[3];
}
bool ProtocolSetting_Visibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ProtocolSetting_Visibility ProtocolSetting::EDITABLE;
constexpr ProtocolSetting_Visibility ProtocolSetting::HIDDEN;
constexpr ProtocolSetting_Visibility ProtocolSetting::FIXED;
constexpr ProtocolSetting_Visibility ProtocolSetting::REQUIRED;
constexpr ProtocolSetting_Visibility ProtocolSetting::Visibility_MIN;
constexpr ProtocolSetting_Visibility ProtocolSetting::Visibility_MAX;
constexpr int ProtocolSetting::Visibility_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class ProtocolSetting_ProtocolSettingValue::_Internal {
 public:
  static const ::minknow_api::analysis_configuration::WriterConfiguration_ChannelConfiguration& channels_value(const ProtocolSetting_ProtocolSettingValue* msg);
};

const ::minknow_api::analysis_configuration::WriterConfiguration_ChannelConfiguration&
ProtocolSetting_ProtocolSettingValue::_Internal::channels_value(const ProtocolSetting_ProtocolSettingValue* msg) {
  return *msg->protocol_setting_value_.channels_value_;
}
void ProtocolSetting_ProtocolSettingValue::set_allocated_channels_value(::minknow_api::analysis_configuration::WriterConfiguration_ChannelConfiguration* channels_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_protocol_setting_value();
  if (channels_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channels_value));
    if (message_arena != submessage_arena) {
      channels_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channels_value, submessage_arena);
    }
    set_has_channels_value();
    protocol_setting_value_.channels_value_ = channels_value;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue.channels_value)
}
void ProtocolSetting_ProtocolSettingValue::clear_channels_value() {
  if (_internal_has_channels_value()) {
    if (GetArenaForAllocation() == nullptr) {
      delete protocol_setting_value_.channels_value_;
    }
    clear_has_protocol_setting_value();
  }
}
ProtocolSetting_ProtocolSettingValue::ProtocolSetting_ProtocolSettingValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
}
ProtocolSetting_ProtocolSettingValue::ProtocolSetting_ProtocolSettingValue(const ProtocolSetting_ProtocolSettingValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_protocol_setting_value();
  switch (from.protocol_setting_value_case()) {
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kFloatValue: {
      _internal_set_float_value(from._internal_float_value());
      break;
    }
    case kIntegerValue: {
      _internal_set_integer_value(from._internal_integer_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kChannelsValue: {
      _internal_mutable_channels_value()->::minknow_api::analysis_configuration::WriterConfiguration_ChannelConfiguration::MergeFrom(from._internal_channels_value());
      break;
    }
    case PROTOCOL_SETTING_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
}

void ProtocolSetting_ProtocolSettingValue::SharedCtor() {
clear_has_protocol_setting_value();
}

ProtocolSetting_ProtocolSettingValue::~ProtocolSetting_ProtocolSettingValue() {
  // @@protoc_insertion_point(destructor:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProtocolSetting_ProtocolSettingValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_protocol_setting_value()) {
    clear_protocol_setting_value();
  }
}

void ProtocolSetting_ProtocolSettingValue::ArenaDtor(void* object) {
  ProtocolSetting_ProtocolSettingValue* _this = reinterpret_cast< ProtocolSetting_ProtocolSettingValue* >(object);
  (void)_this;
}
void ProtocolSetting_ProtocolSettingValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtocolSetting_ProtocolSettingValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProtocolSetting_ProtocolSettingValue::clear_protocol_setting_value() {
// @@protoc_insertion_point(one_of_clear_start:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
  switch (protocol_setting_value_case()) {
    case kStringValue: {
      protocol_setting_value_.string_value_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kIntegerValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kChannelsValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete protocol_setting_value_.channels_value_;
      }
      break;
    }
    case PROTOCOL_SETTING_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROTOCOL_SETTING_VALUE_NOT_SET;
}


void ProtocolSetting_ProtocolSettingValue::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_protocol_setting_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtocolSetting_ProtocolSettingValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string string_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_string_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue.string_value"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double float_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _internal_set_float_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // int64 integer_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_integer_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool bool_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _internal_set_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.analysis_configuration.WriterConfiguration.ChannelConfiguration channels_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_channels_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtocolSetting_ProtocolSettingValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_value = 1;
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue.string_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_string_value(), target);
  }

  // double float_value = 2;
  if (_internal_has_float_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_float_value(), target);
  }

  // int64 integer_value = 3;
  if (_internal_has_integer_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_integer_value(), target);
  }

  // bool bool_value = 4;
  if (_internal_has_bool_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_bool_value(), target);
  }

  // .minknow_api.analysis_configuration.WriterConfiguration.ChannelConfiguration channels_value = 5;
  if (_internal_has_channels_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::channels_value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
  return target;
}

size_t ProtocolSetting_ProtocolSettingValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (protocol_setting_value_case()) {
    // string string_value = 1;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // double float_value = 2;
    case kFloatValue: {
      total_size += 1 + 8;
      break;
    }
    // int64 integer_value = 3;
    case kIntegerValue: {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_integer_value());
      break;
    }
    // bool bool_value = 4;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // .minknow_api.analysis_configuration.WriterConfiguration.ChannelConfiguration channels_value = 5;
    case kChannelsValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *protocol_setting_value_.channels_value_);
      break;
    }
    case PROTOCOL_SETTING_VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtocolSetting_ProtocolSettingValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProtocolSetting_ProtocolSettingValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtocolSetting_ProtocolSettingValue::GetClassData() const { return &_class_data_; }

void ProtocolSetting_ProtocolSettingValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProtocolSetting_ProtocolSettingValue *>(to)->MergeFrom(
      static_cast<const ProtocolSetting_ProtocolSettingValue &>(from));
}


void ProtocolSetting_ProtocolSettingValue::MergeFrom(const ProtocolSetting_ProtocolSettingValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.protocol_setting_value_case()) {
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kFloatValue: {
      _internal_set_float_value(from._internal_float_value());
      break;
    }
    case kIntegerValue: {
      _internal_set_integer_value(from._internal_integer_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kChannelsValue: {
      _internal_mutable_channels_value()->::minknow_api::analysis_configuration::WriterConfiguration_ChannelConfiguration::MergeFrom(from._internal_channels_value());
      break;
    }
    case PROTOCOL_SETTING_VALUE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtocolSetting_ProtocolSettingValue::CopyFrom(const ProtocolSetting_ProtocolSettingValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtocolSetting_ProtocolSettingValue::IsInitialized() const {
  return true;
}

void ProtocolSetting_ProtocolSettingValue::InternalSwap(ProtocolSetting_ProtocolSettingValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(protocol_setting_value_, other->protocol_setting_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtocolSetting_ProtocolSettingValue::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_getter, &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_once,
      file_level_metadata_minknow_5fapi_2fprotocol_5fsettings_2eproto[0]);
}

// ===================================================================

class ProtocolSetting_Constraint::_Internal {
 public:
  static const ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue& value(const ProtocolSetting_Constraint* msg);
};

const ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue&
ProtocolSetting_Constraint::_Internal::value(const ProtocolSetting_Constraint* msg) {
  return *msg->value_;
}
ProtocolSetting_Constraint::ProtocolSetting_Constraint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.protocol_settings.ProtocolSetting.Constraint)
}
ProtocolSetting_Constraint::ProtocolSetting_Constraint(const ProtocolSetting_Constraint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  condition_ = from.condition_;
  // @@protoc_insertion_point(copy_constructor:minknow_api.protocol_settings.ProtocolSetting.Constraint)
}

void ProtocolSetting_Constraint::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&condition_) -
    reinterpret_cast<char*>(&value_)) + sizeof(condition_));
}

ProtocolSetting_Constraint::~ProtocolSetting_Constraint() {
  // @@protoc_insertion_point(destructor:minknow_api.protocol_settings.ProtocolSetting.Constraint)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProtocolSetting_Constraint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete value_;
}

void ProtocolSetting_Constraint::ArenaDtor(void* object) {
  ProtocolSetting_Constraint* _this = reinterpret_cast< ProtocolSetting_Constraint* >(object);
  (void)_this;
}
void ProtocolSetting_Constraint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtocolSetting_Constraint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProtocolSetting_Constraint::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.protocol_settings.ProtocolSetting.Constraint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  condition_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtocolSetting_Constraint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .minknow_api.protocol_settings.ProtocolSetting.Constraint.Condition condition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_condition(static_cast<::minknow_api::protocol_settings::ProtocolSetting_Constraint_Condition>(val));
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtocolSetting_Constraint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.protocol_settings.ProtocolSetting.Constraint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .minknow_api.protocol_settings.ProtocolSetting.Constraint.Condition condition = 1;
  if (this->_internal_condition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_condition(), target);
  }

  // .minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue value = 2;
  if (this->_internal_has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.protocol_settings.ProtocolSetting.Constraint)
  return target;
}

size_t ProtocolSetting_Constraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.protocol_settings.ProtocolSetting.Constraint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue value = 2;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .minknow_api.protocol_settings.ProtocolSetting.Constraint.Condition condition = 1;
  if (this->_internal_condition() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_condition());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtocolSetting_Constraint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProtocolSetting_Constraint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtocolSetting_Constraint::GetClassData() const { return &_class_data_; }

void ProtocolSetting_Constraint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProtocolSetting_Constraint *>(to)->MergeFrom(
      static_cast<const ProtocolSetting_Constraint &>(from));
}


void ProtocolSetting_Constraint::MergeFrom(const ProtocolSetting_Constraint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.protocol_settings.ProtocolSetting.Constraint)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_value()) {
    _internal_mutable_value()->::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue::MergeFrom(from._internal_value());
  }
  if (from._internal_condition() != 0) {
    _internal_set_condition(from._internal_condition());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtocolSetting_Constraint::CopyFrom(const ProtocolSetting_Constraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.protocol_settings.ProtocolSetting.Constraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtocolSetting_Constraint::IsInitialized() const {
  return true;
}

void ProtocolSetting_Constraint::InternalSwap(ProtocolSetting_Constraint* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtocolSetting_Constraint, condition_)
      + sizeof(ProtocolSetting_Constraint::condition_)
      - PROTOBUF_FIELD_OFFSET(ProtocolSetting_Constraint, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtocolSetting_Constraint::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_getter, &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_once,
      file_level_metadata_minknow_5fapi_2fprotocol_5fsettings_2eproto[1]);
}

// ===================================================================

class ProtocolSetting_Dependency::_Internal {
 public:
};

ProtocolSetting_Dependency::ProtocolSetting_Dependency(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  constraints_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.protocol_settings.ProtocolSetting.Dependency)
}
ProtocolSetting_Dependency::ProtocolSetting_Dependency(const ProtocolSetting_Dependency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      constraints_(from.constraints_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identifier().empty()) {
    identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_identifier(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.protocol_settings.ProtocolSetting.Dependency)
}

void ProtocolSetting_Dependency::SharedCtor() {
identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProtocolSetting_Dependency::~ProtocolSetting_Dependency() {
  // @@protoc_insertion_point(destructor:minknow_api.protocol_settings.ProtocolSetting.Dependency)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProtocolSetting_Dependency::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtocolSetting_Dependency::ArenaDtor(void* object) {
  ProtocolSetting_Dependency* _this = reinterpret_cast< ProtocolSetting_Dependency* >(object);
  (void)_this;
}
void ProtocolSetting_Dependency::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtocolSetting_Dependency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProtocolSetting_Dependency::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.protocol_settings.ProtocolSetting.Dependency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  constraints_.Clear();
  identifier_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtocolSetting_Dependency::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.protocol_settings.ProtocolSetting.Dependency.identifier"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .minknow_api.protocol_settings.ProtocolSetting.Constraint constraints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_constraints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtocolSetting_Dependency::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.protocol_settings.ProtocolSetting.Dependency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identifier().data(), static_cast<int>(this->_internal_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.protocol_settings.ProtocolSetting.Dependency.identifier");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identifier(), target);
  }

  // repeated .minknow_api.protocol_settings.ProtocolSetting.Constraint constraints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_constraints_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_constraints(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.protocol_settings.ProtocolSetting.Dependency)
  return target;
}

size_t ProtocolSetting_Dependency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.protocol_settings.ProtocolSetting.Dependency)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .minknow_api.protocol_settings.ProtocolSetting.Constraint constraints = 2;
  total_size += 1UL * this->_internal_constraints_size();
  for (const auto& msg : this->constraints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identifier());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtocolSetting_Dependency::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProtocolSetting_Dependency::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtocolSetting_Dependency::GetClassData() const { return &_class_data_; }

void ProtocolSetting_Dependency::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProtocolSetting_Dependency *>(to)->MergeFrom(
      static_cast<const ProtocolSetting_Dependency &>(from));
}


void ProtocolSetting_Dependency::MergeFrom(const ProtocolSetting_Dependency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.protocol_settings.ProtocolSetting.Dependency)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  constraints_.MergeFrom(from.constraints_);
  if (!from._internal_identifier().empty()) {
    _internal_set_identifier(from._internal_identifier());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtocolSetting_Dependency::CopyFrom(const ProtocolSetting_Dependency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.protocol_settings.ProtocolSetting.Dependency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtocolSetting_Dependency::IsInitialized() const {
  return true;
}

void ProtocolSetting_Dependency::InternalSwap(ProtocolSetting_Dependency* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  constraints_.InternalSwap(&other->constraints_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &identifier_, lhs_arena,
      &other->identifier_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtocolSetting_Dependency::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_getter, &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_once,
      file_level_metadata_minknow_5fapi_2fprotocol_5fsettings_2eproto[2]);
}

// ===================================================================

class ProtocolSetting::_Internal {
 public:
  static const ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue& default_value(const ProtocolSetting* msg);
};

const ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue&
ProtocolSetting::_Internal::default_value(const ProtocolSetting* msg) {
  return *msg->default_value_;
}
ProtocolSetting::ProtocolSetting(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  constraints_(arena),
  dependencies_(arena),
  choices_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.protocol_settings.ProtocolSetting)
}
ProtocolSetting::ProtocolSetting(const ProtocolSetting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      constraints_(from.constraints_),
      dependencies_(from.dependencies_),
      choices_(from.choices_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identifier().empty()) {
    identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_identifier(), 
      GetArenaForAllocation());
  }
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_display_name().empty()) {
    display_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_display_name(), 
      GetArenaForAllocation());
  }
  help_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_help().empty()) {
    help_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_help(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_default_value()) {
    default_value_ = new ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue(*from.default_value_);
  } else {
    default_value_ = nullptr;
  }
  ::memcpy(&category_, &from.category_,
    static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&category_)) + sizeof(visibility_));
  // @@protoc_insertion_point(copy_constructor:minknow_api.protocol_settings.ProtocolSetting)
}

void ProtocolSetting::SharedCtor() {
identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
help_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&default_value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&default_value_)) + sizeof(visibility_));
}

ProtocolSetting::~ProtocolSetting() {
  // @@protoc_insertion_point(destructor:minknow_api.protocol_settings.ProtocolSetting)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProtocolSetting::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  help_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete default_value_;
}

void ProtocolSetting::ArenaDtor(void* object) {
  ProtocolSetting* _this = reinterpret_cast< ProtocolSetting* >(object);
  (void)_this;
}
void ProtocolSetting::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtocolSetting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProtocolSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.protocol_settings.ProtocolSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  constraints_.Clear();
  dependencies_.Clear();
  choices_.Clear();
  identifier_.ClearToEmpty();
  display_name_.ClearToEmpty();
  help_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && default_value_ != nullptr) {
    delete default_value_;
  }
  default_value_ = nullptr;
  ::memset(&category_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visibility_) -
      reinterpret_cast<char*>(&category_)) + sizeof(visibility_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtocolSetting::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .minknow_api.protocol_settings.ProtocolSetting.Category category = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_category(static_cast<::minknow_api::protocol_settings::ProtocolSetting_Category>(val));
        } else
          goto handle_unusual;
        continue;
      // string identifier = 2 [(.minknow_api.rpc_required) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.protocol_settings.ProtocolSetting.identifier"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string display_name = 3 [(.minknow_api.rpc_required) = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_display_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.protocol_settings.ProtocolSetting.display_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.protocol_settings.ProtocolSetting.Unit unit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_unit(static_cast<::minknow_api::protocol_settings::ProtocolSetting_Unit>(val));
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue default_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .minknow_api.protocol_settings.ProtocolSetting.Constraint constraints = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_constraints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .minknow_api.protocol_settings.ProtocolSetting.Dependency dependencies = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dependencies(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.protocol_settings.ProtocolSetting.Visibility visibility = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::minknow_api::protocol_settings::ProtocolSetting_Visibility>(val));
        } else
          goto handle_unusual;
        continue;
      // string help = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_help();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.protocol_settings.ProtocolSetting.help"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string choices = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_choices();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.protocol_settings.ProtocolSetting.choices"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtocolSetting::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.protocol_settings.ProtocolSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .minknow_api.protocol_settings.ProtocolSetting.Category category = 1;
  if (this->_internal_category() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_category(), target);
  }

  // string identifier = 2 [(.minknow_api.rpc_required) = true];
  if (!this->_internal_identifier().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identifier().data(), static_cast<int>(this->_internal_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.protocol_settings.ProtocolSetting.identifier");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_identifier(), target);
  }

  // string display_name = 3 [(.minknow_api.rpc_required) = true];
  if (!this->_internal_display_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.protocol_settings.ProtocolSetting.display_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_display_name(), target);
  }

  // .minknow_api.protocol_settings.ProtocolSetting.Unit unit = 5;
  if (this->_internal_unit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_unit(), target);
  }

  // .minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue default_value = 6;
  if (this->_internal_has_default_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::default_value(this), target, stream);
  }

  // repeated .minknow_api.protocol_settings.ProtocolSetting.Constraint constraints = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_constraints_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_constraints(i), target, stream);
  }

  // repeated .minknow_api.protocol_settings.ProtocolSetting.Dependency dependencies = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_dependencies_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_dependencies(i), target, stream);
  }

  // .minknow_api.protocol_settings.ProtocolSetting.Visibility visibility = 9;
  if (this->_internal_visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_visibility(), target);
  }

  // string help = 16;
  if (!this->_internal_help().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_help().data(), static_cast<int>(this->_internal_help().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.protocol_settings.ProtocolSetting.help");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_help(), target);
  }

  // repeated string choices = 17;
  for (int i = 0, n = this->_internal_choices_size(); i < n; i++) {
    const auto& s = this->_internal_choices(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.protocol_settings.ProtocolSetting.choices");
    target = stream->WriteString(17, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.protocol_settings.ProtocolSetting)
  return target;
}

size_t ProtocolSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.protocol_settings.ProtocolSetting)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .minknow_api.protocol_settings.ProtocolSetting.Constraint constraints = 7;
  total_size += 1UL * this->_internal_constraints_size();
  for (const auto& msg : this->constraints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .minknow_api.protocol_settings.ProtocolSetting.Dependency dependencies = 8;
  total_size += 1UL * this->_internal_dependencies_size();
  for (const auto& msg : this->dependencies_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string choices = 17;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(choices_.size());
  for (int i = 0, n = choices_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      choices_.Get(i));
  }

  // string identifier = 2 [(.minknow_api.rpc_required) = true];
  if (!this->_internal_identifier().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identifier());
  }

  // string display_name = 3 [(.minknow_api.rpc_required) = true];
  if (!this->_internal_display_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string help = 16;
  if (!this->_internal_help().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_help());
  }

  // .minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue default_value = 6;
  if (this->_internal_has_default_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *default_value_);
  }

  // .minknow_api.protocol_settings.ProtocolSetting.Category category = 1;
  if (this->_internal_category() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_category());
  }

  // .minknow_api.protocol_settings.ProtocolSetting.Unit unit = 5;
  if (this->_internal_unit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_unit());
  }

  // .minknow_api.protocol_settings.ProtocolSetting.Visibility visibility = 9;
  if (this->_internal_visibility() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProtocolSetting::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProtocolSetting::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProtocolSetting::GetClassData() const { return &_class_data_; }

void ProtocolSetting::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProtocolSetting *>(to)->MergeFrom(
      static_cast<const ProtocolSetting &>(from));
}


void ProtocolSetting::MergeFrom(const ProtocolSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.protocol_settings.ProtocolSetting)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  constraints_.MergeFrom(from.constraints_);
  dependencies_.MergeFrom(from.dependencies_);
  choices_.MergeFrom(from.choices_);
  if (!from._internal_identifier().empty()) {
    _internal_set_identifier(from._internal_identifier());
  }
  if (!from._internal_display_name().empty()) {
    _internal_set_display_name(from._internal_display_name());
  }
  if (!from._internal_help().empty()) {
    _internal_set_help(from._internal_help());
  }
  if (from._internal_has_default_value()) {
    _internal_mutable_default_value()->::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue::MergeFrom(from._internal_default_value());
  }
  if (from._internal_category() != 0) {
    _internal_set_category(from._internal_category());
  }
  if (from._internal_unit() != 0) {
    _internal_set_unit(from._internal_unit());
  }
  if (from._internal_visibility() != 0) {
    _internal_set_visibility(from._internal_visibility());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProtocolSetting::CopyFrom(const ProtocolSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.protocol_settings.ProtocolSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtocolSetting::IsInitialized() const {
  return true;
}

void ProtocolSetting::InternalSwap(ProtocolSetting* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  constraints_.InternalSwap(&other->constraints_);
  dependencies_.InternalSwap(&other->dependencies_);
  choices_.InternalSwap(&other->choices_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &identifier_, lhs_arena,
      &other->identifier_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &display_name_, lhs_arena,
      &other->display_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &help_, lhs_arena,
      &other->help_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtocolSetting, visibility_)
      + sizeof(ProtocolSetting::visibility_)
      - PROTOBUF_FIELD_OFFSET(ProtocolSetting, default_value_)>(
          reinterpret_cast<char*>(&default_value_),
          reinterpret_cast<char*>(&other->default_value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtocolSetting::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_getter, &descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto_once,
      file_level_metadata_minknow_5fapi_2fprotocol_5fsettings_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol_settings
}  // namespace minknow_api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue* Arena::CreateMaybeMessage< ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::protocol_settings::ProtocolSetting_Constraint* Arena::CreateMaybeMessage< ::minknow_api::protocol_settings::ProtocolSetting_Constraint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::protocol_settings::ProtocolSetting_Constraint >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::protocol_settings::ProtocolSetting_Dependency* Arena::CreateMaybeMessage< ::minknow_api::protocol_settings::ProtocolSetting_Dependency >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::protocol_settings::ProtocolSetting_Dependency >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::protocol_settings::ProtocolSetting* Arena::CreateMaybeMessage< ::minknow_api::protocol_settings::ProtocolSetting >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::protocol_settings::ProtocolSetting >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
