// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: minknow_api/basecaller.proto

#include "minknow_api/basecaller.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace minknow_api {
namespace basecaller {
constexpr ListConfigsByKitRequest::ListConfigsByKitRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ListConfigsByKitRequestDefaultTypeInternal {
  constexpr ListConfigsByKitRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListConfigsByKitRequestDefaultTypeInternal() {}
  union {
    ListConfigsByKitRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListConfigsByKitRequestDefaultTypeInternal _ListConfigsByKitRequest_default_instance_;
constexpr ListConfigsByKitResponse_ConfigList::ListConfigsByKitResponse_ConfigList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : configs_(){}
struct ListConfigsByKitResponse_ConfigListDefaultTypeInternal {
  constexpr ListConfigsByKitResponse_ConfigListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListConfigsByKitResponse_ConfigListDefaultTypeInternal() {}
  union {
    ListConfigsByKitResponse_ConfigList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListConfigsByKitResponse_ConfigListDefaultTypeInternal _ListConfigsByKitResponse_ConfigList_default_instance_;
constexpr ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUseDefaultTypeInternal {
  constexpr ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUseDefaultTypeInternal _ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse_default_instance_;
constexpr ListConfigsByKitResponse_PerFlowCell::ListConfigsByKitResponse_PerFlowCell(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : kit_configs_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ListConfigsByKitResponse_PerFlowCellDefaultTypeInternal {
  constexpr ListConfigsByKitResponse_PerFlowCellDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListConfigsByKitResponse_PerFlowCellDefaultTypeInternal() {}
  union {
    ListConfigsByKitResponse_PerFlowCell _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListConfigsByKitResponse_PerFlowCellDefaultTypeInternal _ListConfigsByKitResponse_PerFlowCell_default_instance_;
constexpr ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUseDefaultTypeInternal {
  constexpr ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUseDefaultTypeInternal _ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse_default_instance_;
constexpr ListConfigsByKitResponse::ListConfigsByKitResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : flow_cell_configs_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ListConfigsByKitResponseDefaultTypeInternal {
  constexpr ListConfigsByKitResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListConfigsByKitResponseDefaultTypeInternal() {}
  union {
    ListConfigsByKitResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListConfigsByKitResponseDefaultTypeInternal _ListConfigsByKitResponse_default_instance_;
constexpr StartBasecallingRequest::StartBasecallingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : input_reads_directories_()
  , output_reads_directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , configuration_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , barcoding_configuration_(nullptr)
  , alignment_configuration_(nullptr)
  , fast5_out_(false)
  , compress_fastq_(false)
  , disable_events_(false)
  , recursive_(false){}
struct StartBasecallingRequestDefaultTypeInternal {
  constexpr StartBasecallingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartBasecallingRequestDefaultTypeInternal() {}
  union {
    StartBasecallingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartBasecallingRequestDefaultTypeInternal _StartBasecallingRequest_default_instance_;
constexpr StartBasecallingResponse::StartBasecallingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartBasecallingResponseDefaultTypeInternal {
  constexpr StartBasecallingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartBasecallingResponseDefaultTypeInternal() {}
  union {
    StartBasecallingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartBasecallingResponseDefaultTypeInternal _StartBasecallingResponse_default_instance_;
constexpr StartBarcodingRequest::StartBarcodingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : input_reads_directories_()
  , output_reads_directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , barcoding_configuration_(nullptr)
  , compress_fastq_(false)
  , recursive_(false){}
struct StartBarcodingRequestDefaultTypeInternal {
  constexpr StartBarcodingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartBarcodingRequestDefaultTypeInternal() {}
  union {
    StartBarcodingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartBarcodingRequestDefaultTypeInternal _StartBarcodingRequest_default_instance_;
constexpr StartBarcodingResponse::StartBarcodingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartBarcodingResponseDefaultTypeInternal {
  constexpr StartBarcodingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartBarcodingResponseDefaultTypeInternal() {}
  union {
    StartBarcodingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartBarcodingResponseDefaultTypeInternal _StartBarcodingResponse_default_instance_;
constexpr StartAlignmentRequest::StartAlignmentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : input_reads_directories_()
  , output_reads_directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , alignment_configuration_(nullptr)
  , recursive_(false){}
struct StartAlignmentRequestDefaultTypeInternal {
  constexpr StartAlignmentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartAlignmentRequestDefaultTypeInternal() {}
  union {
    StartAlignmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartAlignmentRequestDefaultTypeInternal _StartAlignmentRequest_default_instance_;
constexpr StartAlignmentResponse::StartAlignmentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartAlignmentResponseDefaultTypeInternal {
  constexpr StartAlignmentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartAlignmentResponseDefaultTypeInternal() {}
  union {
    StartAlignmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartAlignmentResponseDefaultTypeInternal _StartAlignmentResponse_default_instance_;
constexpr StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUseDefaultTypeInternal {
  constexpr StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUseDefaultTypeInternal _StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse_default_instance_;
constexpr StartPostProcessingProtocolRequest::StartPostProcessingProtocolRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setting_values_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , identifier_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , input_fast5_directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , input_fastq_directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , input_bam_directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , output_directory_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sequencing_protocol_run_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartPostProcessingProtocolRequestDefaultTypeInternal {
  constexpr StartPostProcessingProtocolRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartPostProcessingProtocolRequestDefaultTypeInternal() {}
  union {
    StartPostProcessingProtocolRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartPostProcessingProtocolRequestDefaultTypeInternal _StartPostProcessingProtocolRequest_default_instance_;
constexpr StartRequest::StartRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct StartRequestDefaultTypeInternal {
  constexpr StartRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartRequestDefaultTypeInternal() {}
  union {
    StartRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartRequestDefaultTypeInternal _StartRequest_default_instance_;
constexpr StartPostProcessingProtocolResponse::StartPostProcessingProtocolResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartPostProcessingProtocolResponseDefaultTypeInternal {
  constexpr StartPostProcessingProtocolResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartPostProcessingProtocolResponseDefaultTypeInternal() {}
  union {
    StartPostProcessingProtocolResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartPostProcessingProtocolResponseDefaultTypeInternal _StartPostProcessingProtocolResponse_default_instance_;
constexpr CancelRequest::CancelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CancelRequestDefaultTypeInternal {
  constexpr CancelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CancelRequestDefaultTypeInternal() {}
  union {
    CancelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CancelRequestDefaultTypeInternal _CancelRequest_default_instance_;
constexpr CancelResponse::CancelResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CancelResponseDefaultTypeInternal {
  constexpr CancelResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CancelResponseDefaultTypeInternal() {}
  union {
    CancelResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CancelResponseDefaultTypeInternal _CancelResponse_default_instance_;
constexpr RunInfo::RunInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : errors_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , start_time_(nullptr)
  , end_time_(nullptr)
  , estimated_end_time_(nullptr)
  , state_(0)

  , files_discovered_(0)
  , progress_current_(0)
  , progress_total_(0)
  , _oneof_case_{}{}
struct RunInfoDefaultTypeInternal {
  constexpr RunInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RunInfoDefaultTypeInternal() {}
  union {
    RunInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RunInfoDefaultTypeInternal _RunInfo_default_instance_;
constexpr GetInfoRequest_IdList::GetInfoRequest_IdList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ids_(){}
struct GetInfoRequest_IdListDefaultTypeInternal {
  constexpr GetInfoRequest_IdListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetInfoRequest_IdListDefaultTypeInternal() {}
  union {
    GetInfoRequest_IdList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetInfoRequest_IdListDefaultTypeInternal _GetInfoRequest_IdList_default_instance_;
constexpr GetInfoRequest::GetInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct GetInfoRequestDefaultTypeInternal {
  constexpr GetInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetInfoRequestDefaultTypeInternal() {}
  union {
    GetInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetInfoRequestDefaultTypeInternal _GetInfoRequest_default_instance_;
constexpr GetInfoResponse::GetInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : runs_(){}
struct GetInfoResponseDefaultTypeInternal {
  constexpr GetInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetInfoResponseDefaultTypeInternal() {}
  union {
    GetInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetInfoResponseDefaultTypeInternal _GetInfoResponse_default_instance_;
constexpr WatchRequest::WatchRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : send_finished_runs_(false){}
struct WatchRequestDefaultTypeInternal {
  constexpr WatchRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchRequestDefaultTypeInternal() {}
  union {
    WatchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchRequestDefaultTypeInternal _WatchRequest_default_instance_;
constexpr WatchResponse::WatchResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : runs_(){}
struct WatchResponseDefaultTypeInternal {
  constexpr WatchResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchResponseDefaultTypeInternal() {}
  union {
    WatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchResponseDefaultTypeInternal _WatchResponse_default_instance_;
constexpr MakeAlignmentIndexRequest::MakeAlignmentIndexRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : input_alignment_reference_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , output_alignment_index_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct MakeAlignmentIndexRequestDefaultTypeInternal {
  constexpr MakeAlignmentIndexRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MakeAlignmentIndexRequestDefaultTypeInternal() {}
  union {
    MakeAlignmentIndexRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MakeAlignmentIndexRequestDefaultTypeInternal _MakeAlignmentIndexRequest_default_instance_;
constexpr MakeAlignmentIndexResponse::MakeAlignmentIndexResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MakeAlignmentIndexResponseDefaultTypeInternal {
  constexpr MakeAlignmentIndexResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MakeAlignmentIndexResponseDefaultTypeInternal() {}
  union {
    MakeAlignmentIndexResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MakeAlignmentIndexResponseDefaultTypeInternal _MakeAlignmentIndexResponse_default_instance_;
constexpr ListPostProcessingProtocolsRequest::ListPostProcessingProtocolsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ListPostProcessingProtocolsRequestDefaultTypeInternal {
  constexpr ListPostProcessingProtocolsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListPostProcessingProtocolsRequestDefaultTypeInternal() {}
  union {
    ListPostProcessingProtocolsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListPostProcessingProtocolsRequestDefaultTypeInternal _ListPostProcessingProtocolsRequest_default_instance_;
constexpr PostProcessingProtocolInfo::PostProcessingProtocolInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : identifier_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PostProcessingProtocolInfoDefaultTypeInternal {
  constexpr PostProcessingProtocolInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PostProcessingProtocolInfoDefaultTypeInternal() {}
  union {
    PostProcessingProtocolInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PostProcessingProtocolInfoDefaultTypeInternal _PostProcessingProtocolInfo_default_instance_;
constexpr ListPostProcessingProtocolsResponse::ListPostProcessingProtocolsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : protocols_(){}
struct ListPostProcessingProtocolsResponseDefaultTypeInternal {
  constexpr ListPostProcessingProtocolsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListPostProcessingProtocolsResponseDefaultTypeInternal() {}
  union {
    ListPostProcessingProtocolsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListPostProcessingProtocolsResponseDefaultTypeInternal _ListPostProcessingProtocolsResponse_default_instance_;
constexpr ListSettingsForPostProcessingProtocolRequest::ListSettingsForPostProcessingProtocolRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : identifier_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListSettingsForPostProcessingProtocolRequestDefaultTypeInternal {
  constexpr ListSettingsForPostProcessingProtocolRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSettingsForPostProcessingProtocolRequestDefaultTypeInternal() {}
  union {
    ListSettingsForPostProcessingProtocolRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSettingsForPostProcessingProtocolRequestDefaultTypeInternal _ListSettingsForPostProcessingProtocolRequest_default_instance_;
constexpr ListSettingsForPostProcessingProtocolResponse::ListSettingsForPostProcessingProtocolResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : protocol_settings_()
  , requires_fast5_input_(false)
  , requires_fastq_input_(false)
  , requires_bam_input_(false){}
struct ListSettingsForPostProcessingProtocolResponseDefaultTypeInternal {
  constexpr ListSettingsForPostProcessingProtocolResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSettingsForPostProcessingProtocolResponseDefaultTypeInternal() {}
  union {
    ListSettingsForPostProcessingProtocolResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSettingsForPostProcessingProtocolResponseDefaultTypeInternal _ListSettingsForPostProcessingProtocolResponse_default_instance_;
constexpr UpdateProgressRequest::UpdateProgressRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , progress_(0){}
struct UpdateProgressRequestDefaultTypeInternal {
  constexpr UpdateProgressRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateProgressRequestDefaultTypeInternal() {}
  union {
    UpdateProgressRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateProgressRequestDefaultTypeInternal _UpdateProgressRequest_default_instance_;
constexpr UpdateProgressResponse::UpdateProgressResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct UpdateProgressResponseDefaultTypeInternal {
  constexpr UpdateProgressResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateProgressResponseDefaultTypeInternal() {}
  union {
    UpdateProgressResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateProgressResponseDefaultTypeInternal _UpdateProgressResponse_default_instance_;
}  // namespace basecaller
}  // namespace minknow_api
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[33];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_minknow_5fapi_2fbasecaller_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_minknow_5fapi_2fbasecaller_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_minknow_5fapi_2fbasecaller_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList, configs_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell, kit_configs_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListConfigsByKitResponse, flow_cell_configs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, name_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, input_reads_directories_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, output_reads_directory_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, configuration_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, fast5_out_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, compress_fastq_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, disable_events_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, recursive_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, barcoding_configuration_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingRequest, alignment_configuration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBasecallingResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBarcodingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBarcodingRequest, name_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBarcodingRequest, input_reads_directories_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBarcodingRequest, output_reads_directory_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBarcodingRequest, compress_fastq_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBarcodingRequest, recursive_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBarcodingRequest, barcoding_configuration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBarcodingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartBarcodingResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartAlignmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartAlignmentRequest, name_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartAlignmentRequest, input_reads_directories_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartAlignmentRequest, output_reads_directory_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartAlignmentRequest, recursive_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartAlignmentRequest, alignment_configuration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartAlignmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartAlignmentResponse, id_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest, identifier_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest, sequencing_protocol_run_id_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest, input_fast5_directory_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest, input_fastq_directory_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest, input_bam_directory_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest, output_directory_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolRequest, setting_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartRequest, start_request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::StartPostProcessingProtocolResponse, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::CancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::CancelRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::CancelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, id_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, state_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, errors_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, files_discovered_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, progress_current_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, progress_total_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, start_time_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, end_time_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, estimated_end_time_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::RunInfo, start_request_oneof_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::GetInfoRequest_IdList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::GetInfoRequest_IdList, ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::GetInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::GetInfoRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::GetInfoRequest, selection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::GetInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::GetInfoResponse, runs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::WatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::WatchRequest, send_finished_runs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::WatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::WatchResponse, runs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::MakeAlignmentIndexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::MakeAlignmentIndexRequest, input_alignment_reference_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::MakeAlignmentIndexRequest, output_alignment_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::MakeAlignmentIndexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListPostProcessingProtocolsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::PostProcessingProtocolInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::PostProcessingProtocolInfo, identifier_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::PostProcessingProtocolInfo, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListPostProcessingProtocolsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListPostProcessingProtocolsResponse, protocols_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListSettingsForPostProcessingProtocolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListSettingsForPostProcessingProtocolRequest, identifier_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListSettingsForPostProcessingProtocolResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListSettingsForPostProcessingProtocolResponse, requires_fast5_input_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListSettingsForPostProcessingProtocolResponse, requires_fastq_input_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListSettingsForPostProcessingProtocolResponse, requires_bam_input_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::ListSettingsForPostProcessingProtocolResponse, protocol_settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::UpdateProgressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::UpdateProgressRequest, id_),
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::UpdateProgressRequest, progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::minknow_api::basecaller::UpdateProgressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::minknow_api::basecaller::ListConfigsByKitRequest)},
  { 6, -1, -1, sizeof(::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList)},
  { 13, 21, -1, sizeof(::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse)},
  { 23, -1, -1, sizeof(::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell)},
  { 30, 38, -1, sizeof(::minknow_api::basecaller::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse)},
  { 40, -1, -1, sizeof(::minknow_api::basecaller::ListConfigsByKitResponse)},
  { 47, -1, -1, sizeof(::minknow_api::basecaller::StartBasecallingRequest)},
  { 63, -1, -1, sizeof(::minknow_api::basecaller::StartBasecallingResponse)},
  { 70, -1, -1, sizeof(::minknow_api::basecaller::StartBarcodingRequest)},
  { 82, -1, -1, sizeof(::minknow_api::basecaller::StartBarcodingResponse)},
  { 89, -1, -1, sizeof(::minknow_api::basecaller::StartAlignmentRequest)},
  { 100, -1, -1, sizeof(::minknow_api::basecaller::StartAlignmentResponse)},
  { 107, 115, -1, sizeof(::minknow_api::basecaller::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse)},
  { 117, -1, -1, sizeof(::minknow_api::basecaller::StartPostProcessingProtocolRequest)},
  { 130, -1, -1, sizeof(::minknow_api::basecaller::StartRequest)},
  { 141, -1, -1, sizeof(::minknow_api::basecaller::StartPostProcessingProtocolResponse)},
  { 148, -1, -1, sizeof(::minknow_api::basecaller::CancelRequest)},
  { 155, -1, -1, sizeof(::minknow_api::basecaller::CancelResponse)},
  { 161, -1, -1, sizeof(::minknow_api::basecaller::RunInfo)},
  { 181, -1, -1, sizeof(::minknow_api::basecaller::GetInfoRequest_IdList)},
  { 188, -1, -1, sizeof(::minknow_api::basecaller::GetInfoRequest)},
  { 198, -1, -1, sizeof(::minknow_api::basecaller::GetInfoResponse)},
  { 205, -1, -1, sizeof(::minknow_api::basecaller::WatchRequest)},
  { 212, -1, -1, sizeof(::minknow_api::basecaller::WatchResponse)},
  { 219, -1, -1, sizeof(::minknow_api::basecaller::MakeAlignmentIndexRequest)},
  { 227, -1, -1, sizeof(::minknow_api::basecaller::MakeAlignmentIndexResponse)},
  { 233, -1, -1, sizeof(::minknow_api::basecaller::ListPostProcessingProtocolsRequest)},
  { 239, -1, -1, sizeof(::minknow_api::basecaller::PostProcessingProtocolInfo)},
  { 247, -1, -1, sizeof(::minknow_api::basecaller::ListPostProcessingProtocolsResponse)},
  { 254, -1, -1, sizeof(::minknow_api::basecaller::ListSettingsForPostProcessingProtocolRequest)},
  { 261, -1, -1, sizeof(::minknow_api::basecaller::ListSettingsForPostProcessingProtocolResponse)},
  { 271, -1, -1, sizeof(::minknow_api::basecaller::UpdateProgressRequest)},
  { 279, -1, -1, sizeof(::minknow_api::basecaller::UpdateProgressResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListConfigsByKitRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListConfigsByKitResponse_ConfigList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListConfigsByKitResponse_PerFlowCell_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListConfigsByKitResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartBasecallingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartBasecallingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartBarcodingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartBarcodingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartAlignmentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartAlignmentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartPostProcessingProtocolRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_StartPostProcessingProtocolResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_CancelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_CancelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_RunInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_GetInfoRequest_IdList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_GetInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_GetInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_WatchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_WatchResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_MakeAlignmentIndexRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_MakeAlignmentIndexResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListPostProcessingProtocolsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_PostProcessingProtocolInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListPostProcessingProtocolsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListSettingsForPostProcessingProtocolRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_ListSettingsForPostProcessingProtocolResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_UpdateProgressRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::minknow_api::basecaller::_UpdateProgressResponse_default_instance_),
};

const char descriptor_table_protodef_minknow_5fapi_2fbasecaller_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034minknow_api/basecaller.proto\022\026minknow_"
  "api.basecaller\032\037google/protobuf/timestam"
  "p.proto\032(minknow_api/analysis_configurat"
  "ion.proto\032#minknow_api/protocol_settings"
  ".proto\"\031\n\027ListConfigsByKitRequest\"\364\003\n\030Li"
  "stConfigsByKitResponse\022`\n\021flow_cell_conf"
  "igs\030\001 \003(\0132E.minknow_api.basecaller.ListC"
  "onfigsByKitResponse.FlowCellConfigsEntry"
  "\032\035\n\nConfigList\022\017\n\007configs\030\001 \003(\t\032\340\001\n\013PerF"
  "lowCell\022a\n\013kit_configs\030\001 \003(\0132L.minknow_a"
  "pi.basecaller.ListConfigsByKitResponse.P"
  "erFlowCell.KitConfigsEntry\032n\n\017KitConfigs"
  "Entry\022\013\n\003key\030\001 \001(\t\022J\n\005value\030\002 \001(\0132;.mink"
  "now_api.basecaller.ListConfigsByKitRespo"
  "nse.ConfigList:\0028\001\032t\n\024FlowCellConfigsEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022K\n\005value\030\002 \001(\0132<.minknow"
  "_api.basecaller.ListConfigsByKitResponse"
  ".PerFlowCell:\0028\001\"\217\003\n\027StartBasecallingReq"
  "uest\022\014\n\004name\030\014 \001(\t\022\037\n\027input_reads_direct"
  "ories\030\001 \003(\t\022\036\n\026output_reads_directory\030\002 "
  "\001(\t\022\025\n\rconfiguration\030\003 \001(\t\022\021\n\tfast5_out\030"
  "\004 \001(\010\022\026\n\016compress_fastq\030\005 \001(\010\022\026\n\016disable"
  "_events\030\006 \001(\010\022\021\n\trecursive\030\007 \001(\010\022[\n\027barc"
  "oding_configuration\030\n \001(\0132:.minknow_api."
  "analysis_configuration.BarcodingConfigur"
  "ation\022[\n\027alignment_configuration\030\013 \001(\0132:"
  ".minknow_api.analysis_configuration.Alig"
  "nmentConfiguration\"&\n\030StartBasecallingRe"
  "sponse\022\n\n\002id\030\001 \001(\t\"\356\001\n\025StartBarcodingReq"
  "uest\022\014\n\004name\030\013 \001(\t\022\037\n\027input_reads_direct"
  "ories\030\001 \003(\t\022\036\n\026output_reads_directory\030\002 "
  "\001(\t\022\026\n\016compress_fastq\030\004 \001(\010\022\021\n\trecursive"
  "\030\005 \001(\010\022[\n\027barcoding_configuration\030\n \001(\0132"
  ":.minknow_api.analysis_configuration.Bar"
  "codingConfiguration\"$\n\026StartBarcodingRes"
  "ponse\022\n\n\002id\030\001 \001(\t\"\326\001\n\025StartAlignmentRequ"
  "est\022\014\n\004name\030\007 \001(\t\022\037\n\027input_reads_directo"
  "ries\030\001 \003(\t\022\036\n\026output_reads_directory\030\002 \001"
  "(\t\022\021\n\trecursive\030\004 \001(\010\022[\n\027alignment_confi"
  "guration\030\006 \001(\0132:.minknow_api.analysis_co"
  "nfiguration.AlignmentConfiguration\"$\n\026St"
  "artAlignmentResponse\022\n\n\002id\030\001 \001(\t\"\263\003\n\"Sta"
  "rtPostProcessingProtocolRequest\022\022\n\nident"
  "ifier\030\001 \001(\t\022\"\n\032sequencing_protocol_run_i"
  "d\030\007 \001(\t\022\035\n\025input_fast5_directory\030\002 \001(\t\022\035"
  "\n\025input_fastq_directory\030\003 \001(\t\022\033\n\023input_b"
  "am_directory\030\004 \001(\t\022\030\n\020output_directory\030\005"
  " \001(\t\022e\n\016setting_values\030\006 \003(\0132M.minknow_a"
  "pi.basecaller.StartPostProcessingProtoco"
  "lRequest.SettingValuesEntry\032y\n\022SettingVa"
  "luesEntry\022\013\n\003key\030\001 \001(\t\022R\n\005value\030\002 \001(\0132C."
  "minknow_api.protocol_settings.ProtocolSe"
  "tting.ProtocolSettingValue:\0028\001\"\207\003\n\014Start"
  "Request\022T\n\031start_basecalling_request\030\002 \001"
  "(\0132/.minknow_api.basecaller.StartBasecal"
  "lingRequestH\000\022P\n\027start_barcoding_request"
  "\030\003 \001(\0132-.minknow_api.basecaller.StartBar"
  "codingRequestH\000\022P\n\027start_alignment_reque"
  "st\030\004 \001(\0132-.minknow_api.basecaller.StartA"
  "lignmentRequestH\000\022l\n&start_post_processi"
  "ng_protocol_request\030\005 \001(\0132:.minknow_api."
  "basecaller.StartPostProcessingProtocolRe"
  "questH\000B\017\n\rstart_request\"1\n#StartPostPro"
  "cessingProtocolResponse\022\n\n\002id\030\001 \001(\t\"\033\n\rC"
  "ancelRequest\022\n\n\002id\030\001 \001(\t\"\020\n\016CancelRespon"
  "se\"\264\005\n\007RunInfo\022\n\n\002id\030\001 \001(\t\022T\n\031start_base"
  "calling_request\030\002 \001(\0132/.minknow_api.base"
  "caller.StartBasecallingRequestH\000\022P\n\027star"
  "t_barcoding_request\030\013 \001(\0132-.minknow_api."
  "basecaller.StartBarcodingRequestH\000\022P\n\027st"
  "art_alignment_request\030\014 \001(\0132-.minknow_ap"
  "i.basecaller.StartAlignmentRequestH\000\022l\n&"
  "start_post_processing_protocol_request\030\r"
  " \001(\0132:.minknow_api.basecaller.StartPostP"
  "rocessingProtocolRequestH\000\022,\n\005state\030\003 \001("
  "\0162\035.minknow_api.basecaller.State\022\016\n\006erro"
  "rs\030\004 \003(\t\022\030\n\020files_discovered\030\005 \001(\005\022\030\n\020pr"
  "ogress_current\030\006 \001(\005\022\026\n\016progress_total\030\007"
  " \001(\005\022.\n\nstart_time\030\010 \001(\0132\032.google.protob"
  "uf.Timestamp\022,\n\010end_time\030\t \001(\0132\032.google."
  "protobuf.Timestamp\0226\n\022estimated_end_time"
  "\030\n \001(\0132\032.google.protobuf.TimestampB\025\n\023st"
  "art_request_oneof\"\274\001\n\016GetInfoRequest\0229\n\006"
  "preset\030\001 \001(\0162\'.minknow_api.basecaller.Se"
  "lectionPresetH\000\022\014\n\002id\030\002 \001(\tH\000\022=\n\004list\030\003 "
  "\001(\0132-.minknow_api.basecaller.GetInfoRequ"
  "est.IdListH\000\032\025\n\006IdList\022\013\n\003ids\030\001 \003(\tB\013\n\ts"
  "election\"@\n\017GetInfoResponse\022-\n\004runs\030\001 \003("
  "\0132\037.minknow_api.basecaller.RunInfo\"*\n\014Wa"
  "tchRequest\022\032\n\022send_finished_runs\030\001 \001(\010\">"
  "\n\rWatchResponse\022-\n\004runs\030\001 \003(\0132\037.minknow_"
  "api.basecaller.RunInfo\"^\n\031MakeAlignmentI"
  "ndexRequest\022!\n\031input_alignment_reference"
  "\030\001 \001(\t\022\036\n\026output_alignment_index\030\002 \001(\t\"\034"
  "\n\032MakeAlignmentIndexResponse\"$\n\"ListPost"
  "ProcessingProtocolsRequest\">\n\032PostProces"
  "singProtocolInfo\022\022\n\nidentifier\030\001 \001(\t\022\014\n\004"
  "name\030\002 \001(\t\"l\n#ListPostProcessingProtocol"
  "sResponse\022E\n\tprotocols\030\001 \003(\01322.minknow_a"
  "pi.basecaller.PostProcessingProtocolInfo"
  "\"B\n,ListSettingsForPostProcessingProtoco"
  "lRequest\022\022\n\nidentifier\030\001 \001(\t\"\322\001\n-ListSet"
  "tingsForPostProcessingProtocolResponse\022\034"
  "\n\024requires_fast5_input\030\001 \001(\010\022\034\n\024requires"
  "_fastq_input\030\002 \001(\010\022\032\n\022requires_bam_input"
  "\030\003 \001(\010\022I\n\021protocol_settings\030\004 \003(\0132..mink"
  "now_api.protocol_settings.ProtocolSettin"
  "g\"5\n\025UpdateProgressRequest\022\n\n\002id\030\001 \001(\t\022\020"
  "\n\010progress\030\002 \001(\002\"\030\n\026UpdateProgressRespon"
  "se*S\n\005State\022\021\n\rSTATE_RUNNING\020\000\022\021\n\rSTATE_"
  "SUCCESS\020\001\022\017\n\013STATE_ERROR\020\002\022\023\n\017STATE_CANC"
  "ELLED\020\003*[\n\017SelectionPreset\022\026\n\022PRESET_ALL"
  "_RUNNING\020\000\022 \n\034PRESET_MOST_RECENTLY_START"
  "ED\020\001\022\016\n\nPRESET_ALL\020\0022\233\014\n\nBasecaller\022}\n\023l"
  "ist_configs_by_kit\022/.minknow_api.basecal"
  "ler.ListConfigsByKitRequest\0320.minknow_ap"
  "i.basecaller.ListConfigsByKitResponse\"\003\220"
  "\002\001\022x\n\021start_basecalling\022/.minknow_api.ba"
  "secaller.StartBasecallingRequest\0320.minkn"
  "ow_api.basecaller.StartBasecallingRespon"
  "se\"\000\022r\n\017start_barcoding\022-.minknow_api.ba"
  "secaller.StartBarcodingRequest\032..minknow"
  "_api.basecaller.StartBarcodingResponse\"\000"
  "\022\233\001\n\036start_post_processing_protocol\022:.mi"
  "nknow_api.basecaller.StartPostProcessing"
  "ProtocolRequest\032;.minknow_api.basecaller"
  ".StartPostProcessingProtocolResponse\"\000\022r"
  "\n\017start_alignment\022-.minknow_api.basecall"
  "er.StartAlignmentRequest\032..minknow_api.b"
  "asecaller.StartAlignmentResponse\"\000\022\\\n\006ca"
  "ncel\022%.minknow_api.basecaller.CancelRequ"
  "est\032&.minknow_api.basecaller.CancelRespo"
  "nse\"\003\220\002\002\022b\n\010get_info\022&.minknow_api.basec"
  "aller.GetInfoRequest\032\'.minknow_api.basec"
  "aller.GetInfoResponse\"\003\220\002\0010\001\022[\n\005watch\022$."
  "minknow_api.basecaller.WatchRequest\032%.mi"
  "nknow_api.basecaller.WatchResponse\"\003\220\002\0010"
  "\001\022\177\n\024make_alignment_index\0221.minknow_api."
  "basecaller.MakeAlignmentIndexRequest\0322.m"
  "inknow_api.basecaller.MakeAlignmentIndex"
  "Response\"\000\022\236\001\n\036list_post_processing_prot"
  "ocols\022:.minknow_api.basecaller.ListPostP"
  "rocessingProtocolsRequest\032;.minknow_api."
  "basecaller.ListPostProcessingProtocolsRe"
  "sponse\"\003\220\002\002\022\276\001\n*list_settings_for_post_p"
  "rocessing_protocol\022D.minknow_api.basecal"
  "ler.ListSettingsForPostProcessingProtoco"
  "lRequest\032E.minknow_api.basecaller.ListSe"
  "ttingsForPostProcessingProtocolResponse\""
  "\003\220\002\001\022\213\001\n(update_post_processing_protocol"
  "_progress\022-.minknow_api.basecaller.Updat"
  "eProgressRequest\032..minknow_api.basecalle"
  "r.UpdateProgressResponse\"\000B&\n\034com.nanopo"
  "retech.minknow_api\242\002\005MKAPIb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_minknow_5fapi_2fbasecaller_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_minknow_5fapi_2fanalysis_5fconfiguration_2eproto,
  &::descriptor_table_minknow_5fapi_2fprotocol_5fsettings_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_minknow_5fapi_2fbasecaller_2eproto = {
  false, false, 6154, descriptor_table_protodef_minknow_5fapi_2fbasecaller_2eproto, "minknow_api/basecaller.proto", 
  &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once, descriptor_table_minknow_5fapi_2fbasecaller_2eproto_deps, 3, 33,
  schemas, file_default_instances, TableStruct_minknow_5fapi_2fbasecaller_2eproto::offsets,
  file_level_metadata_minknow_5fapi_2fbasecaller_2eproto, file_level_enum_descriptors_minknow_5fapi_2fbasecaller_2eproto, file_level_service_descriptors_minknow_5fapi_2fbasecaller_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter() {
  return &descriptor_table_minknow_5fapi_2fbasecaller_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_minknow_5fapi_2fbasecaller_2eproto(&descriptor_table_minknow_5fapi_2fbasecaller_2eproto);
namespace minknow_api {
namespace basecaller {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_minknow_5fapi_2fbasecaller_2eproto);
  return file_level_enum_descriptors_minknow_5fapi_2fbasecaller_2eproto[0];
}
bool State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SelectionPreset_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_minknow_5fapi_2fbasecaller_2eproto);
  return file_level_enum_descriptors_minknow_5fapi_2fbasecaller_2eproto[1];
}
bool SelectionPreset_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class ListConfigsByKitRequest::_Internal {
 public:
};

ListConfigsByKitRequest::ListConfigsByKitRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.ListConfigsByKitRequest)
}
ListConfigsByKitRequest::ListConfigsByKitRequest(const ListConfigsByKitRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.ListConfigsByKitRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListConfigsByKitRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListConfigsByKitRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListConfigsByKitRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[0]);
}

// ===================================================================

class ListConfigsByKitResponse_ConfigList::_Internal {
 public:
};

ListConfigsByKitResponse_ConfigList::ListConfigsByKitResponse_ConfigList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  configs_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.ListConfigsByKitResponse.ConfigList)
}
ListConfigsByKitResponse_ConfigList::ListConfigsByKitResponse_ConfigList(const ListConfigsByKitResponse_ConfigList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      configs_(from.configs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.ListConfigsByKitResponse.ConfigList)
}

void ListConfigsByKitResponse_ConfigList::SharedCtor() {
}

ListConfigsByKitResponse_ConfigList::~ListConfigsByKitResponse_ConfigList() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.ListConfigsByKitResponse.ConfigList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListConfigsByKitResponse_ConfigList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListConfigsByKitResponse_ConfigList::ArenaDtor(void* object) {
  ListConfigsByKitResponse_ConfigList* _this = reinterpret_cast< ListConfigsByKitResponse_ConfigList* >(object);
  (void)_this;
}
void ListConfigsByKitResponse_ConfigList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListConfigsByKitResponse_ConfigList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListConfigsByKitResponse_ConfigList::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.ListConfigsByKitResponse.ConfigList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListConfigsByKitResponse_ConfigList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_configs();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.ListConfigsByKitResponse.ConfigList.configs"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListConfigsByKitResponse_ConfigList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.ListConfigsByKitResponse.ConfigList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string configs = 1;
  for (int i = 0, n = this->_internal_configs_size(); i < n; i++) {
    const auto& s = this->_internal_configs(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.ListConfigsByKitResponse.ConfigList.configs");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.ListConfigsByKitResponse.ConfigList)
  return target;
}

size_t ListConfigsByKitResponse_ConfigList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.ListConfigsByKitResponse.ConfigList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string configs = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(configs_.size());
  for (int i = 0, n = configs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      configs_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListConfigsByKitResponse_ConfigList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListConfigsByKitResponse_ConfigList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListConfigsByKitResponse_ConfigList::GetClassData() const { return &_class_data_; }

void ListConfigsByKitResponse_ConfigList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListConfigsByKitResponse_ConfigList *>(to)->MergeFrom(
      static_cast<const ListConfigsByKitResponse_ConfigList &>(from));
}


void ListConfigsByKitResponse_ConfigList::MergeFrom(const ListConfigsByKitResponse_ConfigList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.ListConfigsByKitResponse.ConfigList)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  configs_.MergeFrom(from.configs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListConfigsByKitResponse_ConfigList::CopyFrom(const ListConfigsByKitResponse_ConfigList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.ListConfigsByKitResponse.ConfigList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListConfigsByKitResponse_ConfigList::IsInitialized() const {
  return true;
}

void ListConfigsByKitResponse_ConfigList::InternalSwap(ListConfigsByKitResponse_ConfigList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  configs_.InternalSwap(&other->configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListConfigsByKitResponse_ConfigList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[1]);
}

// ===================================================================

ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse() {}
ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse::MergeFrom(const ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[2]);
}

// ===================================================================

class ListConfigsByKitResponse_PerFlowCell::_Internal {
 public:
};

ListConfigsByKitResponse_PerFlowCell::ListConfigsByKitResponse_PerFlowCell(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  kit_configs_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell)
}
ListConfigsByKitResponse_PerFlowCell::ListConfigsByKitResponse_PerFlowCell(const ListConfigsByKitResponse_PerFlowCell& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  kit_configs_.MergeFrom(from.kit_configs_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell)
}

void ListConfigsByKitResponse_PerFlowCell::SharedCtor() {
}

ListConfigsByKitResponse_PerFlowCell::~ListConfigsByKitResponse_PerFlowCell() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListConfigsByKitResponse_PerFlowCell::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListConfigsByKitResponse_PerFlowCell::ArenaDtor(void* object) {
  ListConfigsByKitResponse_PerFlowCell* _this = reinterpret_cast< ListConfigsByKitResponse_PerFlowCell* >(object);
  (void)_this;
  _this->kit_configs_. ~MapField();
}
inline void ListConfigsByKitResponse_PerFlowCell::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ListConfigsByKitResponse_PerFlowCell::ArenaDtor);
  }
}
void ListConfigsByKitResponse_PerFlowCell::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListConfigsByKitResponse_PerFlowCell::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kit_configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListConfigsByKitResponse_PerFlowCell::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .minknow_api.basecaller.ListConfigsByKitResponse.ConfigList> kit_configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&kit_configs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListConfigsByKitResponse_PerFlowCell::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .minknow_api.basecaller.ListConfigsByKitResponse.ConfigList> kit_configs = 1;
  if (!this->_internal_kit_configs().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell.KitConfigsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_kit_configs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_kit_configs().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList >::const_iterator
          it = this->_internal_kit_configs().begin();
          it != this->_internal_kit_configs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList >::const_iterator
          it = this->_internal_kit_configs().begin();
          it != this->_internal_kit_configs().end(); ++it) {
        target = ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell)
  return target;
}

size_t ListConfigsByKitResponse_PerFlowCell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .minknow_api.basecaller.ListConfigsByKitResponse.ConfigList> kit_configs = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_kit_configs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList >::const_iterator
      it = this->_internal_kit_configs().begin();
      it != this->_internal_kit_configs().end(); ++it) {
    total_size += ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListConfigsByKitResponse_PerFlowCell::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListConfigsByKitResponse_PerFlowCell::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListConfigsByKitResponse_PerFlowCell::GetClassData() const { return &_class_data_; }

void ListConfigsByKitResponse_PerFlowCell::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListConfigsByKitResponse_PerFlowCell *>(to)->MergeFrom(
      static_cast<const ListConfigsByKitResponse_PerFlowCell &>(from));
}


void ListConfigsByKitResponse_PerFlowCell::MergeFrom(const ListConfigsByKitResponse_PerFlowCell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kit_configs_.MergeFrom(from.kit_configs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListConfigsByKitResponse_PerFlowCell::CopyFrom(const ListConfigsByKitResponse_PerFlowCell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListConfigsByKitResponse_PerFlowCell::IsInitialized() const {
  return true;
}

void ListConfigsByKitResponse_PerFlowCell::InternalSwap(ListConfigsByKitResponse_PerFlowCell* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  kit_configs_.InternalSwap(&other->kit_configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListConfigsByKitResponse_PerFlowCell::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[3]);
}

// ===================================================================

ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse() {}
ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse::MergeFrom(const ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[4]);
}

// ===================================================================

class ListConfigsByKitResponse::_Internal {
 public:
};

ListConfigsByKitResponse::ListConfigsByKitResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  flow_cell_configs_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.ListConfigsByKitResponse)
}
ListConfigsByKitResponse::ListConfigsByKitResponse(const ListConfigsByKitResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  flow_cell_configs_.MergeFrom(from.flow_cell_configs_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.ListConfigsByKitResponse)
}

void ListConfigsByKitResponse::SharedCtor() {
}

ListConfigsByKitResponse::~ListConfigsByKitResponse() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.ListConfigsByKitResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListConfigsByKitResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListConfigsByKitResponse::ArenaDtor(void* object) {
  ListConfigsByKitResponse* _this = reinterpret_cast< ListConfigsByKitResponse* >(object);
  (void)_this;
  _this->flow_cell_configs_. ~MapField();
}
inline void ListConfigsByKitResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ListConfigsByKitResponse::ArenaDtor);
  }
}
void ListConfigsByKitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListConfigsByKitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.ListConfigsByKitResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flow_cell_configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListConfigsByKitResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell> flow_cell_configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&flow_cell_configs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListConfigsByKitResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.ListConfigsByKitResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell> flow_cell_configs = 1;
  if (!this->_internal_flow_cell_configs().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "minknow_api.basecaller.ListConfigsByKitResponse.FlowCellConfigsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_flow_cell_configs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_flow_cell_configs().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell >::const_iterator
          it = this->_internal_flow_cell_configs().begin();
          it != this->_internal_flow_cell_configs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell >::const_iterator
          it = this->_internal_flow_cell_configs().begin();
          it != this->_internal_flow_cell_configs().end(); ++it) {
        target = ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.ListConfigsByKitResponse)
  return target;
}

size_t ListConfigsByKitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.ListConfigsByKitResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .minknow_api.basecaller.ListConfigsByKitResponse.PerFlowCell> flow_cell_configs = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_flow_cell_configs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell >::const_iterator
      it = this->_internal_flow_cell_configs().begin();
      it != this->_internal_flow_cell_configs().end(); ++it) {
    total_size += ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListConfigsByKitResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListConfigsByKitResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListConfigsByKitResponse::GetClassData() const { return &_class_data_; }

void ListConfigsByKitResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListConfigsByKitResponse *>(to)->MergeFrom(
      static_cast<const ListConfigsByKitResponse &>(from));
}


void ListConfigsByKitResponse::MergeFrom(const ListConfigsByKitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.ListConfigsByKitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  flow_cell_configs_.MergeFrom(from.flow_cell_configs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListConfigsByKitResponse::CopyFrom(const ListConfigsByKitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.ListConfigsByKitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListConfigsByKitResponse::IsInitialized() const {
  return true;
}

void ListConfigsByKitResponse::InternalSwap(ListConfigsByKitResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  flow_cell_configs_.InternalSwap(&other->flow_cell_configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListConfigsByKitResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[5]);
}

// ===================================================================

class StartBasecallingRequest::_Internal {
 public:
  static const ::minknow_api::analysis_configuration::BarcodingConfiguration& barcoding_configuration(const StartBasecallingRequest* msg);
  static const ::minknow_api::analysis_configuration::AlignmentConfiguration& alignment_configuration(const StartBasecallingRequest* msg);
};

const ::minknow_api::analysis_configuration::BarcodingConfiguration&
StartBasecallingRequest::_Internal::barcoding_configuration(const StartBasecallingRequest* msg) {
  return *msg->barcoding_configuration_;
}
const ::minknow_api::analysis_configuration::AlignmentConfiguration&
StartBasecallingRequest::_Internal::alignment_configuration(const StartBasecallingRequest* msg) {
  return *msg->alignment_configuration_;
}
void StartBasecallingRequest::clear_barcoding_configuration() {
  if (GetArenaForAllocation() == nullptr && barcoding_configuration_ != nullptr) {
    delete barcoding_configuration_;
  }
  barcoding_configuration_ = nullptr;
}
void StartBasecallingRequest::clear_alignment_configuration() {
  if (GetArenaForAllocation() == nullptr && alignment_configuration_ != nullptr) {
    delete alignment_configuration_;
  }
  alignment_configuration_ = nullptr;
}
StartBasecallingRequest::StartBasecallingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  input_reads_directories_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.StartBasecallingRequest)
}
StartBasecallingRequest::StartBasecallingRequest(const StartBasecallingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      input_reads_directories_(from.input_reads_directories_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  output_reads_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_reads_directory().empty()) {
    output_reads_directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_output_reads_directory(), 
      GetArenaForAllocation());
  }
  configuration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_configuration().empty()) {
    configuration_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_configuration(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_barcoding_configuration()) {
    barcoding_configuration_ = new ::minknow_api::analysis_configuration::BarcodingConfiguration(*from.barcoding_configuration_);
  } else {
    barcoding_configuration_ = nullptr;
  }
  if (from._internal_has_alignment_configuration()) {
    alignment_configuration_ = new ::minknow_api::analysis_configuration::AlignmentConfiguration(*from.alignment_configuration_);
  } else {
    alignment_configuration_ = nullptr;
  }
  ::memcpy(&fast5_out_, &from.fast5_out_,
    static_cast<size_t>(reinterpret_cast<char*>(&recursive_) -
    reinterpret_cast<char*>(&fast5_out_)) + sizeof(recursive_));
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.StartBasecallingRequest)
}

void StartBasecallingRequest::SharedCtor() {
output_reads_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
configuration_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&barcoding_configuration_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&recursive_) -
    reinterpret_cast<char*>(&barcoding_configuration_)) + sizeof(recursive_));
}

StartBasecallingRequest::~StartBasecallingRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.StartBasecallingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartBasecallingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  output_reads_directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  configuration_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete barcoding_configuration_;
  if (this != internal_default_instance()) delete alignment_configuration_;
}

void StartBasecallingRequest::ArenaDtor(void* object) {
  StartBasecallingRequest* _this = reinterpret_cast< StartBasecallingRequest* >(object);
  (void)_this;
}
void StartBasecallingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartBasecallingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartBasecallingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.StartBasecallingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_reads_directories_.Clear();
  output_reads_directory_.ClearToEmpty();
  configuration_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && barcoding_configuration_ != nullptr) {
    delete barcoding_configuration_;
  }
  barcoding_configuration_ = nullptr;
  if (GetArenaForAllocation() == nullptr && alignment_configuration_ != nullptr) {
    delete alignment_configuration_;
  }
  alignment_configuration_ = nullptr;
  ::memset(&fast5_out_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recursive_) -
      reinterpret_cast<char*>(&fast5_out_)) + sizeof(recursive_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartBasecallingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string input_reads_directories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_input_reads_directories();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartBasecallingRequest.input_reads_directories"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string output_reads_directory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_output_reads_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartBasecallingRequest.output_reads_directory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string configuration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_configuration();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartBasecallingRequest.configuration"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool fast5_out = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          fast5_out_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool compress_fastq = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          compress_fastq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool disable_events = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          disable_events_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool recursive = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          recursive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.analysis_configuration.BarcodingConfiguration barcoding_configuration = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_barcoding_configuration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.analysis_configuration.AlignmentConfiguration alignment_configuration = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment_configuration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartBasecallingRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartBasecallingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.StartBasecallingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string input_reads_directories = 1;
  for (int i = 0, n = this->_internal_input_reads_directories_size(); i < n; i++) {
    const auto& s = this->_internal_input_reads_directories(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartBasecallingRequest.input_reads_directories");
    target = stream->WriteString(1, s, target);
  }

  // string output_reads_directory = 2;
  if (!this->_internal_output_reads_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_reads_directory().data(), static_cast<int>(this->_internal_output_reads_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartBasecallingRequest.output_reads_directory");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_output_reads_directory(), target);
  }

  // string configuration = 3;
  if (!this->_internal_configuration().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_configuration().data(), static_cast<int>(this->_internal_configuration().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartBasecallingRequest.configuration");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_configuration(), target);
  }

  // bool fast5_out = 4;
  if (this->_internal_fast5_out() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_fast5_out(), target);
  }

  // bool compress_fastq = 5;
  if (this->_internal_compress_fastq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_compress_fastq(), target);
  }

  // bool disable_events = 6;
  if (this->_internal_disable_events() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_disable_events(), target);
  }

  // bool recursive = 7;
  if (this->_internal_recursive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_recursive(), target);
  }

  // .minknow_api.analysis_configuration.BarcodingConfiguration barcoding_configuration = 10;
  if (this->_internal_has_barcoding_configuration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::barcoding_configuration(this), target, stream);
  }

  // .minknow_api.analysis_configuration.AlignmentConfiguration alignment_configuration = 11;
  if (this->_internal_has_alignment_configuration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::alignment_configuration(this), target, stream);
  }

  // string name = 12;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartBasecallingRequest.name");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.StartBasecallingRequest)
  return target;
}

size_t StartBasecallingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.StartBasecallingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string input_reads_directories = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(input_reads_directories_.size());
  for (int i = 0, n = input_reads_directories_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      input_reads_directories_.Get(i));
  }

  // string output_reads_directory = 2;
  if (!this->_internal_output_reads_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_reads_directory());
  }

  // string configuration = 3;
  if (!this->_internal_configuration().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_configuration());
  }

  // string name = 12;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .minknow_api.analysis_configuration.BarcodingConfiguration barcoding_configuration = 10;
  if (this->_internal_has_barcoding_configuration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *barcoding_configuration_);
  }

  // .minknow_api.analysis_configuration.AlignmentConfiguration alignment_configuration = 11;
  if (this->_internal_has_alignment_configuration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alignment_configuration_);
  }

  // bool fast5_out = 4;
  if (this->_internal_fast5_out() != 0) {
    total_size += 1 + 1;
  }

  // bool compress_fastq = 5;
  if (this->_internal_compress_fastq() != 0) {
    total_size += 1 + 1;
  }

  // bool disable_events = 6;
  if (this->_internal_disable_events() != 0) {
    total_size += 1 + 1;
  }

  // bool recursive = 7;
  if (this->_internal_recursive() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartBasecallingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartBasecallingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartBasecallingRequest::GetClassData() const { return &_class_data_; }

void StartBasecallingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartBasecallingRequest *>(to)->MergeFrom(
      static_cast<const StartBasecallingRequest &>(from));
}


void StartBasecallingRequest::MergeFrom(const StartBasecallingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.StartBasecallingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_reads_directories_.MergeFrom(from.input_reads_directories_);
  if (!from._internal_output_reads_directory().empty()) {
    _internal_set_output_reads_directory(from._internal_output_reads_directory());
  }
  if (!from._internal_configuration().empty()) {
    _internal_set_configuration(from._internal_configuration());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_barcoding_configuration()) {
    _internal_mutable_barcoding_configuration()->::minknow_api::analysis_configuration::BarcodingConfiguration::MergeFrom(from._internal_barcoding_configuration());
  }
  if (from._internal_has_alignment_configuration()) {
    _internal_mutable_alignment_configuration()->::minknow_api::analysis_configuration::AlignmentConfiguration::MergeFrom(from._internal_alignment_configuration());
  }
  if (from._internal_fast5_out() != 0) {
    _internal_set_fast5_out(from._internal_fast5_out());
  }
  if (from._internal_compress_fastq() != 0) {
    _internal_set_compress_fastq(from._internal_compress_fastq());
  }
  if (from._internal_disable_events() != 0) {
    _internal_set_disable_events(from._internal_disable_events());
  }
  if (from._internal_recursive() != 0) {
    _internal_set_recursive(from._internal_recursive());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartBasecallingRequest::CopyFrom(const StartBasecallingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.StartBasecallingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartBasecallingRequest::IsInitialized() const {
  return true;
}

void StartBasecallingRequest::InternalSwap(StartBasecallingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  input_reads_directories_.InternalSwap(&other->input_reads_directories_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &output_reads_directory_, lhs_arena,
      &other->output_reads_directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &configuration_, lhs_arena,
      &other->configuration_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartBasecallingRequest, recursive_)
      + sizeof(StartBasecallingRequest::recursive_)
      - PROTOBUF_FIELD_OFFSET(StartBasecallingRequest, barcoding_configuration_)>(
          reinterpret_cast<char*>(&barcoding_configuration_),
          reinterpret_cast<char*>(&other->barcoding_configuration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StartBasecallingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[6]);
}

// ===================================================================

class StartBasecallingResponse::_Internal {
 public:
};

StartBasecallingResponse::StartBasecallingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.StartBasecallingResponse)
}
StartBasecallingResponse::StartBasecallingResponse(const StartBasecallingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.StartBasecallingResponse)
}

void StartBasecallingResponse::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartBasecallingResponse::~StartBasecallingResponse() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.StartBasecallingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartBasecallingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartBasecallingResponse::ArenaDtor(void* object) {
  StartBasecallingResponse* _this = reinterpret_cast< StartBasecallingResponse* >(object);
  (void)_this;
}
void StartBasecallingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartBasecallingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartBasecallingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.StartBasecallingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartBasecallingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartBasecallingResponse.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartBasecallingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.StartBasecallingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartBasecallingResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.StartBasecallingResponse)
  return target;
}

size_t StartBasecallingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.StartBasecallingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartBasecallingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartBasecallingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartBasecallingResponse::GetClassData() const { return &_class_data_; }

void StartBasecallingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartBasecallingResponse *>(to)->MergeFrom(
      static_cast<const StartBasecallingResponse &>(from));
}


void StartBasecallingResponse::MergeFrom(const StartBasecallingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.StartBasecallingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartBasecallingResponse::CopyFrom(const StartBasecallingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.StartBasecallingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartBasecallingResponse::IsInitialized() const {
  return true;
}

void StartBasecallingResponse::InternalSwap(StartBasecallingResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StartBasecallingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[7]);
}

// ===================================================================

class StartBarcodingRequest::_Internal {
 public:
  static const ::minknow_api::analysis_configuration::BarcodingConfiguration& barcoding_configuration(const StartBarcodingRequest* msg);
};

const ::minknow_api::analysis_configuration::BarcodingConfiguration&
StartBarcodingRequest::_Internal::barcoding_configuration(const StartBarcodingRequest* msg) {
  return *msg->barcoding_configuration_;
}
void StartBarcodingRequest::clear_barcoding_configuration() {
  if (GetArenaForAllocation() == nullptr && barcoding_configuration_ != nullptr) {
    delete barcoding_configuration_;
  }
  barcoding_configuration_ = nullptr;
}
StartBarcodingRequest::StartBarcodingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  input_reads_directories_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.StartBarcodingRequest)
}
StartBarcodingRequest::StartBarcodingRequest(const StartBarcodingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      input_reads_directories_(from.input_reads_directories_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  output_reads_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_reads_directory().empty()) {
    output_reads_directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_output_reads_directory(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_barcoding_configuration()) {
    barcoding_configuration_ = new ::minknow_api::analysis_configuration::BarcodingConfiguration(*from.barcoding_configuration_);
  } else {
    barcoding_configuration_ = nullptr;
  }
  ::memcpy(&compress_fastq_, &from.compress_fastq_,
    static_cast<size_t>(reinterpret_cast<char*>(&recursive_) -
    reinterpret_cast<char*>(&compress_fastq_)) + sizeof(recursive_));
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.StartBarcodingRequest)
}

void StartBarcodingRequest::SharedCtor() {
output_reads_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&barcoding_configuration_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&recursive_) -
    reinterpret_cast<char*>(&barcoding_configuration_)) + sizeof(recursive_));
}

StartBarcodingRequest::~StartBarcodingRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.StartBarcodingRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartBarcodingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  output_reads_directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete barcoding_configuration_;
}

void StartBarcodingRequest::ArenaDtor(void* object) {
  StartBarcodingRequest* _this = reinterpret_cast< StartBarcodingRequest* >(object);
  (void)_this;
}
void StartBarcodingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartBarcodingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartBarcodingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.StartBarcodingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_reads_directories_.Clear();
  output_reads_directory_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && barcoding_configuration_ != nullptr) {
    delete barcoding_configuration_;
  }
  barcoding_configuration_ = nullptr;
  ::memset(&compress_fastq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recursive_) -
      reinterpret_cast<char*>(&compress_fastq_)) + sizeof(recursive_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartBarcodingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string input_reads_directories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_input_reads_directories();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartBarcodingRequest.input_reads_directories"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string output_reads_directory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_output_reads_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartBarcodingRequest.output_reads_directory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool compress_fastq = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          compress_fastq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool recursive = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          recursive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.analysis_configuration.BarcodingConfiguration barcoding_configuration = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_barcoding_configuration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartBarcodingRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartBarcodingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.StartBarcodingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string input_reads_directories = 1;
  for (int i = 0, n = this->_internal_input_reads_directories_size(); i < n; i++) {
    const auto& s = this->_internal_input_reads_directories(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartBarcodingRequest.input_reads_directories");
    target = stream->WriteString(1, s, target);
  }

  // string output_reads_directory = 2;
  if (!this->_internal_output_reads_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_reads_directory().data(), static_cast<int>(this->_internal_output_reads_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartBarcodingRequest.output_reads_directory");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_output_reads_directory(), target);
  }

  // bool compress_fastq = 4;
  if (this->_internal_compress_fastq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_compress_fastq(), target);
  }

  // bool recursive = 5;
  if (this->_internal_recursive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_recursive(), target);
  }

  // .minknow_api.analysis_configuration.BarcodingConfiguration barcoding_configuration = 10;
  if (this->_internal_has_barcoding_configuration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::barcoding_configuration(this), target, stream);
  }

  // string name = 11;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartBarcodingRequest.name");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.StartBarcodingRequest)
  return target;
}

size_t StartBarcodingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.StartBarcodingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string input_reads_directories = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(input_reads_directories_.size());
  for (int i = 0, n = input_reads_directories_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      input_reads_directories_.Get(i));
  }

  // string output_reads_directory = 2;
  if (!this->_internal_output_reads_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_reads_directory());
  }

  // string name = 11;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .minknow_api.analysis_configuration.BarcodingConfiguration barcoding_configuration = 10;
  if (this->_internal_has_barcoding_configuration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *barcoding_configuration_);
  }

  // bool compress_fastq = 4;
  if (this->_internal_compress_fastq() != 0) {
    total_size += 1 + 1;
  }

  // bool recursive = 5;
  if (this->_internal_recursive() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartBarcodingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartBarcodingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartBarcodingRequest::GetClassData() const { return &_class_data_; }

void StartBarcodingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartBarcodingRequest *>(to)->MergeFrom(
      static_cast<const StartBarcodingRequest &>(from));
}


void StartBarcodingRequest::MergeFrom(const StartBarcodingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.StartBarcodingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_reads_directories_.MergeFrom(from.input_reads_directories_);
  if (!from._internal_output_reads_directory().empty()) {
    _internal_set_output_reads_directory(from._internal_output_reads_directory());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_barcoding_configuration()) {
    _internal_mutable_barcoding_configuration()->::minknow_api::analysis_configuration::BarcodingConfiguration::MergeFrom(from._internal_barcoding_configuration());
  }
  if (from._internal_compress_fastq() != 0) {
    _internal_set_compress_fastq(from._internal_compress_fastq());
  }
  if (from._internal_recursive() != 0) {
    _internal_set_recursive(from._internal_recursive());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartBarcodingRequest::CopyFrom(const StartBarcodingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.StartBarcodingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartBarcodingRequest::IsInitialized() const {
  return true;
}

void StartBarcodingRequest::InternalSwap(StartBarcodingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  input_reads_directories_.InternalSwap(&other->input_reads_directories_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &output_reads_directory_, lhs_arena,
      &other->output_reads_directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartBarcodingRequest, recursive_)
      + sizeof(StartBarcodingRequest::recursive_)
      - PROTOBUF_FIELD_OFFSET(StartBarcodingRequest, barcoding_configuration_)>(
          reinterpret_cast<char*>(&barcoding_configuration_),
          reinterpret_cast<char*>(&other->barcoding_configuration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StartBarcodingRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[8]);
}

// ===================================================================

class StartBarcodingResponse::_Internal {
 public:
};

StartBarcodingResponse::StartBarcodingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.StartBarcodingResponse)
}
StartBarcodingResponse::StartBarcodingResponse(const StartBarcodingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.StartBarcodingResponse)
}

void StartBarcodingResponse::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartBarcodingResponse::~StartBarcodingResponse() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.StartBarcodingResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartBarcodingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartBarcodingResponse::ArenaDtor(void* object) {
  StartBarcodingResponse* _this = reinterpret_cast< StartBarcodingResponse* >(object);
  (void)_this;
}
void StartBarcodingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartBarcodingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartBarcodingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.StartBarcodingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartBarcodingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartBarcodingResponse.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartBarcodingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.StartBarcodingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartBarcodingResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.StartBarcodingResponse)
  return target;
}

size_t StartBarcodingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.StartBarcodingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartBarcodingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartBarcodingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartBarcodingResponse::GetClassData() const { return &_class_data_; }

void StartBarcodingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartBarcodingResponse *>(to)->MergeFrom(
      static_cast<const StartBarcodingResponse &>(from));
}


void StartBarcodingResponse::MergeFrom(const StartBarcodingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.StartBarcodingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartBarcodingResponse::CopyFrom(const StartBarcodingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.StartBarcodingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartBarcodingResponse::IsInitialized() const {
  return true;
}

void StartBarcodingResponse::InternalSwap(StartBarcodingResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StartBarcodingResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[9]);
}

// ===================================================================

class StartAlignmentRequest::_Internal {
 public:
  static const ::minknow_api::analysis_configuration::AlignmentConfiguration& alignment_configuration(const StartAlignmentRequest* msg);
};

const ::minknow_api::analysis_configuration::AlignmentConfiguration&
StartAlignmentRequest::_Internal::alignment_configuration(const StartAlignmentRequest* msg) {
  return *msg->alignment_configuration_;
}
void StartAlignmentRequest::clear_alignment_configuration() {
  if (GetArenaForAllocation() == nullptr && alignment_configuration_ != nullptr) {
    delete alignment_configuration_;
  }
  alignment_configuration_ = nullptr;
}
StartAlignmentRequest::StartAlignmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  input_reads_directories_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.StartAlignmentRequest)
}
StartAlignmentRequest::StartAlignmentRequest(const StartAlignmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      input_reads_directories_(from.input_reads_directories_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  output_reads_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_reads_directory().empty()) {
    output_reads_directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_output_reads_directory(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_alignment_configuration()) {
    alignment_configuration_ = new ::minknow_api::analysis_configuration::AlignmentConfiguration(*from.alignment_configuration_);
  } else {
    alignment_configuration_ = nullptr;
  }
  recursive_ = from.recursive_;
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.StartAlignmentRequest)
}

void StartAlignmentRequest::SharedCtor() {
output_reads_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&alignment_configuration_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&recursive_) -
    reinterpret_cast<char*>(&alignment_configuration_)) + sizeof(recursive_));
}

StartAlignmentRequest::~StartAlignmentRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.StartAlignmentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartAlignmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  output_reads_directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete alignment_configuration_;
}

void StartAlignmentRequest::ArenaDtor(void* object) {
  StartAlignmentRequest* _this = reinterpret_cast< StartAlignmentRequest* >(object);
  (void)_this;
}
void StartAlignmentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartAlignmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartAlignmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.StartAlignmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_reads_directories_.Clear();
  output_reads_directory_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && alignment_configuration_ != nullptr) {
    delete alignment_configuration_;
  }
  alignment_configuration_ = nullptr;
  recursive_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartAlignmentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string input_reads_directories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_input_reads_directories();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartAlignmentRequest.input_reads_directories"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string output_reads_directory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_output_reads_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartAlignmentRequest.output_reads_directory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool recursive = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          recursive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.analysis_configuration.AlignmentConfiguration alignment_configuration = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment_configuration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartAlignmentRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartAlignmentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.StartAlignmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string input_reads_directories = 1;
  for (int i = 0, n = this->_internal_input_reads_directories_size(); i < n; i++) {
    const auto& s = this->_internal_input_reads_directories(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartAlignmentRequest.input_reads_directories");
    target = stream->WriteString(1, s, target);
  }

  // string output_reads_directory = 2;
  if (!this->_internal_output_reads_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_reads_directory().data(), static_cast<int>(this->_internal_output_reads_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartAlignmentRequest.output_reads_directory");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_output_reads_directory(), target);
  }

  // bool recursive = 4;
  if (this->_internal_recursive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_recursive(), target);
  }

  // .minknow_api.analysis_configuration.AlignmentConfiguration alignment_configuration = 6;
  if (this->_internal_has_alignment_configuration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::alignment_configuration(this), target, stream);
  }

  // string name = 7;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartAlignmentRequest.name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.StartAlignmentRequest)
  return target;
}

size_t StartAlignmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.StartAlignmentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string input_reads_directories = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(input_reads_directories_.size());
  for (int i = 0, n = input_reads_directories_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      input_reads_directories_.Get(i));
  }

  // string output_reads_directory = 2;
  if (!this->_internal_output_reads_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_reads_directory());
  }

  // string name = 7;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .minknow_api.analysis_configuration.AlignmentConfiguration alignment_configuration = 6;
  if (this->_internal_has_alignment_configuration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alignment_configuration_);
  }

  // bool recursive = 4;
  if (this->_internal_recursive() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartAlignmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartAlignmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartAlignmentRequest::GetClassData() const { return &_class_data_; }

void StartAlignmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartAlignmentRequest *>(to)->MergeFrom(
      static_cast<const StartAlignmentRequest &>(from));
}


void StartAlignmentRequest::MergeFrom(const StartAlignmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.StartAlignmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_reads_directories_.MergeFrom(from.input_reads_directories_);
  if (!from._internal_output_reads_directory().empty()) {
    _internal_set_output_reads_directory(from._internal_output_reads_directory());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_alignment_configuration()) {
    _internal_mutable_alignment_configuration()->::minknow_api::analysis_configuration::AlignmentConfiguration::MergeFrom(from._internal_alignment_configuration());
  }
  if (from._internal_recursive() != 0) {
    _internal_set_recursive(from._internal_recursive());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartAlignmentRequest::CopyFrom(const StartAlignmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.StartAlignmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartAlignmentRequest::IsInitialized() const {
  return true;
}

void StartAlignmentRequest::InternalSwap(StartAlignmentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  input_reads_directories_.InternalSwap(&other->input_reads_directories_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &output_reads_directory_, lhs_arena,
      &other->output_reads_directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartAlignmentRequest, recursive_)
      + sizeof(StartAlignmentRequest::recursive_)
      - PROTOBUF_FIELD_OFFSET(StartAlignmentRequest, alignment_configuration_)>(
          reinterpret_cast<char*>(&alignment_configuration_),
          reinterpret_cast<char*>(&other->alignment_configuration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StartAlignmentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[10]);
}

// ===================================================================

class StartAlignmentResponse::_Internal {
 public:
};

StartAlignmentResponse::StartAlignmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.StartAlignmentResponse)
}
StartAlignmentResponse::StartAlignmentResponse(const StartAlignmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.StartAlignmentResponse)
}

void StartAlignmentResponse::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartAlignmentResponse::~StartAlignmentResponse() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.StartAlignmentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartAlignmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartAlignmentResponse::ArenaDtor(void* object) {
  StartAlignmentResponse* _this = reinterpret_cast< StartAlignmentResponse* >(object);
  (void)_this;
}
void StartAlignmentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartAlignmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartAlignmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.StartAlignmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartAlignmentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartAlignmentResponse.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartAlignmentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.StartAlignmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartAlignmentResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.StartAlignmentResponse)
  return target;
}

size_t StartAlignmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.StartAlignmentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartAlignmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartAlignmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartAlignmentResponse::GetClassData() const { return &_class_data_; }

void StartAlignmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartAlignmentResponse *>(to)->MergeFrom(
      static_cast<const StartAlignmentResponse &>(from));
}


void StartAlignmentResponse::MergeFrom(const StartAlignmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.StartAlignmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartAlignmentResponse::CopyFrom(const StartAlignmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.StartAlignmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartAlignmentResponse::IsInitialized() const {
  return true;
}

void StartAlignmentResponse::InternalSwap(StartAlignmentResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StartAlignmentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[11]);
}

// ===================================================================

StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse() {}
StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse::MergeFrom(const StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[12]);
}

// ===================================================================

class StartPostProcessingProtocolRequest::_Internal {
 public:
};

void StartPostProcessingProtocolRequest::clear_setting_values() {
  setting_values_.Clear();
}
StartPostProcessingProtocolRequest::StartPostProcessingProtocolRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  setting_values_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.StartPostProcessingProtocolRequest)
}
StartPostProcessingProtocolRequest::StartPostProcessingProtocolRequest(const StartPostProcessingProtocolRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  setting_values_.MergeFrom(from.setting_values_);
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identifier().empty()) {
    identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_identifier(), 
      GetArenaForAllocation());
  }
  input_fast5_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_input_fast5_directory().empty()) {
    input_fast5_directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_input_fast5_directory(), 
      GetArenaForAllocation());
  }
  input_fastq_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_input_fastq_directory().empty()) {
    input_fastq_directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_input_fastq_directory(), 
      GetArenaForAllocation());
  }
  input_bam_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_input_bam_directory().empty()) {
    input_bam_directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_input_bam_directory(), 
      GetArenaForAllocation());
  }
  output_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_directory().empty()) {
    output_directory_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_output_directory(), 
      GetArenaForAllocation());
  }
  sequencing_protocol_run_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sequencing_protocol_run_id().empty()) {
    sequencing_protocol_run_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sequencing_protocol_run_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.StartPostProcessingProtocolRequest)
}

void StartPostProcessingProtocolRequest::SharedCtor() {
identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
input_fast5_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
input_fastq_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
input_bam_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
output_directory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sequencing_protocol_run_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartPostProcessingProtocolRequest::~StartPostProcessingProtocolRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.StartPostProcessingProtocolRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartPostProcessingProtocolRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_fast5_directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_fastq_directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_bam_directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  output_directory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sequencing_protocol_run_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartPostProcessingProtocolRequest::ArenaDtor(void* object) {
  StartPostProcessingProtocolRequest* _this = reinterpret_cast< StartPostProcessingProtocolRequest* >(object);
  (void)_this;
  _this->setting_values_. ~MapField();
}
inline void StartPostProcessingProtocolRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &StartPostProcessingProtocolRequest::ArenaDtor);
  }
}
void StartPostProcessingProtocolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartPostProcessingProtocolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.StartPostProcessingProtocolRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  setting_values_.Clear();
  identifier_.ClearToEmpty();
  input_fast5_directory_.ClearToEmpty();
  input_fastq_directory_.ClearToEmpty();
  input_bam_directory_.ClearToEmpty();
  output_directory_.ClearToEmpty();
  sequencing_protocol_run_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartPostProcessingProtocolRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartPostProcessingProtocolRequest.identifier"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string input_fast5_directory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_input_fast5_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartPostProcessingProtocolRequest.input_fast5_directory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string input_fastq_directory = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_input_fastq_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartPostProcessingProtocolRequest.input_fastq_directory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string input_bam_directory = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_input_bam_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartPostProcessingProtocolRequest.input_bam_directory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string output_directory = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_output_directory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartPostProcessingProtocolRequest.output_directory"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue> setting_values = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&setting_values_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string sequencing_protocol_run_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_sequencing_protocol_run_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartPostProcessingProtocolRequest.sequencing_protocol_run_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartPostProcessingProtocolRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.StartPostProcessingProtocolRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identifier().data(), static_cast<int>(this->_internal_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartPostProcessingProtocolRequest.identifier");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identifier(), target);
  }

  // string input_fast5_directory = 2;
  if (!this->_internal_input_fast5_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input_fast5_directory().data(), static_cast<int>(this->_internal_input_fast5_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartPostProcessingProtocolRequest.input_fast5_directory");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_input_fast5_directory(), target);
  }

  // string input_fastq_directory = 3;
  if (!this->_internal_input_fastq_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input_fastq_directory().data(), static_cast<int>(this->_internal_input_fastq_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartPostProcessingProtocolRequest.input_fastq_directory");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_input_fastq_directory(), target);
  }

  // string input_bam_directory = 4;
  if (!this->_internal_input_bam_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input_bam_directory().data(), static_cast<int>(this->_internal_input_bam_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartPostProcessingProtocolRequest.input_bam_directory");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_input_bam_directory(), target);
  }

  // string output_directory = 5;
  if (!this->_internal_output_directory().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_directory().data(), static_cast<int>(this->_internal_output_directory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartPostProcessingProtocolRequest.output_directory");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_output_directory(), target);
  }

  // map<string, .minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue> setting_values = 6;
  if (!this->_internal_setting_values().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "minknow_api.basecaller.StartPostProcessingProtocolRequest.SettingValuesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_setting_values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_setting_values().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue >::const_iterator
          it = this->_internal_setting_values().begin();
          it != this->_internal_setting_values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue >::const_iterator
          it = this->_internal_setting_values().begin();
          it != this->_internal_setting_values().end(); ++it) {
        target = StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string sequencing_protocol_run_id = 7;
  if (!this->_internal_sequencing_protocol_run_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sequencing_protocol_run_id().data(), static_cast<int>(this->_internal_sequencing_protocol_run_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartPostProcessingProtocolRequest.sequencing_protocol_run_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_sequencing_protocol_run_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.StartPostProcessingProtocolRequest)
  return target;
}

size_t StartPostProcessingProtocolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.StartPostProcessingProtocolRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .minknow_api.protocol_settings.ProtocolSetting.ProtocolSettingValue> setting_values = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_setting_values_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::protocol_settings::ProtocolSetting_ProtocolSettingValue >::const_iterator
      it = this->_internal_setting_values().begin();
      it != this->_internal_setting_values().end(); ++it) {
    total_size += StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identifier());
  }

  // string input_fast5_directory = 2;
  if (!this->_internal_input_fast5_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input_fast5_directory());
  }

  // string input_fastq_directory = 3;
  if (!this->_internal_input_fastq_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input_fastq_directory());
  }

  // string input_bam_directory = 4;
  if (!this->_internal_input_bam_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input_bam_directory());
  }

  // string output_directory = 5;
  if (!this->_internal_output_directory().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_directory());
  }

  // string sequencing_protocol_run_id = 7;
  if (!this->_internal_sequencing_protocol_run_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sequencing_protocol_run_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartPostProcessingProtocolRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartPostProcessingProtocolRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartPostProcessingProtocolRequest::GetClassData() const { return &_class_data_; }

void StartPostProcessingProtocolRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartPostProcessingProtocolRequest *>(to)->MergeFrom(
      static_cast<const StartPostProcessingProtocolRequest &>(from));
}


void StartPostProcessingProtocolRequest::MergeFrom(const StartPostProcessingProtocolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.StartPostProcessingProtocolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  setting_values_.MergeFrom(from.setting_values_);
  if (!from._internal_identifier().empty()) {
    _internal_set_identifier(from._internal_identifier());
  }
  if (!from._internal_input_fast5_directory().empty()) {
    _internal_set_input_fast5_directory(from._internal_input_fast5_directory());
  }
  if (!from._internal_input_fastq_directory().empty()) {
    _internal_set_input_fastq_directory(from._internal_input_fastq_directory());
  }
  if (!from._internal_input_bam_directory().empty()) {
    _internal_set_input_bam_directory(from._internal_input_bam_directory());
  }
  if (!from._internal_output_directory().empty()) {
    _internal_set_output_directory(from._internal_output_directory());
  }
  if (!from._internal_sequencing_protocol_run_id().empty()) {
    _internal_set_sequencing_protocol_run_id(from._internal_sequencing_protocol_run_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartPostProcessingProtocolRequest::CopyFrom(const StartPostProcessingProtocolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.StartPostProcessingProtocolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartPostProcessingProtocolRequest::IsInitialized() const {
  return true;
}

void StartPostProcessingProtocolRequest::InternalSwap(StartPostProcessingProtocolRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  setting_values_.InternalSwap(&other->setting_values_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &identifier_, lhs_arena,
      &other->identifier_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &input_fast5_directory_, lhs_arena,
      &other->input_fast5_directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &input_fastq_directory_, lhs_arena,
      &other->input_fastq_directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &input_bam_directory_, lhs_arena,
      &other->input_bam_directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &output_directory_, lhs_arena,
      &other->output_directory_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sequencing_protocol_run_id_, lhs_arena,
      &other->sequencing_protocol_run_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StartPostProcessingProtocolRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[13]);
}

// ===================================================================

class StartRequest::_Internal {
 public:
  static const ::minknow_api::basecaller::StartBasecallingRequest& start_basecalling_request(const StartRequest* msg);
  static const ::minknow_api::basecaller::StartBarcodingRequest& start_barcoding_request(const StartRequest* msg);
  static const ::minknow_api::basecaller::StartAlignmentRequest& start_alignment_request(const StartRequest* msg);
  static const ::minknow_api::basecaller::StartPostProcessingProtocolRequest& start_post_processing_protocol_request(const StartRequest* msg);
};

const ::minknow_api::basecaller::StartBasecallingRequest&
StartRequest::_Internal::start_basecalling_request(const StartRequest* msg) {
  return *msg->start_request_.start_basecalling_request_;
}
const ::minknow_api::basecaller::StartBarcodingRequest&
StartRequest::_Internal::start_barcoding_request(const StartRequest* msg) {
  return *msg->start_request_.start_barcoding_request_;
}
const ::minknow_api::basecaller::StartAlignmentRequest&
StartRequest::_Internal::start_alignment_request(const StartRequest* msg) {
  return *msg->start_request_.start_alignment_request_;
}
const ::minknow_api::basecaller::StartPostProcessingProtocolRequest&
StartRequest::_Internal::start_post_processing_protocol_request(const StartRequest* msg) {
  return *msg->start_request_.start_post_processing_protocol_request_;
}
void StartRequest::set_allocated_start_basecalling_request(::minknow_api::basecaller::StartBasecallingRequest* start_basecalling_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_start_request();
  if (start_basecalling_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::basecaller::StartBasecallingRequest>::GetOwningArena(start_basecalling_request);
    if (message_arena != submessage_arena) {
      start_basecalling_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_basecalling_request, submessage_arena);
    }
    set_has_start_basecalling_request();
    start_request_.start_basecalling_request_ = start_basecalling_request;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.basecaller.StartRequest.start_basecalling_request)
}
void StartRequest::set_allocated_start_barcoding_request(::minknow_api::basecaller::StartBarcodingRequest* start_barcoding_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_start_request();
  if (start_barcoding_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::basecaller::StartBarcodingRequest>::GetOwningArena(start_barcoding_request);
    if (message_arena != submessage_arena) {
      start_barcoding_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_barcoding_request, submessage_arena);
    }
    set_has_start_barcoding_request();
    start_request_.start_barcoding_request_ = start_barcoding_request;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.basecaller.StartRequest.start_barcoding_request)
}
void StartRequest::set_allocated_start_alignment_request(::minknow_api::basecaller::StartAlignmentRequest* start_alignment_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_start_request();
  if (start_alignment_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::basecaller::StartAlignmentRequest>::GetOwningArena(start_alignment_request);
    if (message_arena != submessage_arena) {
      start_alignment_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_alignment_request, submessage_arena);
    }
    set_has_start_alignment_request();
    start_request_.start_alignment_request_ = start_alignment_request;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.basecaller.StartRequest.start_alignment_request)
}
void StartRequest::set_allocated_start_post_processing_protocol_request(::minknow_api::basecaller::StartPostProcessingProtocolRequest* start_post_processing_protocol_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_start_request();
  if (start_post_processing_protocol_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::basecaller::StartPostProcessingProtocolRequest>::GetOwningArena(start_post_processing_protocol_request);
    if (message_arena != submessage_arena) {
      start_post_processing_protocol_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_post_processing_protocol_request, submessage_arena);
    }
    set_has_start_post_processing_protocol_request();
    start_request_.start_post_processing_protocol_request_ = start_post_processing_protocol_request;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.basecaller.StartRequest.start_post_processing_protocol_request)
}
StartRequest::StartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.StartRequest)
}
StartRequest::StartRequest(const StartRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_start_request();
  switch (from.start_request_case()) {
    case kStartBasecallingRequest: {
      _internal_mutable_start_basecalling_request()->::minknow_api::basecaller::StartBasecallingRequest::MergeFrom(from._internal_start_basecalling_request());
      break;
    }
    case kStartBarcodingRequest: {
      _internal_mutable_start_barcoding_request()->::minknow_api::basecaller::StartBarcodingRequest::MergeFrom(from._internal_start_barcoding_request());
      break;
    }
    case kStartAlignmentRequest: {
      _internal_mutable_start_alignment_request()->::minknow_api::basecaller::StartAlignmentRequest::MergeFrom(from._internal_start_alignment_request());
      break;
    }
    case kStartPostProcessingProtocolRequest: {
      _internal_mutable_start_post_processing_protocol_request()->::minknow_api::basecaller::StartPostProcessingProtocolRequest::MergeFrom(from._internal_start_post_processing_protocol_request());
      break;
    }
    case START_REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.StartRequest)
}

void StartRequest::SharedCtor() {
clear_has_start_request();
}

StartRequest::~StartRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.StartRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_start_request()) {
    clear_start_request();
  }
}

void StartRequest::ArenaDtor(void* object) {
  StartRequest* _this = reinterpret_cast< StartRequest* >(object);
  (void)_this;
}
void StartRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartRequest::clear_start_request() {
// @@protoc_insertion_point(one_of_clear_start:minknow_api.basecaller.StartRequest)
  switch (start_request_case()) {
    case kStartBasecallingRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete start_request_.start_basecalling_request_;
      }
      break;
    }
    case kStartBarcodingRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete start_request_.start_barcoding_request_;
      }
      break;
    }
    case kStartAlignmentRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete start_request_.start_alignment_request_;
      }
      break;
    }
    case kStartPostProcessingProtocolRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete start_request_.start_post_processing_protocol_request_;
      }
      break;
    }
    case START_REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = START_REQUEST_NOT_SET;
}


void StartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.StartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_start_request();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .minknow_api.basecaller.StartBasecallingRequest start_basecalling_request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_basecalling_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.basecaller.StartBarcodingRequest start_barcoding_request = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_barcoding_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.basecaller.StartAlignmentRequest start_alignment_request = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_alignment_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.basecaller.StartPostProcessingProtocolRequest start_post_processing_protocol_request = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_post_processing_protocol_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.StartRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .minknow_api.basecaller.StartBasecallingRequest start_basecalling_request = 2;
  if (_internal_has_start_basecalling_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::start_basecalling_request(this), target, stream);
  }

  // .minknow_api.basecaller.StartBarcodingRequest start_barcoding_request = 3;
  if (_internal_has_start_barcoding_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::start_barcoding_request(this), target, stream);
  }

  // .minknow_api.basecaller.StartAlignmentRequest start_alignment_request = 4;
  if (_internal_has_start_alignment_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::start_alignment_request(this), target, stream);
  }

  // .minknow_api.basecaller.StartPostProcessingProtocolRequest start_post_processing_protocol_request = 5;
  if (_internal_has_start_post_processing_protocol_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::start_post_processing_protocol_request(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.StartRequest)
  return target;
}

size_t StartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.StartRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (start_request_case()) {
    // .minknow_api.basecaller.StartBasecallingRequest start_basecalling_request = 2;
    case kStartBasecallingRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_request_.start_basecalling_request_);
      break;
    }
    // .minknow_api.basecaller.StartBarcodingRequest start_barcoding_request = 3;
    case kStartBarcodingRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_request_.start_barcoding_request_);
      break;
    }
    // .minknow_api.basecaller.StartAlignmentRequest start_alignment_request = 4;
    case kStartAlignmentRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_request_.start_alignment_request_);
      break;
    }
    // .minknow_api.basecaller.StartPostProcessingProtocolRequest start_post_processing_protocol_request = 5;
    case kStartPostProcessingProtocolRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_request_.start_post_processing_protocol_request_);
      break;
    }
    case START_REQUEST_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartRequest::GetClassData() const { return &_class_data_; }

void StartRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartRequest *>(to)->MergeFrom(
      static_cast<const StartRequest &>(from));
}


void StartRequest::MergeFrom(const StartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.StartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.start_request_case()) {
    case kStartBasecallingRequest: {
      _internal_mutable_start_basecalling_request()->::minknow_api::basecaller::StartBasecallingRequest::MergeFrom(from._internal_start_basecalling_request());
      break;
    }
    case kStartBarcodingRequest: {
      _internal_mutable_start_barcoding_request()->::minknow_api::basecaller::StartBarcodingRequest::MergeFrom(from._internal_start_barcoding_request());
      break;
    }
    case kStartAlignmentRequest: {
      _internal_mutable_start_alignment_request()->::minknow_api::basecaller::StartAlignmentRequest::MergeFrom(from._internal_start_alignment_request());
      break;
    }
    case kStartPostProcessingProtocolRequest: {
      _internal_mutable_start_post_processing_protocol_request()->::minknow_api::basecaller::StartPostProcessingProtocolRequest::MergeFrom(from._internal_start_post_processing_protocol_request());
      break;
    }
    case START_REQUEST_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartRequest::CopyFrom(const StartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.StartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartRequest::IsInitialized() const {
  return true;
}

void StartRequest::InternalSwap(StartRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(start_request_, other->start_request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[14]);
}

// ===================================================================

class StartPostProcessingProtocolResponse::_Internal {
 public:
};

StartPostProcessingProtocolResponse::StartPostProcessingProtocolResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.StartPostProcessingProtocolResponse)
}
StartPostProcessingProtocolResponse::StartPostProcessingProtocolResponse(const StartPostProcessingProtocolResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.StartPostProcessingProtocolResponse)
}

void StartPostProcessingProtocolResponse::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartPostProcessingProtocolResponse::~StartPostProcessingProtocolResponse() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.StartPostProcessingProtocolResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void StartPostProcessingProtocolResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartPostProcessingProtocolResponse::ArenaDtor(void* object) {
  StartPostProcessingProtocolResponse* _this = reinterpret_cast< StartPostProcessingProtocolResponse* >(object);
  (void)_this;
}
void StartPostProcessingProtocolResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartPostProcessingProtocolResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartPostProcessingProtocolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.StartPostProcessingProtocolResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartPostProcessingProtocolResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.StartPostProcessingProtocolResponse.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartPostProcessingProtocolResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.StartPostProcessingProtocolResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.StartPostProcessingProtocolResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.StartPostProcessingProtocolResponse)
  return target;
}

size_t StartPostProcessingProtocolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.StartPostProcessingProtocolResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StartPostProcessingProtocolResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    StartPostProcessingProtocolResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StartPostProcessingProtocolResponse::GetClassData() const { return &_class_data_; }

void StartPostProcessingProtocolResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<StartPostProcessingProtocolResponse *>(to)->MergeFrom(
      static_cast<const StartPostProcessingProtocolResponse &>(from));
}


void StartPostProcessingProtocolResponse::MergeFrom(const StartPostProcessingProtocolResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.StartPostProcessingProtocolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StartPostProcessingProtocolResponse::CopyFrom(const StartPostProcessingProtocolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.StartPostProcessingProtocolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartPostProcessingProtocolResponse::IsInitialized() const {
  return true;
}

void StartPostProcessingProtocolResponse::InternalSwap(StartPostProcessingProtocolResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StartPostProcessingProtocolResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[15]);
}

// ===================================================================

class CancelRequest::_Internal {
 public:
};

CancelRequest::CancelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.CancelRequest)
}
CancelRequest::CancelRequest(const CancelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.CancelRequest)
}

void CancelRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CancelRequest::~CancelRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.CancelRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CancelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelRequest::ArenaDtor(void* object) {
  CancelRequest* _this = reinterpret_cast< CancelRequest* >(object);
  (void)_this;
}
void CancelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.CancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.CancelRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.CancelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.CancelRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.CancelRequest)
  return target;
}

size_t CancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.CancelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CancelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelRequest::GetClassData() const { return &_class_data_; }

void CancelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CancelRequest *>(to)->MergeFrom(
      static_cast<const CancelRequest &>(from));
}


void CancelRequest::MergeFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.CancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CancelRequest::CopyFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelRequest::IsInitialized() const {
  return true;
}

void CancelRequest::InternalSwap(CancelRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[16]);
}

// ===================================================================

class CancelResponse::_Internal {
 public:
};

CancelResponse::CancelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.CancelResponse)
}
CancelResponse::CancelResponse(const CancelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.CancelResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CancelResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CancelResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CancelResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[17]);
}

// ===================================================================

class RunInfo::_Internal {
 public:
  static const ::minknow_api::basecaller::StartBasecallingRequest& start_basecalling_request(const RunInfo* msg);
  static const ::minknow_api::basecaller::StartBarcodingRequest& start_barcoding_request(const RunInfo* msg);
  static const ::minknow_api::basecaller::StartAlignmentRequest& start_alignment_request(const RunInfo* msg);
  static const ::minknow_api::basecaller::StartPostProcessingProtocolRequest& start_post_processing_protocol_request(const RunInfo* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& start_time(const RunInfo* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& end_time(const RunInfo* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& estimated_end_time(const RunInfo* msg);
};

const ::minknow_api::basecaller::StartBasecallingRequest&
RunInfo::_Internal::start_basecalling_request(const RunInfo* msg) {
  return *msg->start_request_oneof_.start_basecalling_request_;
}
const ::minknow_api::basecaller::StartBarcodingRequest&
RunInfo::_Internal::start_barcoding_request(const RunInfo* msg) {
  return *msg->start_request_oneof_.start_barcoding_request_;
}
const ::minknow_api::basecaller::StartAlignmentRequest&
RunInfo::_Internal::start_alignment_request(const RunInfo* msg) {
  return *msg->start_request_oneof_.start_alignment_request_;
}
const ::minknow_api::basecaller::StartPostProcessingProtocolRequest&
RunInfo::_Internal::start_post_processing_protocol_request(const RunInfo* msg) {
  return *msg->start_request_oneof_.start_post_processing_protocol_request_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RunInfo::_Internal::start_time(const RunInfo* msg) {
  return *msg->start_time_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RunInfo::_Internal::end_time(const RunInfo* msg) {
  return *msg->end_time_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RunInfo::_Internal::estimated_end_time(const RunInfo* msg) {
  return *msg->estimated_end_time_;
}
void RunInfo::set_allocated_start_basecalling_request(::minknow_api::basecaller::StartBasecallingRequest* start_basecalling_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_start_request_oneof();
  if (start_basecalling_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::basecaller::StartBasecallingRequest>::GetOwningArena(start_basecalling_request);
    if (message_arena != submessage_arena) {
      start_basecalling_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_basecalling_request, submessage_arena);
    }
    set_has_start_basecalling_request();
    start_request_oneof_.start_basecalling_request_ = start_basecalling_request;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.basecaller.RunInfo.start_basecalling_request)
}
void RunInfo::set_allocated_start_barcoding_request(::minknow_api::basecaller::StartBarcodingRequest* start_barcoding_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_start_request_oneof();
  if (start_barcoding_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::basecaller::StartBarcodingRequest>::GetOwningArena(start_barcoding_request);
    if (message_arena != submessage_arena) {
      start_barcoding_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_barcoding_request, submessage_arena);
    }
    set_has_start_barcoding_request();
    start_request_oneof_.start_barcoding_request_ = start_barcoding_request;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.basecaller.RunInfo.start_barcoding_request)
}
void RunInfo::set_allocated_start_alignment_request(::minknow_api::basecaller::StartAlignmentRequest* start_alignment_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_start_request_oneof();
  if (start_alignment_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::basecaller::StartAlignmentRequest>::GetOwningArena(start_alignment_request);
    if (message_arena != submessage_arena) {
      start_alignment_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_alignment_request, submessage_arena);
    }
    set_has_start_alignment_request();
    start_request_oneof_.start_alignment_request_ = start_alignment_request;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.basecaller.RunInfo.start_alignment_request)
}
void RunInfo::set_allocated_start_post_processing_protocol_request(::minknow_api::basecaller::StartPostProcessingProtocolRequest* start_post_processing_protocol_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_start_request_oneof();
  if (start_post_processing_protocol_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::basecaller::StartPostProcessingProtocolRequest>::GetOwningArena(start_post_processing_protocol_request);
    if (message_arena != submessage_arena) {
      start_post_processing_protocol_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_post_processing_protocol_request, submessage_arena);
    }
    set_has_start_post_processing_protocol_request();
    start_request_oneof_.start_post_processing_protocol_request_ = start_post_processing_protocol_request;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.basecaller.RunInfo.start_post_processing_protocol_request)
}
void RunInfo::clear_start_time() {
  if (GetArenaForAllocation() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
void RunInfo::clear_end_time() {
  if (GetArenaForAllocation() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
void RunInfo::clear_estimated_end_time() {
  if (GetArenaForAllocation() == nullptr && estimated_end_time_ != nullptr) {
    delete estimated_end_time_;
  }
  estimated_end_time_ = nullptr;
}
RunInfo::RunInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  errors_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.RunInfo)
}
RunInfo::RunInfo(const RunInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_start_time()) {
    start_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  if (from._internal_has_end_time()) {
    end_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  if (from._internal_has_estimated_end_time()) {
    estimated_end_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.estimated_end_time_);
  } else {
    estimated_end_time_ = nullptr;
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_total_) -
    reinterpret_cast<char*>(&state_)) + sizeof(progress_total_));
  clear_has_start_request_oneof();
  switch (from.start_request_oneof_case()) {
    case kStartBasecallingRequest: {
      _internal_mutable_start_basecalling_request()->::minknow_api::basecaller::StartBasecallingRequest::MergeFrom(from._internal_start_basecalling_request());
      break;
    }
    case kStartBarcodingRequest: {
      _internal_mutable_start_barcoding_request()->::minknow_api::basecaller::StartBarcodingRequest::MergeFrom(from._internal_start_barcoding_request());
      break;
    }
    case kStartAlignmentRequest: {
      _internal_mutable_start_alignment_request()->::minknow_api::basecaller::StartAlignmentRequest::MergeFrom(from._internal_start_alignment_request());
      break;
    }
    case kStartPostProcessingProtocolRequest: {
      _internal_mutable_start_post_processing_protocol_request()->::minknow_api::basecaller::StartPostProcessingProtocolRequest::MergeFrom(from._internal_start_post_processing_protocol_request());
      break;
    }
    case START_REQUEST_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.RunInfo)
}

void RunInfo::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&progress_total_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(progress_total_));
clear_has_start_request_oneof();
}

RunInfo::~RunInfo() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.RunInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RunInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
  if (this != internal_default_instance()) delete estimated_end_time_;
  if (has_start_request_oneof()) {
    clear_start_request_oneof();
  }
}

void RunInfo::ArenaDtor(void* object) {
  RunInfo* _this = reinterpret_cast< RunInfo* >(object);
  (void)_this;
}
void RunInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RunInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RunInfo::clear_start_request_oneof() {
// @@protoc_insertion_point(one_of_clear_start:minknow_api.basecaller.RunInfo)
  switch (start_request_oneof_case()) {
    case kStartBasecallingRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete start_request_oneof_.start_basecalling_request_;
      }
      break;
    }
    case kStartBarcodingRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete start_request_oneof_.start_barcoding_request_;
      }
      break;
    }
    case kStartAlignmentRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete start_request_oneof_.start_alignment_request_;
      }
      break;
    }
    case kStartPostProcessingProtocolRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete start_request_oneof_.start_post_processing_protocol_request_;
      }
      break;
    }
    case START_REQUEST_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = START_REQUEST_ONEOF_NOT_SET;
}


void RunInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.RunInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  if (GetArenaForAllocation() == nullptr && estimated_end_time_ != nullptr) {
    delete estimated_end_time_;
  }
  estimated_end_time_ = nullptr;
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_total_) -
      reinterpret_cast<char*>(&state_)) + sizeof(progress_total_));
  clear_start_request_oneof();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RunInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.RunInfo.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.basecaller.StartBasecallingRequest start_basecalling_request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_basecalling_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.basecaller.State state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::minknow_api::basecaller::State>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string errors = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_errors();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.RunInfo.errors"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 files_discovered = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          files_discovered_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 progress_current = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          progress_current_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 progress_total = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          progress_total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp start_time = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp end_time = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp estimated_end_time = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_estimated_end_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.basecaller.StartBarcodingRequest start_barcoding_request = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_barcoding_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.basecaller.StartAlignmentRequest start_alignment_request = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_alignment_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.basecaller.StartPostProcessingProtocolRequest start_post_processing_protocol_request = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_post_processing_protocol_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RunInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.RunInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.RunInfo.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .minknow_api.basecaller.StartBasecallingRequest start_basecalling_request = 2;
  if (_internal_has_start_basecalling_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::start_basecalling_request(this), target, stream);
  }

  // .minknow_api.basecaller.State state = 3;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_state(), target);
  }

  // repeated string errors = 4;
  for (int i = 0, n = this->_internal_errors_size(); i < n; i++) {
    const auto& s = this->_internal_errors(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.RunInfo.errors");
    target = stream->WriteString(4, s, target);
  }

  // int32 files_discovered = 5;
  if (this->_internal_files_discovered() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_files_discovered(), target);
  }

  // int32 progress_current = 6;
  if (this->_internal_progress_current() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_progress_current(), target);
  }

  // int32 progress_total = 7;
  if (this->_internal_progress_total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_progress_total(), target);
  }

  // .google.protobuf.Timestamp start_time = 8;
  if (this->_internal_has_start_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::start_time(this), target, stream);
  }

  // .google.protobuf.Timestamp end_time = 9;
  if (this->_internal_has_end_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::end_time(this), target, stream);
  }

  // .google.protobuf.Timestamp estimated_end_time = 10;
  if (this->_internal_has_estimated_end_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::estimated_end_time(this), target, stream);
  }

  // .minknow_api.basecaller.StartBarcodingRequest start_barcoding_request = 11;
  if (_internal_has_start_barcoding_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::start_barcoding_request(this), target, stream);
  }

  // .minknow_api.basecaller.StartAlignmentRequest start_alignment_request = 12;
  if (_internal_has_start_alignment_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::start_alignment_request(this), target, stream);
  }

  // .minknow_api.basecaller.StartPostProcessingProtocolRequest start_post_processing_protocol_request = 13;
  if (_internal_has_start_post_processing_protocol_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::start_post_processing_protocol_request(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.RunInfo)
  return target;
}

size_t RunInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.RunInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string errors = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(errors_.size());
  for (int i = 0, n = errors_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      errors_.Get(i));
  }

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .google.protobuf.Timestamp start_time = 8;
  if (this->_internal_has_start_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp end_time = 9;
  if (this->_internal_has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // .google.protobuf.Timestamp estimated_end_time = 10;
  if (this->_internal_has_estimated_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *estimated_end_time_);
  }

  // .minknow_api.basecaller.State state = 3;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  // int32 files_discovered = 5;
  if (this->_internal_files_discovered() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_files_discovered());
  }

  // int32 progress_current = 6;
  if (this->_internal_progress_current() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_progress_current());
  }

  // int32 progress_total = 7;
  if (this->_internal_progress_total() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_progress_total());
  }

  switch (start_request_oneof_case()) {
    // .minknow_api.basecaller.StartBasecallingRequest start_basecalling_request = 2;
    case kStartBasecallingRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_request_oneof_.start_basecalling_request_);
      break;
    }
    // .minknow_api.basecaller.StartBarcodingRequest start_barcoding_request = 11;
    case kStartBarcodingRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_request_oneof_.start_barcoding_request_);
      break;
    }
    // .minknow_api.basecaller.StartAlignmentRequest start_alignment_request = 12;
    case kStartAlignmentRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_request_oneof_.start_alignment_request_);
      break;
    }
    // .minknow_api.basecaller.StartPostProcessingProtocolRequest start_post_processing_protocol_request = 13;
    case kStartPostProcessingProtocolRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_request_oneof_.start_post_processing_protocol_request_);
      break;
    }
    case START_REQUEST_ONEOF_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RunInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RunInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RunInfo::GetClassData() const { return &_class_data_; }

void RunInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RunInfo *>(to)->MergeFrom(
      static_cast<const RunInfo &>(from));
}


void RunInfo::MergeFrom(const RunInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.RunInfo)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_start_time()) {
    _internal_mutable_start_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_start_time());
  }
  if (from._internal_has_end_time()) {
    _internal_mutable_end_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_end_time());
  }
  if (from._internal_has_estimated_end_time()) {
    _internal_mutable_estimated_end_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_estimated_end_time());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  if (from._internal_files_discovered() != 0) {
    _internal_set_files_discovered(from._internal_files_discovered());
  }
  if (from._internal_progress_current() != 0) {
    _internal_set_progress_current(from._internal_progress_current());
  }
  if (from._internal_progress_total() != 0) {
    _internal_set_progress_total(from._internal_progress_total());
  }
  switch (from.start_request_oneof_case()) {
    case kStartBasecallingRequest: {
      _internal_mutable_start_basecalling_request()->::minknow_api::basecaller::StartBasecallingRequest::MergeFrom(from._internal_start_basecalling_request());
      break;
    }
    case kStartBarcodingRequest: {
      _internal_mutable_start_barcoding_request()->::minknow_api::basecaller::StartBarcodingRequest::MergeFrom(from._internal_start_barcoding_request());
      break;
    }
    case kStartAlignmentRequest: {
      _internal_mutable_start_alignment_request()->::minknow_api::basecaller::StartAlignmentRequest::MergeFrom(from._internal_start_alignment_request());
      break;
    }
    case kStartPostProcessingProtocolRequest: {
      _internal_mutable_start_post_processing_protocol_request()->::minknow_api::basecaller::StartPostProcessingProtocolRequest::MergeFrom(from._internal_start_post_processing_protocol_request());
      break;
    }
    case START_REQUEST_ONEOF_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RunInfo::CopyFrom(const RunInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.RunInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunInfo::IsInitialized() const {
  return true;
}

void RunInfo::InternalSwap(RunInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  errors_.InternalSwap(&other->errors_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RunInfo, progress_total_)
      + sizeof(RunInfo::progress_total_)
      - PROTOBUF_FIELD_OFFSET(RunInfo, start_time_)>(
          reinterpret_cast<char*>(&start_time_),
          reinterpret_cast<char*>(&other->start_time_));
  swap(start_request_oneof_, other->start_request_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RunInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[18]);
}

// ===================================================================

class GetInfoRequest_IdList::_Internal {
 public:
};

GetInfoRequest_IdList::GetInfoRequest_IdList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  ids_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.GetInfoRequest.IdList)
}
GetInfoRequest_IdList::GetInfoRequest_IdList(const GetInfoRequest_IdList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ids_(from.ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.GetInfoRequest.IdList)
}

void GetInfoRequest_IdList::SharedCtor() {
}

GetInfoRequest_IdList::~GetInfoRequest_IdList() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.GetInfoRequest.IdList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetInfoRequest_IdList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetInfoRequest_IdList::ArenaDtor(void* object) {
  GetInfoRequest_IdList* _this = reinterpret_cast< GetInfoRequest_IdList* >(object);
  (void)_this;
}
void GetInfoRequest_IdList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInfoRequest_IdList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInfoRequest_IdList::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.GetInfoRequest.IdList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInfoRequest_IdList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.GetInfoRequest.IdList.ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInfoRequest_IdList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.GetInfoRequest.IdList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string ids = 1;
  for (int i = 0, n = this->_internal_ids_size(); i < n; i++) {
    const auto& s = this->_internal_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.GetInfoRequest.IdList.ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.GetInfoRequest.IdList)
  return target;
}

size_t GetInfoRequest_IdList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.GetInfoRequest.IdList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(ids_.size());
  for (int i = 0, n = ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      ids_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInfoRequest_IdList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInfoRequest_IdList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInfoRequest_IdList::GetClassData() const { return &_class_data_; }

void GetInfoRequest_IdList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetInfoRequest_IdList *>(to)->MergeFrom(
      static_cast<const GetInfoRequest_IdList &>(from));
}


void GetInfoRequest_IdList::MergeFrom(const GetInfoRequest_IdList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.GetInfoRequest.IdList)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInfoRequest_IdList::CopyFrom(const GetInfoRequest_IdList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.GetInfoRequest.IdList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoRequest_IdList::IsInitialized() const {
  return true;
}

void GetInfoRequest_IdList::InternalSwap(GetInfoRequest_IdList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ids_.InternalSwap(&other->ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInfoRequest_IdList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[19]);
}

// ===================================================================

class GetInfoRequest::_Internal {
 public:
  static const ::minknow_api::basecaller::GetInfoRequest_IdList& list(const GetInfoRequest* msg);
};

const ::minknow_api::basecaller::GetInfoRequest_IdList&
GetInfoRequest::_Internal::list(const GetInfoRequest* msg) {
  return *msg->selection_.list_;
}
void GetInfoRequest::set_allocated_list(::minknow_api::basecaller::GetInfoRequest_IdList* list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_selection();
  if (list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::basecaller::GetInfoRequest_IdList>::GetOwningArena(list);
    if (message_arena != submessage_arena) {
      list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    set_has_list();
    selection_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.basecaller.GetInfoRequest.list)
}
GetInfoRequest::GetInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.GetInfoRequest)
}
GetInfoRequest::GetInfoRequest(const GetInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_selection();
  switch (from.selection_case()) {
    case kPreset: {
      _internal_set_preset(from._internal_preset());
      break;
    }
    case kId: {
      _internal_set_id(from._internal_id());
      break;
    }
    case kList: {
      _internal_mutable_list()->::minknow_api::basecaller::GetInfoRequest_IdList::MergeFrom(from._internal_list());
      break;
    }
    case SELECTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.GetInfoRequest)
}

void GetInfoRequest::SharedCtor() {
clear_has_selection();
}

GetInfoRequest::~GetInfoRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.GetInfoRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_selection()) {
    clear_selection();
  }
}

void GetInfoRequest::ArenaDtor(void* object) {
  GetInfoRequest* _this = reinterpret_cast< GetInfoRequest* >(object);
  (void)_this;
}
void GetInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInfoRequest::clear_selection() {
// @@protoc_insertion_point(one_of_clear_start:minknow_api.basecaller.GetInfoRequest)
  switch (selection_case()) {
    case kPreset: {
      // No need to clear
      break;
    }
    case kId: {
      selection_.id_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
      break;
    }
    case kList: {
      if (GetArenaForAllocation() == nullptr) {
        delete selection_.list_;
      }
      break;
    }
    case SELECTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SELECTION_NOT_SET;
}


void GetInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.GetInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_selection();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .minknow_api.basecaller.SelectionPreset preset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_preset(static_cast<::minknow_api::basecaller::SelectionPreset>(val));
        } else
          goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.GetInfoRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .minknow_api.basecaller.GetInfoRequest.IdList list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.GetInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .minknow_api.basecaller.SelectionPreset preset = 1;
  if (_internal_has_preset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_preset(), target);
  }

  // string id = 2;
  if (_internal_has_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.GetInfoRequest.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  // .minknow_api.basecaller.GetInfoRequest.IdList list = 3;
  if (_internal_has_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::list(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.GetInfoRequest)
  return target;
}

size_t GetInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.GetInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (selection_case()) {
    // .minknow_api.basecaller.SelectionPreset preset = 1;
    case kPreset: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_preset());
      break;
    }
    // string id = 2;
    case kId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_id());
      break;
    }
    // .minknow_api.basecaller.GetInfoRequest.IdList list = 3;
    case kList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *selection_.list_);
      break;
    }
    case SELECTION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInfoRequest::GetClassData() const { return &_class_data_; }

void GetInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetInfoRequest *>(to)->MergeFrom(
      static_cast<const GetInfoRequest &>(from));
}


void GetInfoRequest::MergeFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.GetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.selection_case()) {
    case kPreset: {
      _internal_set_preset(from._internal_preset());
      break;
    }
    case kId: {
      _internal_set_id(from._internal_id());
      break;
    }
    case kList: {
      _internal_mutable_list()->::minknow_api::basecaller::GetInfoRequest_IdList::MergeFrom(from._internal_list());
      break;
    }
    case SELECTION_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInfoRequest::CopyFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.GetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoRequest::IsInitialized() const {
  return true;
}

void GetInfoRequest::InternalSwap(GetInfoRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(selection_, other->selection_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInfoRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[20]);
}

// ===================================================================

class GetInfoResponse::_Internal {
 public:
};

GetInfoResponse::GetInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  runs_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.GetInfoResponse)
}
GetInfoResponse::GetInfoResponse(const GetInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      runs_(from.runs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.GetInfoResponse)
}

void GetInfoResponse::SharedCtor() {
}

GetInfoResponse::~GetInfoResponse() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.GetInfoResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetInfoResponse::ArenaDtor(void* object) {
  GetInfoResponse* _this = reinterpret_cast< GetInfoResponse* >(object);
  (void)_this;
}
void GetInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.GetInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .minknow_api.basecaller.RunInfo runs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_runs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.GetInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .minknow_api.basecaller.RunInfo runs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_runs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_runs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.GetInfoResponse)
  return target;
}

size_t GetInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.GetInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .minknow_api.basecaller.RunInfo runs = 1;
  total_size += 1UL * this->_internal_runs_size();
  for (const auto& msg : this->runs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetInfoResponse::GetClassData() const { return &_class_data_; }

void GetInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetInfoResponse *>(to)->MergeFrom(
      static_cast<const GetInfoResponse &>(from));
}


void GetInfoResponse::MergeFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.GetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  runs_.MergeFrom(from.runs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetInfoResponse::CopyFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoResponse::IsInitialized() const {
  return true;
}

void GetInfoResponse::InternalSwap(GetInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  runs_.InternalSwap(&other->runs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInfoResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[21]);
}

// ===================================================================

class WatchRequest::_Internal {
 public:
};

WatchRequest::WatchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.WatchRequest)
}
WatchRequest::WatchRequest(const WatchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  send_finished_runs_ = from.send_finished_runs_;
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.WatchRequest)
}

void WatchRequest::SharedCtor() {
send_finished_runs_ = false;
}

WatchRequest::~WatchRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.WatchRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void WatchRequest::ArenaDtor(void* object) {
  WatchRequest* _this = reinterpret_cast< WatchRequest* >(object);
  (void)_this;
}
void WatchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.WatchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  send_finished_runs_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool send_finished_runs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          send_finished_runs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WatchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.WatchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool send_finished_runs = 1;
  if (this->_internal_send_finished_runs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_send_finished_runs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.WatchRequest)
  return target;
}

size_t WatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.WatchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool send_finished_runs = 1;
  if (this->_internal_send_finished_runs() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchRequest::GetClassData() const { return &_class_data_; }

void WatchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchRequest *>(to)->MergeFrom(
      static_cast<const WatchRequest &>(from));
}


void WatchRequest::MergeFrom(const WatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.WatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_send_finished_runs() != 0) {
    _internal_set_send_finished_runs(from._internal_send_finished_runs());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchRequest::CopyFrom(const WatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.WatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchRequest::IsInitialized() const {
  return true;
}

void WatchRequest::InternalSwap(WatchRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(send_finished_runs_, other->send_finished_runs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[22]);
}

// ===================================================================

class WatchResponse::_Internal {
 public:
};

WatchResponse::WatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  runs_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.WatchResponse)
}
WatchResponse::WatchResponse(const WatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      runs_(from.runs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.WatchResponse)
}

void WatchResponse::SharedCtor() {
}

WatchResponse::~WatchResponse() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.WatchResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void WatchResponse::ArenaDtor(void* object) {
  WatchResponse* _this = reinterpret_cast< WatchResponse* >(object);
  (void)_this;
}
void WatchResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.WatchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .minknow_api.basecaller.RunInfo runs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_runs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WatchResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.WatchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .minknow_api.basecaller.RunInfo runs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_runs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_runs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.WatchResponse)
  return target;
}

size_t WatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.WatchResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .minknow_api.basecaller.RunInfo runs = 1;
  total_size += 1UL * this->_internal_runs_size();
  for (const auto& msg : this->runs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchResponse::GetClassData() const { return &_class_data_; }

void WatchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchResponse *>(to)->MergeFrom(
      static_cast<const WatchResponse &>(from));
}


void WatchResponse::MergeFrom(const WatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.WatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  runs_.MergeFrom(from.runs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchResponse::CopyFrom(const WatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.WatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchResponse::IsInitialized() const {
  return true;
}

void WatchResponse::InternalSwap(WatchResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  runs_.InternalSwap(&other->runs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[23]);
}

// ===================================================================

class MakeAlignmentIndexRequest::_Internal {
 public:
};

MakeAlignmentIndexRequest::MakeAlignmentIndexRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.MakeAlignmentIndexRequest)
}
MakeAlignmentIndexRequest::MakeAlignmentIndexRequest(const MakeAlignmentIndexRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  input_alignment_reference_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_input_alignment_reference().empty()) {
    input_alignment_reference_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_input_alignment_reference(), 
      GetArenaForAllocation());
  }
  output_alignment_index_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_output_alignment_index().empty()) {
    output_alignment_index_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_output_alignment_index(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.MakeAlignmentIndexRequest)
}

void MakeAlignmentIndexRequest::SharedCtor() {
input_alignment_reference_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
output_alignment_index_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MakeAlignmentIndexRequest::~MakeAlignmentIndexRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.MakeAlignmentIndexRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MakeAlignmentIndexRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  input_alignment_reference_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  output_alignment_index_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MakeAlignmentIndexRequest::ArenaDtor(void* object) {
  MakeAlignmentIndexRequest* _this = reinterpret_cast< MakeAlignmentIndexRequest* >(object);
  (void)_this;
}
void MakeAlignmentIndexRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MakeAlignmentIndexRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MakeAlignmentIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.MakeAlignmentIndexRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_alignment_reference_.ClearToEmpty();
  output_alignment_index_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MakeAlignmentIndexRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string input_alignment_reference = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_input_alignment_reference();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.MakeAlignmentIndexRequest.input_alignment_reference"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string output_alignment_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_output_alignment_index();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.MakeAlignmentIndexRequest.output_alignment_index"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MakeAlignmentIndexRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.MakeAlignmentIndexRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string input_alignment_reference = 1;
  if (!this->_internal_input_alignment_reference().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_input_alignment_reference().data(), static_cast<int>(this->_internal_input_alignment_reference().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.MakeAlignmentIndexRequest.input_alignment_reference");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_input_alignment_reference(), target);
  }

  // string output_alignment_index = 2;
  if (!this->_internal_output_alignment_index().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_output_alignment_index().data(), static_cast<int>(this->_internal_output_alignment_index().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.MakeAlignmentIndexRequest.output_alignment_index");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_output_alignment_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.MakeAlignmentIndexRequest)
  return target;
}

size_t MakeAlignmentIndexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.MakeAlignmentIndexRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string input_alignment_reference = 1;
  if (!this->_internal_input_alignment_reference().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_input_alignment_reference());
  }

  // string output_alignment_index = 2;
  if (!this->_internal_output_alignment_index().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_output_alignment_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MakeAlignmentIndexRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MakeAlignmentIndexRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MakeAlignmentIndexRequest::GetClassData() const { return &_class_data_; }

void MakeAlignmentIndexRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MakeAlignmentIndexRequest *>(to)->MergeFrom(
      static_cast<const MakeAlignmentIndexRequest &>(from));
}


void MakeAlignmentIndexRequest::MergeFrom(const MakeAlignmentIndexRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.MakeAlignmentIndexRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_input_alignment_reference().empty()) {
    _internal_set_input_alignment_reference(from._internal_input_alignment_reference());
  }
  if (!from._internal_output_alignment_index().empty()) {
    _internal_set_output_alignment_index(from._internal_output_alignment_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MakeAlignmentIndexRequest::CopyFrom(const MakeAlignmentIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.MakeAlignmentIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeAlignmentIndexRequest::IsInitialized() const {
  return true;
}

void MakeAlignmentIndexRequest::InternalSwap(MakeAlignmentIndexRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &input_alignment_reference_, lhs_arena,
      &other->input_alignment_reference_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &output_alignment_index_, lhs_arena,
      &other->output_alignment_index_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MakeAlignmentIndexRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[24]);
}

// ===================================================================

class MakeAlignmentIndexResponse::_Internal {
 public:
};

MakeAlignmentIndexResponse::MakeAlignmentIndexResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.MakeAlignmentIndexResponse)
}
MakeAlignmentIndexResponse::MakeAlignmentIndexResponse(const MakeAlignmentIndexResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.MakeAlignmentIndexResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MakeAlignmentIndexResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MakeAlignmentIndexResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MakeAlignmentIndexResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[25]);
}

// ===================================================================

class ListPostProcessingProtocolsRequest::_Internal {
 public:
};

ListPostProcessingProtocolsRequest::ListPostProcessingProtocolsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.ListPostProcessingProtocolsRequest)
}
ListPostProcessingProtocolsRequest::ListPostProcessingProtocolsRequest(const ListPostProcessingProtocolsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.ListPostProcessingProtocolsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPostProcessingProtocolsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPostProcessingProtocolsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListPostProcessingProtocolsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[26]);
}

// ===================================================================

class PostProcessingProtocolInfo::_Internal {
 public:
};

PostProcessingProtocolInfo::PostProcessingProtocolInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.PostProcessingProtocolInfo)
}
PostProcessingProtocolInfo::PostProcessingProtocolInfo(const PostProcessingProtocolInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identifier().empty()) {
    identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_identifier(), 
      GetArenaForAllocation());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.PostProcessingProtocolInfo)
}

void PostProcessingProtocolInfo::SharedCtor() {
identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PostProcessingProtocolInfo::~PostProcessingProtocolInfo() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.PostProcessingProtocolInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PostProcessingProtocolInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PostProcessingProtocolInfo::ArenaDtor(void* object) {
  PostProcessingProtocolInfo* _this = reinterpret_cast< PostProcessingProtocolInfo* >(object);
  (void)_this;
}
void PostProcessingProtocolInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PostProcessingProtocolInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PostProcessingProtocolInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.PostProcessingProtocolInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identifier_.ClearToEmpty();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostProcessingProtocolInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.PostProcessingProtocolInfo.identifier"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.PostProcessingProtocolInfo.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostProcessingProtocolInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.PostProcessingProtocolInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identifier().data(), static_cast<int>(this->_internal_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.PostProcessingProtocolInfo.identifier");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identifier(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.PostProcessingProtocolInfo.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.PostProcessingProtocolInfo)
  return target;
}

size_t PostProcessingProtocolInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.PostProcessingProtocolInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identifier());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PostProcessingProtocolInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PostProcessingProtocolInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PostProcessingProtocolInfo::GetClassData() const { return &_class_data_; }

void PostProcessingProtocolInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PostProcessingProtocolInfo *>(to)->MergeFrom(
      static_cast<const PostProcessingProtocolInfo &>(from));
}


void PostProcessingProtocolInfo::MergeFrom(const PostProcessingProtocolInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.PostProcessingProtocolInfo)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_identifier().empty()) {
    _internal_set_identifier(from._internal_identifier());
  }
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PostProcessingProtocolInfo::CopyFrom(const PostProcessingProtocolInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.PostProcessingProtocolInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostProcessingProtocolInfo::IsInitialized() const {
  return true;
}

void PostProcessingProtocolInfo::InternalSwap(PostProcessingProtocolInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &identifier_, lhs_arena,
      &other->identifier_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PostProcessingProtocolInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[27]);
}

// ===================================================================

class ListPostProcessingProtocolsResponse::_Internal {
 public:
};

ListPostProcessingProtocolsResponse::ListPostProcessingProtocolsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  protocols_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.ListPostProcessingProtocolsResponse)
}
ListPostProcessingProtocolsResponse::ListPostProcessingProtocolsResponse(const ListPostProcessingProtocolsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      protocols_(from.protocols_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.ListPostProcessingProtocolsResponse)
}

void ListPostProcessingProtocolsResponse::SharedCtor() {
}

ListPostProcessingProtocolsResponse::~ListPostProcessingProtocolsResponse() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.ListPostProcessingProtocolsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListPostProcessingProtocolsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListPostProcessingProtocolsResponse::ArenaDtor(void* object) {
  ListPostProcessingProtocolsResponse* _this = reinterpret_cast< ListPostProcessingProtocolsResponse* >(object);
  (void)_this;
}
void ListPostProcessingProtocolsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListPostProcessingProtocolsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPostProcessingProtocolsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.ListPostProcessingProtocolsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protocols_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPostProcessingProtocolsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .minknow_api.basecaller.PostProcessingProtocolInfo protocols = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_protocols(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListPostProcessingProtocolsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.ListPostProcessingProtocolsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .minknow_api.basecaller.PostProcessingProtocolInfo protocols = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_protocols_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_protocols(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.ListPostProcessingProtocolsResponse)
  return target;
}

size_t ListPostProcessingProtocolsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.ListPostProcessingProtocolsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .minknow_api.basecaller.PostProcessingProtocolInfo protocols = 1;
  total_size += 1UL * this->_internal_protocols_size();
  for (const auto& msg : this->protocols_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPostProcessingProtocolsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPostProcessingProtocolsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPostProcessingProtocolsResponse::GetClassData() const { return &_class_data_; }

void ListPostProcessingProtocolsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListPostProcessingProtocolsResponse *>(to)->MergeFrom(
      static_cast<const ListPostProcessingProtocolsResponse &>(from));
}


void ListPostProcessingProtocolsResponse::MergeFrom(const ListPostProcessingProtocolsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.ListPostProcessingProtocolsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  protocols_.MergeFrom(from.protocols_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPostProcessingProtocolsResponse::CopyFrom(const ListPostProcessingProtocolsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.ListPostProcessingProtocolsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPostProcessingProtocolsResponse::IsInitialized() const {
  return true;
}

void ListPostProcessingProtocolsResponse::InternalSwap(ListPostProcessingProtocolsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  protocols_.InternalSwap(&other->protocols_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPostProcessingProtocolsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[28]);
}

// ===================================================================

class ListSettingsForPostProcessingProtocolRequest::_Internal {
 public:
};

ListSettingsForPostProcessingProtocolRequest::ListSettingsForPostProcessingProtocolRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest)
}
ListSettingsForPostProcessingProtocolRequest::ListSettingsForPostProcessingProtocolRequest(const ListSettingsForPostProcessingProtocolRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_identifier().empty()) {
    identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_identifier(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest)
}

void ListSettingsForPostProcessingProtocolRequest::SharedCtor() {
identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListSettingsForPostProcessingProtocolRequest::~ListSettingsForPostProcessingProtocolRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSettingsForPostProcessingProtocolRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSettingsForPostProcessingProtocolRequest::ArenaDtor(void* object) {
  ListSettingsForPostProcessingProtocolRequest* _this = reinterpret_cast< ListSettingsForPostProcessingProtocolRequest* >(object);
  (void)_this;
}
void ListSettingsForPostProcessingProtocolRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSettingsForPostProcessingProtocolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSettingsForPostProcessingProtocolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identifier_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSettingsForPostProcessingProtocolRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest.identifier"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSettingsForPostProcessingProtocolRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identifier().data(), static_cast<int>(this->_internal_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest.identifier");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identifier(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest)
  return target;
}

size_t ListSettingsForPostProcessingProtocolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identifier());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSettingsForPostProcessingProtocolRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSettingsForPostProcessingProtocolRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSettingsForPostProcessingProtocolRequest::GetClassData() const { return &_class_data_; }

void ListSettingsForPostProcessingProtocolRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSettingsForPostProcessingProtocolRequest *>(to)->MergeFrom(
      static_cast<const ListSettingsForPostProcessingProtocolRequest &>(from));
}


void ListSettingsForPostProcessingProtocolRequest::MergeFrom(const ListSettingsForPostProcessingProtocolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_identifier().empty()) {
    _internal_set_identifier(from._internal_identifier());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSettingsForPostProcessingProtocolRequest::CopyFrom(const ListSettingsForPostProcessingProtocolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSettingsForPostProcessingProtocolRequest::IsInitialized() const {
  return true;
}

void ListSettingsForPostProcessingProtocolRequest::InternalSwap(ListSettingsForPostProcessingProtocolRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &identifier_, lhs_arena,
      &other->identifier_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSettingsForPostProcessingProtocolRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[29]);
}

// ===================================================================

class ListSettingsForPostProcessingProtocolResponse::_Internal {
 public:
};

void ListSettingsForPostProcessingProtocolResponse::clear_protocol_settings() {
  protocol_settings_.Clear();
}
ListSettingsForPostProcessingProtocolResponse::ListSettingsForPostProcessingProtocolResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  protocol_settings_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.ListSettingsForPostProcessingProtocolResponse)
}
ListSettingsForPostProcessingProtocolResponse::ListSettingsForPostProcessingProtocolResponse(const ListSettingsForPostProcessingProtocolResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      protocol_settings_(from.protocol_settings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&requires_fast5_input_, &from.requires_fast5_input_,
    static_cast<size_t>(reinterpret_cast<char*>(&requires_bam_input_) -
    reinterpret_cast<char*>(&requires_fast5_input_)) + sizeof(requires_bam_input_));
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.ListSettingsForPostProcessingProtocolResponse)
}

void ListSettingsForPostProcessingProtocolResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&requires_fast5_input_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&requires_bam_input_) -
    reinterpret_cast<char*>(&requires_fast5_input_)) + sizeof(requires_bam_input_));
}

ListSettingsForPostProcessingProtocolResponse::~ListSettingsForPostProcessingProtocolResponse() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.ListSettingsForPostProcessingProtocolResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSettingsForPostProcessingProtocolResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListSettingsForPostProcessingProtocolResponse::ArenaDtor(void* object) {
  ListSettingsForPostProcessingProtocolResponse* _this = reinterpret_cast< ListSettingsForPostProcessingProtocolResponse* >(object);
  (void)_this;
}
void ListSettingsForPostProcessingProtocolResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSettingsForPostProcessingProtocolResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSettingsForPostProcessingProtocolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protocol_settings_.Clear();
  ::memset(&requires_fast5_input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requires_bam_input_) -
      reinterpret_cast<char*>(&requires_fast5_input_)) + sizeof(requires_bam_input_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSettingsForPostProcessingProtocolResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool requires_fast5_input = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requires_fast5_input_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool requires_fastq_input = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          requires_fastq_input_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool requires_bam_input = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          requires_bam_input_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .minknow_api.protocol_settings.ProtocolSetting protocol_settings = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_protocol_settings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSettingsForPostProcessingProtocolResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool requires_fast5_input = 1;
  if (this->_internal_requires_fast5_input() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_requires_fast5_input(), target);
  }

  // bool requires_fastq_input = 2;
  if (this->_internal_requires_fastq_input() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_requires_fastq_input(), target);
  }

  // bool requires_bam_input = 3;
  if (this->_internal_requires_bam_input() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_requires_bam_input(), target);
  }

  // repeated .minknow_api.protocol_settings.ProtocolSetting protocol_settings = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_protocol_settings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_protocol_settings(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.ListSettingsForPostProcessingProtocolResponse)
  return target;
}

size_t ListSettingsForPostProcessingProtocolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .minknow_api.protocol_settings.ProtocolSetting protocol_settings = 4;
  total_size += 1UL * this->_internal_protocol_settings_size();
  for (const auto& msg : this->protocol_settings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool requires_fast5_input = 1;
  if (this->_internal_requires_fast5_input() != 0) {
    total_size += 1 + 1;
  }

  // bool requires_fastq_input = 2;
  if (this->_internal_requires_fastq_input() != 0) {
    total_size += 1 + 1;
  }

  // bool requires_bam_input = 3;
  if (this->_internal_requires_bam_input() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSettingsForPostProcessingProtocolResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSettingsForPostProcessingProtocolResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSettingsForPostProcessingProtocolResponse::GetClassData() const { return &_class_data_; }

void ListSettingsForPostProcessingProtocolResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSettingsForPostProcessingProtocolResponse *>(to)->MergeFrom(
      static_cast<const ListSettingsForPostProcessingProtocolResponse &>(from));
}


void ListSettingsForPostProcessingProtocolResponse::MergeFrom(const ListSettingsForPostProcessingProtocolResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  protocol_settings_.MergeFrom(from.protocol_settings_);
  if (from._internal_requires_fast5_input() != 0) {
    _internal_set_requires_fast5_input(from._internal_requires_fast5_input());
  }
  if (from._internal_requires_fastq_input() != 0) {
    _internal_set_requires_fastq_input(from._internal_requires_fastq_input());
  }
  if (from._internal_requires_bam_input() != 0) {
    _internal_set_requires_bam_input(from._internal_requires_bam_input());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSettingsForPostProcessingProtocolResponse::CopyFrom(const ListSettingsForPostProcessingProtocolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.ListSettingsForPostProcessingProtocolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSettingsForPostProcessingProtocolResponse::IsInitialized() const {
  return true;
}

void ListSettingsForPostProcessingProtocolResponse::InternalSwap(ListSettingsForPostProcessingProtocolResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  protocol_settings_.InternalSwap(&other->protocol_settings_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListSettingsForPostProcessingProtocolResponse, requires_bam_input_)
      + sizeof(ListSettingsForPostProcessingProtocolResponse::requires_bam_input_)
      - PROTOBUF_FIELD_OFFSET(ListSettingsForPostProcessingProtocolResponse, requires_fast5_input_)>(
          reinterpret_cast<char*>(&requires_fast5_input_),
          reinterpret_cast<char*>(&other->requires_fast5_input_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSettingsForPostProcessingProtocolResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[30]);
}

// ===================================================================

class UpdateProgressRequest::_Internal {
 public:
};

UpdateProgressRequest::UpdateProgressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.UpdateProgressRequest)
}
UpdateProgressRequest::UpdateProgressRequest(const UpdateProgressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  progress_ = from.progress_;
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.UpdateProgressRequest)
}

void UpdateProgressRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
progress_ = 0;
}

UpdateProgressRequest::~UpdateProgressRequest() {
  // @@protoc_insertion_point(destructor:minknow_api.basecaller.UpdateProgressRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateProgressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateProgressRequest::ArenaDtor(void* object) {
  UpdateProgressRequest* _this = reinterpret_cast< UpdateProgressRequest* >(object);
  (void)_this;
}
void UpdateProgressRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateProgressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateProgressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:minknow_api.basecaller.UpdateProgressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  progress_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateProgressRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "minknow_api.basecaller.UpdateProgressRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float progress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateProgressRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:minknow_api.basecaller.UpdateProgressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "minknow_api.basecaller.UpdateProgressRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // float progress = 2;
  if (!(this->_internal_progress() <= 0 && this->_internal_progress() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:minknow_api.basecaller.UpdateProgressRequest)
  return target;
}

size_t UpdateProgressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:minknow_api.basecaller.UpdateProgressRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // float progress = 2;
  if (!(this->_internal_progress() <= 0 && this->_internal_progress() >= 0)) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateProgressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateProgressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateProgressRequest::GetClassData() const { return &_class_data_; }

void UpdateProgressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateProgressRequest *>(to)->MergeFrom(
      static_cast<const UpdateProgressRequest &>(from));
}


void UpdateProgressRequest::MergeFrom(const UpdateProgressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:minknow_api.basecaller.UpdateProgressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!(from._internal_progress() <= 0 && from._internal_progress() >= 0)) {
    _internal_set_progress(from._internal_progress());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateProgressRequest::CopyFrom(const UpdateProgressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:minknow_api.basecaller.UpdateProgressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProgressRequest::IsInitialized() const {
  return true;
}

void UpdateProgressRequest::InternalSwap(UpdateProgressRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(progress_, other->progress_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateProgressRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[31]);
}

// ===================================================================

class UpdateProgressResponse::_Internal {
 public:
};

UpdateProgressResponse::UpdateProgressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:minknow_api.basecaller.UpdateProgressResponse)
}
UpdateProgressResponse::UpdateProgressResponse(const UpdateProgressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:minknow_api.basecaller.UpdateProgressResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateProgressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateProgressResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UpdateProgressResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_getter, &descriptor_table_minknow_5fapi_2fbasecaller_2eproto_once,
      file_level_metadata_minknow_5fapi_2fbasecaller_2eproto[32]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace basecaller
}  // namespace minknow_api
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListConfigsByKitRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListConfigsByKitRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListConfigsByKitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListConfigsByKitResponse_ConfigList >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell_KitConfigsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListConfigsByKitResponse_PerFlowCell >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListConfigsByKitResponse_FlowCellConfigsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListConfigsByKitResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListConfigsByKitResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListConfigsByKitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartBasecallingRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartBasecallingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartBasecallingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartBasecallingResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartBasecallingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartBasecallingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartBarcodingRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartBarcodingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartBarcodingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartBarcodingResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartBarcodingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartBarcodingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartAlignmentRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartAlignmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartAlignmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartAlignmentResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartAlignmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartAlignmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartPostProcessingProtocolRequest_SettingValuesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartPostProcessingProtocolRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartPostProcessingProtocolRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartPostProcessingProtocolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::StartPostProcessingProtocolResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::StartPostProcessingProtocolResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::StartPostProcessingProtocolResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::CancelRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::CancelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::CancelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::CancelResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::CancelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::CancelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::RunInfo* Arena::CreateMaybeMessage< ::minknow_api::basecaller::RunInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::RunInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::GetInfoRequest_IdList* Arena::CreateMaybeMessage< ::minknow_api::basecaller::GetInfoRequest_IdList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::GetInfoRequest_IdList >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::GetInfoRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::GetInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::GetInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::GetInfoResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::GetInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::GetInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::WatchRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::WatchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::WatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::WatchResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::WatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::WatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::MakeAlignmentIndexRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::MakeAlignmentIndexRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::MakeAlignmentIndexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::MakeAlignmentIndexResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::MakeAlignmentIndexResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::MakeAlignmentIndexResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListPostProcessingProtocolsRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListPostProcessingProtocolsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListPostProcessingProtocolsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::PostProcessingProtocolInfo* Arena::CreateMaybeMessage< ::minknow_api::basecaller::PostProcessingProtocolInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::PostProcessingProtocolInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListPostProcessingProtocolsResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListPostProcessingProtocolsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListPostProcessingProtocolsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListSettingsForPostProcessingProtocolRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListSettingsForPostProcessingProtocolRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListSettingsForPostProcessingProtocolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::ListSettingsForPostProcessingProtocolResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::ListSettingsForPostProcessingProtocolResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::ListSettingsForPostProcessingProtocolResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::UpdateProgressRequest* Arena::CreateMaybeMessage< ::minknow_api::basecaller::UpdateProgressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::UpdateProgressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::minknow_api::basecaller::UpdateProgressResponse* Arena::CreateMaybeMessage< ::minknow_api::basecaller::UpdateProgressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::minknow_api::basecaller::UpdateProgressResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
