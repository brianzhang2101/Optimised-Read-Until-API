// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: minknow_api/data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_minknow_5fapi_2fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_minknow_5fapi_2fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "minknow_api/rpc_options.pb.h"
#include "minknow_api/device.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_minknow_5fapi_2fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_minknow_5fapi_2fdata_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[50]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_minknow_5fapi_2fdata_2eproto;
namespace minknow_api {
namespace data {
class GetChannelStatesRequest;
struct GetChannelStatesRequestDefaultTypeInternal;
extern GetChannelStatesRequestDefaultTypeInternal _GetChannelStatesRequest_default_instance_;
class GetChannelStatesResponse;
struct GetChannelStatesResponseDefaultTypeInternal;
extern GetChannelStatesResponseDefaultTypeInternal _GetChannelStatesResponse_default_instance_;
class GetChannelStatesResponse_ChannelStateData;
struct GetChannelStatesResponse_ChannelStateDataDefaultTypeInternal;
extern GetChannelStatesResponse_ChannelStateDataDefaultTypeInternal _GetChannelStatesResponse_ChannelStateData_default_instance_;
class GetDataTypesRequest;
struct GetDataTypesRequestDefaultTypeInternal;
extern GetDataTypesRequestDefaultTypeInternal _GetDataTypesRequest_default_instance_;
class GetDataTypesResponse;
struct GetDataTypesResponseDefaultTypeInternal;
extern GetDataTypesResponseDefaultTypeInternal _GetDataTypesResponse_default_instance_;
class GetDataTypesResponse_DataType;
struct GetDataTypesResponse_DataTypeDefaultTypeInternal;
extern GetDataTypesResponse_DataTypeDefaultTypeInternal _GetDataTypesResponse_DataType_default_instance_;
class GetExperimentYieldInfoRequest;
struct GetExperimentYieldInfoRequestDefaultTypeInternal;
extern GetExperimentYieldInfoRequestDefaultTypeInternal _GetExperimentYieldInfoRequest_default_instance_;
class GetExperimentYieldInfoResponse;
struct GetExperimentYieldInfoResponseDefaultTypeInternal;
extern GetExperimentYieldInfoResponseDefaultTypeInternal _GetExperimentYieldInfoResponse_default_instance_;
class GetExperimentYieldInfoResponse_AcquisitionInfo;
struct GetExperimentYieldInfoResponse_AcquisitionInfoDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_AcquisitionInfoDefaultTypeInternal _GetExperimentYieldInfoResponse_AcquisitionInfo_default_instance_;
class GetExperimentYieldInfoResponse_AnalyserInfo;
struct GetExperimentYieldInfoResponse_AnalyserInfoDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_AnalyserInfoDefaultTypeInternal _GetExperimentYieldInfoResponse_AnalyserInfo_default_instance_;
class GetExperimentYieldInfoResponse_BasecallStatistics;
struct GetExperimentYieldInfoResponse_BasecallStatisticsDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_BasecallStatisticsDefaultTypeInternal _GetExperimentYieldInfoResponse_BasecallStatistics_default_instance_;
class GetExperimentYieldInfoResponse_BulkInfo;
struct GetExperimentYieldInfoResponse_BulkInfoDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_BulkInfoDefaultTypeInternal _GetExperimentYieldInfoResponse_BulkInfo_default_instance_;
class GetExperimentYieldInfoResponse_CompleteReadInfo;
struct GetExperimentYieldInfoResponse_CompleteReadInfoDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_CompleteReadInfoDefaultTypeInternal _GetExperimentYieldInfoResponse_CompleteReadInfo_default_instance_;
class GetExperimentYieldInfoResponse_FastqReadWritingStatistics;
struct GetExperimentYieldInfoResponse_FastqReadWritingStatisticsDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_FastqReadWritingStatisticsDefaultTypeInternal _GetExperimentYieldInfoResponse_FastqReadWritingStatistics_default_instance_;
class GetExperimentYieldInfoResponse_FileOperationQueueProgress;
struct GetExperimentYieldInfoResponse_FileOperationQueueProgressDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_FileOperationQueueProgressDefaultTypeInternal _GetExperimentYieldInfoResponse_FileOperationQueueProgress_default_instance_;
class GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo;
struct GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfoDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfoDefaultTypeInternal _GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo_default_instance_;
class GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics;
struct GetExperimentYieldInfoResponse_HdfMultiReadWritingStatisticsDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_HdfMultiReadWritingStatisticsDefaultTypeInternal _GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics_default_instance_;
class GetExperimentYieldInfoResponse_HdfWriterInfo;
struct GetExperimentYieldInfoResponse_HdfWriterInfoDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_HdfWriterInfoDefaultTypeInternal _GetExperimentYieldInfoResponse_HdfWriterInfo_default_instance_;
class GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics;
struct GetExperimentYieldInfoResponse_ProtobufReadWritingStatisticsDefaultTypeInternal;
extern GetExperimentYieldInfoResponse_ProtobufReadWritingStatisticsDefaultTypeInternal _GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics_default_instance_;
class GetLiveReadsRequest;
struct GetLiveReadsRequestDefaultTypeInternal;
extern GetLiveReadsRequestDefaultTypeInternal _GetLiveReadsRequest_default_instance_;
class GetLiveReadsRequest_Action;
struct GetLiveReadsRequest_ActionDefaultTypeInternal;
extern GetLiveReadsRequest_ActionDefaultTypeInternal _GetLiveReadsRequest_Action_default_instance_;
class GetLiveReadsRequest_Actions;
struct GetLiveReadsRequest_ActionsDefaultTypeInternal;
extern GetLiveReadsRequest_ActionsDefaultTypeInternal _GetLiveReadsRequest_Actions_default_instance_;
class GetLiveReadsRequest_StopFurtherData;
struct GetLiveReadsRequest_StopFurtherDataDefaultTypeInternal;
extern GetLiveReadsRequest_StopFurtherDataDefaultTypeInternal _GetLiveReadsRequest_StopFurtherData_default_instance_;
class GetLiveReadsRequest_StreamSetup;
struct GetLiveReadsRequest_StreamSetupDefaultTypeInternal;
extern GetLiveReadsRequest_StreamSetupDefaultTypeInternal _GetLiveReadsRequest_StreamSetup_default_instance_;
class GetLiveReadsRequest_UnblockAction;
struct GetLiveReadsRequest_UnblockActionDefaultTypeInternal;
extern GetLiveReadsRequest_UnblockActionDefaultTypeInternal _GetLiveReadsRequest_UnblockAction_default_instance_;
class GetLiveReadsResponse;
struct GetLiveReadsResponseDefaultTypeInternal;
extern GetLiveReadsResponseDefaultTypeInternal _GetLiveReadsResponse_default_instance_;
class GetLiveReadsResponse_ActionResponse;
struct GetLiveReadsResponse_ActionResponseDefaultTypeInternal;
extern GetLiveReadsResponse_ActionResponseDefaultTypeInternal _GetLiveReadsResponse_ActionResponse_default_instance_;
class GetLiveReadsResponse_ChannelsEntry_DoNotUse;
struct GetLiveReadsResponse_ChannelsEntry_DoNotUseDefaultTypeInternal;
extern GetLiveReadsResponse_ChannelsEntry_DoNotUseDefaultTypeInternal _GetLiveReadsResponse_ChannelsEntry_DoNotUse_default_instance_;
class GetLiveReadsResponse_ReadData;
struct GetLiveReadsResponse_ReadDataDefaultTypeInternal;
extern GetLiveReadsResponse_ReadDataDefaultTypeInternal _GetLiveReadsResponse_ReadData_default_instance_;
class GetReadStatisticsRequest;
struct GetReadStatisticsRequestDefaultTypeInternal;
extern GetReadStatisticsRequestDefaultTypeInternal _GetReadStatisticsRequest_default_instance_;
class GetReadStatisticsResponse;
struct GetReadStatisticsResponseDefaultTypeInternal;
extern GetReadStatisticsResponseDefaultTypeInternal _GetReadStatisticsResponse_default_instance_;
class GetReadStatisticsResponse_ChunkStatistics;
struct GetReadStatisticsResponse_ChunkStatisticsDefaultTypeInternal;
extern GetReadStatisticsResponse_ChunkStatisticsDefaultTypeInternal _GetReadStatisticsResponse_ChunkStatistics_default_instance_;
class GetReadStatisticsResponse_PerChannelData;
struct GetReadStatisticsResponse_PerChannelDataDefaultTypeInternal;
extern GetReadStatisticsResponse_PerChannelDataDefaultTypeInternal _GetReadStatisticsResponse_PerChannelData_default_instance_;
class GetReadStatisticsResponse_PerClassificationData;
struct GetReadStatisticsResponse_PerClassificationDataDefaultTypeInternal;
extern GetReadStatisticsResponse_PerClassificationDataDefaultTypeInternal _GetReadStatisticsResponse_PerClassificationData_default_instance_;
class GetReadStatisticsResponse_PerConfigurationData;
struct GetReadStatisticsResponse_PerConfigurationDataDefaultTypeInternal;
extern GetReadStatisticsResponse_PerConfigurationDataDefaultTypeInternal _GetReadStatisticsResponse_PerConfigurationData_default_instance_;
class GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse;
struct GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUseDefaultTypeInternal;
extern GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUseDefaultTypeInternal _GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse_default_instance_;
class GetReadStatisticsResponse_Statistics;
struct GetReadStatisticsResponse_StatisticsDefaultTypeInternal;
extern GetReadStatisticsResponse_StatisticsDefaultTypeInternal _GetReadStatisticsResponse_Statistics_default_instance_;
class GetSignalBytesRequest;
struct GetSignalBytesRequestDefaultTypeInternal;
extern GetSignalBytesRequestDefaultTypeInternal _GetSignalBytesRequest_default_instance_;
class GetSignalBytesResponse;
struct GetSignalBytesResponseDefaultTypeInternal;
extern GetSignalBytesResponseDefaultTypeInternal _GetSignalBytesResponse_default_instance_;
class GetSignalBytesResponse_ChannelConfigChange;
struct GetSignalBytesResponse_ChannelConfigChangeDefaultTypeInternal;
extern GetSignalBytesResponse_ChannelConfigChangeDefaultTypeInternal _GetSignalBytesResponse_ChannelConfigChange_default_instance_;
class GetSignalBytesResponse_ChannelData;
struct GetSignalBytesResponse_ChannelDataDefaultTypeInternal;
extern GetSignalBytesResponse_ChannelDataDefaultTypeInternal _GetSignalBytesResponse_ChannelData_default_instance_;
class GetSignalMinMaxRequest;
struct GetSignalMinMaxRequestDefaultTypeInternal;
extern GetSignalMinMaxRequestDefaultTypeInternal _GetSignalMinMaxRequest_default_instance_;
class GetSignalMinMaxResponse;
struct GetSignalMinMaxResponseDefaultTypeInternal;
extern GetSignalMinMaxResponseDefaultTypeInternal _GetSignalMinMaxResponse_default_instance_;
class GetSignalMinMaxResponse_ChannelData;
struct GetSignalMinMaxResponse_ChannelDataDefaultTypeInternal;
extern GetSignalMinMaxResponse_ChannelDataDefaultTypeInternal _GetSignalMinMaxResponse_ChannelData_default_instance_;
class LockChannelStatesRequest;
struct LockChannelStatesRequestDefaultTypeInternal;
extern LockChannelStatesRequestDefaultTypeInternal _LockChannelStatesRequest_default_instance_;
class LockChannelStatesResponse;
struct LockChannelStatesResponseDefaultTypeInternal;
extern LockChannelStatesResponseDefaultTypeInternal _LockChannelStatesResponse_default_instance_;
class ResetChannelStatesRequest;
struct ResetChannelStatesRequestDefaultTypeInternal;
extern ResetChannelStatesRequestDefaultTypeInternal _ResetChannelStatesRequest_default_instance_;
class ResetChannelStatesResponse;
struct ResetChannelStatesResponseDefaultTypeInternal;
extern ResetChannelStatesResponseDefaultTypeInternal _ResetChannelStatesResponse_default_instance_;
class UnlockChannelStatesRequest;
struct UnlockChannelStatesRequestDefaultTypeInternal;
extern UnlockChannelStatesRequestDefaultTypeInternal _UnlockChannelStatesRequest_default_instance_;
class UnlockChannelStatesResponse;
struct UnlockChannelStatesResponseDefaultTypeInternal;
extern UnlockChannelStatesResponseDefaultTypeInternal _UnlockChannelStatesResponse_default_instance_;
}  // namespace data
}  // namespace minknow_api
PROTOBUF_NAMESPACE_OPEN
template<> ::minknow_api::data::GetChannelStatesRequest* Arena::CreateMaybeMessage<::minknow_api::data::GetChannelStatesRequest>(Arena*);
template<> ::minknow_api::data::GetChannelStatesResponse* Arena::CreateMaybeMessage<::minknow_api::data::GetChannelStatesResponse>(Arena*);
template<> ::minknow_api::data::GetChannelStatesResponse_ChannelStateData* Arena::CreateMaybeMessage<::minknow_api::data::GetChannelStatesResponse_ChannelStateData>(Arena*);
template<> ::minknow_api::data::GetDataTypesRequest* Arena::CreateMaybeMessage<::minknow_api::data::GetDataTypesRequest>(Arena*);
template<> ::minknow_api::data::GetDataTypesResponse* Arena::CreateMaybeMessage<::minknow_api::data::GetDataTypesResponse>(Arena*);
template<> ::minknow_api::data::GetDataTypesResponse_DataType* Arena::CreateMaybeMessage<::minknow_api::data::GetDataTypesResponse_DataType>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoRequest* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoRequest>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo>(Arena*);
template<> ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* Arena::CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics>(Arena*);
template<> ::minknow_api::data::GetLiveReadsRequest* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsRequest>(Arena*);
template<> ::minknow_api::data::GetLiveReadsRequest_Action* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsRequest_Action>(Arena*);
template<> ::minknow_api::data::GetLiveReadsRequest_Actions* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsRequest_Actions>(Arena*);
template<> ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsRequest_StopFurtherData>(Arena*);
template<> ::minknow_api::data::GetLiveReadsRequest_StreamSetup* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsRequest_StreamSetup>(Arena*);
template<> ::minknow_api::data::GetLiveReadsRequest_UnblockAction* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsRequest_UnblockAction>(Arena*);
template<> ::minknow_api::data::GetLiveReadsResponse* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsResponse>(Arena*);
template<> ::minknow_api::data::GetLiveReadsResponse_ActionResponse* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsResponse_ActionResponse>(Arena*);
template<> ::minknow_api::data::GetLiveReadsResponse_ChannelsEntry_DoNotUse* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsResponse_ChannelsEntry_DoNotUse>(Arena*);
template<> ::minknow_api::data::GetLiveReadsResponse_ReadData* Arena::CreateMaybeMessage<::minknow_api::data::GetLiveReadsResponse_ReadData>(Arena*);
template<> ::minknow_api::data::GetReadStatisticsRequest* Arena::CreateMaybeMessage<::minknow_api::data::GetReadStatisticsRequest>(Arena*);
template<> ::minknow_api::data::GetReadStatisticsResponse* Arena::CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse>(Arena*);
template<> ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* Arena::CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics>(Arena*);
template<> ::minknow_api::data::GetReadStatisticsResponse_PerChannelData* Arena::CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_PerChannelData>(Arena*);
template<> ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* Arena::CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_PerClassificationData>(Arena*);
template<> ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData* Arena::CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData>(Arena*);
template<> ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse* Arena::CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse>(Arena*);
template<> ::minknow_api::data::GetReadStatisticsResponse_Statistics* Arena::CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_Statistics>(Arena*);
template<> ::minknow_api::data::GetSignalBytesRequest* Arena::CreateMaybeMessage<::minknow_api::data::GetSignalBytesRequest>(Arena*);
template<> ::minknow_api::data::GetSignalBytesResponse* Arena::CreateMaybeMessage<::minknow_api::data::GetSignalBytesResponse>(Arena*);
template<> ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange* Arena::CreateMaybeMessage<::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange>(Arena*);
template<> ::minknow_api::data::GetSignalBytesResponse_ChannelData* Arena::CreateMaybeMessage<::minknow_api::data::GetSignalBytesResponse_ChannelData>(Arena*);
template<> ::minknow_api::data::GetSignalMinMaxRequest* Arena::CreateMaybeMessage<::minknow_api::data::GetSignalMinMaxRequest>(Arena*);
template<> ::minknow_api::data::GetSignalMinMaxResponse* Arena::CreateMaybeMessage<::minknow_api::data::GetSignalMinMaxResponse>(Arena*);
template<> ::minknow_api::data::GetSignalMinMaxResponse_ChannelData* Arena::CreateMaybeMessage<::minknow_api::data::GetSignalMinMaxResponse_ChannelData>(Arena*);
template<> ::minknow_api::data::LockChannelStatesRequest* Arena::CreateMaybeMessage<::minknow_api::data::LockChannelStatesRequest>(Arena*);
template<> ::minknow_api::data::LockChannelStatesResponse* Arena::CreateMaybeMessage<::minknow_api::data::LockChannelStatesResponse>(Arena*);
template<> ::minknow_api::data::ResetChannelStatesRequest* Arena::CreateMaybeMessage<::minknow_api::data::ResetChannelStatesRequest>(Arena*);
template<> ::minknow_api::data::ResetChannelStatesResponse* Arena::CreateMaybeMessage<::minknow_api::data::ResetChannelStatesResponse>(Arena*);
template<> ::minknow_api::data::UnlockChannelStatesRequest* Arena::CreateMaybeMessage<::minknow_api::data::UnlockChannelStatesRequest>(Arena*);
template<> ::minknow_api::data::UnlockChannelStatesResponse* Arena::CreateMaybeMessage<::minknow_api::data::UnlockChannelStatesResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace minknow_api {
namespace data {

enum GetDataTypesResponse_DataType_Type : int {
  GetDataTypesResponse_DataType_Type_SIGNED_INTEGER = 0,
  GetDataTypesResponse_DataType_Type_UNSIGNED_INTEGER = 1,
  GetDataTypesResponse_DataType_Type_FLOATING_POINT = 2,
  GetDataTypesResponse_DataType_Type_GetDataTypesResponse_DataType_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GetDataTypesResponse_DataType_Type_GetDataTypesResponse_DataType_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GetDataTypesResponse_DataType_Type_IsValid(int value);
constexpr GetDataTypesResponse_DataType_Type GetDataTypesResponse_DataType_Type_Type_MIN = GetDataTypesResponse_DataType_Type_SIGNED_INTEGER;
constexpr GetDataTypesResponse_DataType_Type GetDataTypesResponse_DataType_Type_Type_MAX = GetDataTypesResponse_DataType_Type_FLOATING_POINT;
constexpr int GetDataTypesResponse_DataType_Type_Type_ARRAYSIZE = GetDataTypesResponse_DataType_Type_Type_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetDataTypesResponse_DataType_Type_descriptor();
template<typename T>
inline const std::string& GetDataTypesResponse_DataType_Type_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GetDataTypesResponse_DataType_Type>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GetDataTypesResponse_DataType_Type_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GetDataTypesResponse_DataType_Type_descriptor(), enum_t_value);
}
inline bool GetDataTypesResponse_DataType_Type_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GetDataTypesResponse_DataType_Type* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GetDataTypesResponse_DataType_Type>(
    GetDataTypesResponse_DataType_Type_descriptor(), name, value);
}
enum GetLiveReadsRequest_RawDataType : int {
  GetLiveReadsRequest_RawDataType_KEEP_LAST = 0,
  GetLiveReadsRequest_RawDataType_NONE = 1,
  GetLiveReadsRequest_RawDataType_CALIBRATED = 2,
  GetLiveReadsRequest_RawDataType_UNCALIBRATED = 3,
  GetLiveReadsRequest_RawDataType_GetLiveReadsRequest_RawDataType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GetLiveReadsRequest_RawDataType_GetLiveReadsRequest_RawDataType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GetLiveReadsRequest_RawDataType_IsValid(int value);
constexpr GetLiveReadsRequest_RawDataType GetLiveReadsRequest_RawDataType_RawDataType_MIN = GetLiveReadsRequest_RawDataType_KEEP_LAST;
constexpr GetLiveReadsRequest_RawDataType GetLiveReadsRequest_RawDataType_RawDataType_MAX = GetLiveReadsRequest_RawDataType_UNCALIBRATED;
constexpr int GetLiveReadsRequest_RawDataType_RawDataType_ARRAYSIZE = GetLiveReadsRequest_RawDataType_RawDataType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetLiveReadsRequest_RawDataType_descriptor();
template<typename T>
inline const std::string& GetLiveReadsRequest_RawDataType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GetLiveReadsRequest_RawDataType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GetLiveReadsRequest_RawDataType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GetLiveReadsRequest_RawDataType_descriptor(), enum_t_value);
}
inline bool GetLiveReadsRequest_RawDataType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GetLiveReadsRequest_RawDataType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GetLiveReadsRequest_RawDataType>(
    GetLiveReadsRequest_RawDataType_descriptor(), name, value);
}
enum GetLiveReadsResponse_ActionResponse_Response : int {
  GetLiveReadsResponse_ActionResponse_Response_SUCCESS = 0,
  GetLiveReadsResponse_ActionResponse_Response_FAILED_READ_FINISHED = 1,
  GetLiveReadsResponse_ActionResponse_Response_FAILED_READ_TOO_LONG = 2,
  GetLiveReadsResponse_ActionResponse_Response_GetLiveReadsResponse_ActionResponse_Response_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GetLiveReadsResponse_ActionResponse_Response_GetLiveReadsResponse_ActionResponse_Response_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GetLiveReadsResponse_ActionResponse_Response_IsValid(int value);
constexpr GetLiveReadsResponse_ActionResponse_Response GetLiveReadsResponse_ActionResponse_Response_Response_MIN = GetLiveReadsResponse_ActionResponse_Response_SUCCESS;
constexpr GetLiveReadsResponse_ActionResponse_Response GetLiveReadsResponse_ActionResponse_Response_Response_MAX = GetLiveReadsResponse_ActionResponse_Response_FAILED_READ_TOO_LONG;
constexpr int GetLiveReadsResponse_ActionResponse_Response_Response_ARRAYSIZE = GetLiveReadsResponse_ActionResponse_Response_Response_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetLiveReadsResponse_ActionResponse_Response_descriptor();
template<typename T>
inline const std::string& GetLiveReadsResponse_ActionResponse_Response_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GetLiveReadsResponse_ActionResponse_Response>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GetLiveReadsResponse_ActionResponse_Response_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GetLiveReadsResponse_ActionResponse_Response_descriptor(), enum_t_value);
}
inline bool GetLiveReadsResponse_ActionResponse_Response_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GetLiveReadsResponse_ActionResponse_Response* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GetLiveReadsResponse_ActionResponse_Response>(
    GetLiveReadsResponse_ActionResponse_Response_descriptor(), name, value);
}
enum GetReadStatisticsRequest_ReadSplit : int {
  GetReadStatisticsRequest_ReadSplit_CHUNK = 0,
  GetReadStatisticsRequest_ReadSplit_COMPLETED_READ = 1,
  GetReadStatisticsRequest_ReadSplit_GetReadStatisticsRequest_ReadSplit_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GetReadStatisticsRequest_ReadSplit_GetReadStatisticsRequest_ReadSplit_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GetReadStatisticsRequest_ReadSplit_IsValid(int value);
constexpr GetReadStatisticsRequest_ReadSplit GetReadStatisticsRequest_ReadSplit_ReadSplit_MIN = GetReadStatisticsRequest_ReadSplit_CHUNK;
constexpr GetReadStatisticsRequest_ReadSplit GetReadStatisticsRequest_ReadSplit_ReadSplit_MAX = GetReadStatisticsRequest_ReadSplit_COMPLETED_READ;
constexpr int GetReadStatisticsRequest_ReadSplit_ReadSplit_ARRAYSIZE = GetReadStatisticsRequest_ReadSplit_ReadSplit_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetReadStatisticsRequest_ReadSplit_descriptor();
template<typename T>
inline const std::string& GetReadStatisticsRequest_ReadSplit_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GetReadStatisticsRequest_ReadSplit>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GetReadStatisticsRequest_ReadSplit_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GetReadStatisticsRequest_ReadSplit_descriptor(), enum_t_value);
}
inline bool GetReadStatisticsRequest_ReadSplit_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GetReadStatisticsRequest_ReadSplit* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GetReadStatisticsRequest_ReadSplit>(
    GetReadStatisticsRequest_ReadSplit_descriptor(), name, value);
}
// ===================================================================

class GetChannelStatesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetChannelStatesRequest) */ {
 public:
  inline GetChannelStatesRequest() : GetChannelStatesRequest(nullptr) {}
  ~GetChannelStatesRequest() override;
  explicit constexpr GetChannelStatesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetChannelStatesRequest(const GetChannelStatesRequest& from);
  GetChannelStatesRequest(GetChannelStatesRequest&& from) noexcept
    : GetChannelStatesRequest() {
    *this = ::std::move(from);
  }

  inline GetChannelStatesRequest& operator=(const GetChannelStatesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChannelStatesRequest& operator=(GetChannelStatesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChannelStatesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChannelStatesRequest* internal_default_instance() {
    return reinterpret_cast<const GetChannelStatesRequest*>(
               &_GetChannelStatesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetChannelStatesRequest& a, GetChannelStatesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetChannelStatesRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChannelStatesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetChannelStatesRequest* New() const final {
    return new GetChannelStatesRequest();
  }

  GetChannelStatesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetChannelStatesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetChannelStatesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetChannelStatesRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetChannelStatesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetChannelStatesRequest";
  }
  protected:
  explicit GetChannelStatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseChannelStatesIdsFieldNumber = 3,
    kHeartbeatFieldNumber = 5,
    kFirstChannelFieldNumber = 1,
    kLastChannelFieldNumber = 2,
    kWaitForProcessingFieldNumber = 4,
  };
  // .google.protobuf.BoolValue use_channel_states_ids = 3;
  bool has_use_channel_states_ids() const;
  private:
  bool _internal_has_use_channel_states_ids() const;
  public:
  void clear_use_channel_states_ids();
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& use_channel_states_ids() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::BoolValue* release_use_channel_states_ids();
  ::PROTOBUF_NAMESPACE_ID::BoolValue* mutable_use_channel_states_ids();
  void set_allocated_use_channel_states_ids(::PROTOBUF_NAMESPACE_ID::BoolValue* use_channel_states_ids);
  private:
  const ::PROTOBUF_NAMESPACE_ID::BoolValue& _internal_use_channel_states_ids() const;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _internal_mutable_use_channel_states_ids();
  public:
  void unsafe_arena_set_allocated_use_channel_states_ids(
      ::PROTOBUF_NAMESPACE_ID::BoolValue* use_channel_states_ids);
  ::PROTOBUF_NAMESPACE_ID::BoolValue* unsafe_arena_release_use_channel_states_ids();

  // .google.protobuf.Duration heartbeat = 5;
  bool has_heartbeat() const;
  private:
  bool _internal_has_heartbeat() const;
  public:
  void clear_heartbeat();
  const ::PROTOBUF_NAMESPACE_ID::Duration& heartbeat() const;
  PROTOBUF_MUST_USE_RESULT ::PROTOBUF_NAMESPACE_ID::Duration* release_heartbeat();
  ::PROTOBUF_NAMESPACE_ID::Duration* mutable_heartbeat();
  void set_allocated_heartbeat(::PROTOBUF_NAMESPACE_ID::Duration* heartbeat);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Duration& _internal_heartbeat() const;
  ::PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_heartbeat();
  public:
  void unsafe_arena_set_allocated_heartbeat(
      ::PROTOBUF_NAMESPACE_ID::Duration* heartbeat);
  ::PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_heartbeat();

  // uint32 first_channel = 1 [(.minknow_api.rpc_required) = true];
  void clear_first_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_channel() const;
  void set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_channel() const;
  void _internal_set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_channel = 2 [(.minknow_api.rpc_required) = true];
  void clear_last_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_channel() const;
  void set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_channel() const;
  void _internal_set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool wait_for_processing = 4;
  void clear_wait_for_processing();
  bool wait_for_processing() const;
  void set_wait_for_processing(bool value);
  private:
  bool _internal_wait_for_processing() const;
  void _internal_set_wait_for_processing(bool value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetChannelStatesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::BoolValue* use_channel_states_ids_;
  ::PROTOBUF_NAMESPACE_ID::Duration* heartbeat_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_channel_;
  bool wait_for_processing_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetChannelStatesResponse_ChannelStateData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetChannelStatesResponse.ChannelStateData) */ {
 public:
  inline GetChannelStatesResponse_ChannelStateData() : GetChannelStatesResponse_ChannelStateData(nullptr) {}
  ~GetChannelStatesResponse_ChannelStateData() override;
  explicit constexpr GetChannelStatesResponse_ChannelStateData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetChannelStatesResponse_ChannelStateData(const GetChannelStatesResponse_ChannelStateData& from);
  GetChannelStatesResponse_ChannelStateData(GetChannelStatesResponse_ChannelStateData&& from) noexcept
    : GetChannelStatesResponse_ChannelStateData() {
    *this = ::std::move(from);
  }

  inline GetChannelStatesResponse_ChannelStateData& operator=(const GetChannelStatesResponse_ChannelStateData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChannelStatesResponse_ChannelStateData& operator=(GetChannelStatesResponse_ChannelStateData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChannelStatesResponse_ChannelStateData& default_instance() {
    return *internal_default_instance();
  }
  enum StateCase {
    kStateId = 2,
    kStateName = 3,
    STATE_NOT_SET = 0,
  };

  static inline const GetChannelStatesResponse_ChannelStateData* internal_default_instance() {
    return reinterpret_cast<const GetChannelStatesResponse_ChannelStateData*>(
               &_GetChannelStatesResponse_ChannelStateData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetChannelStatesResponse_ChannelStateData& a, GetChannelStatesResponse_ChannelStateData& b) {
    a.Swap(&b);
  }
  inline void Swap(GetChannelStatesResponse_ChannelStateData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChannelStatesResponse_ChannelStateData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetChannelStatesResponse_ChannelStateData* New() const final {
    return new GetChannelStatesResponse_ChannelStateData();
  }

  GetChannelStatesResponse_ChannelStateData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetChannelStatesResponse_ChannelStateData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetChannelStatesResponse_ChannelStateData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetChannelStatesResponse_ChannelStateData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetChannelStatesResponse_ChannelStateData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetChannelStatesResponse.ChannelStateData";
  }
  protected:
  explicit GetChannelStatesResponse_ChannelStateData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 6,
    kAcquisitionRawIndexFieldNumber = 4,
    kAnalysisRawIndexFieldNumber = 5,
    kChannelFieldNumber = 1,
    kTriggerTimeFieldNumber = 7,
    kStateIdFieldNumber = 2,
    kStateNameFieldNumber = 3,
  };
  // .minknow_api.device.ReturnedChannelConfiguration config = 6;
  bool has_config() const;
  private:
  bool _internal_has_config() const;
  public:
  void clear_config();
  const ::minknow_api::device::ReturnedChannelConfiguration& config() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::device::ReturnedChannelConfiguration* release_config();
  ::minknow_api::device::ReturnedChannelConfiguration* mutable_config();
  void set_allocated_config(::minknow_api::device::ReturnedChannelConfiguration* config);
  private:
  const ::minknow_api::device::ReturnedChannelConfiguration& _internal_config() const;
  ::minknow_api::device::ReturnedChannelConfiguration* _internal_mutable_config();
  public:
  void unsafe_arena_set_allocated_config(
      ::minknow_api::device::ReturnedChannelConfiguration* config);
  ::minknow_api::device::ReturnedChannelConfiguration* unsafe_arena_release_config();

  // uint64 acquisition_raw_index = 4;
  void clear_acquisition_raw_index();
  ::PROTOBUF_NAMESPACE_ID::uint64 acquisition_raw_index() const;
  void set_acquisition_raw_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_acquisition_raw_index() const;
  void _internal_set_acquisition_raw_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 analysis_raw_index = 5;
  void clear_analysis_raw_index();
  ::PROTOBUF_NAMESPACE_ID::uint64 analysis_raw_index() const;
  void set_analysis_raw_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_analysis_raw_index() const;
  void _internal_set_analysis_raw_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 channel = 1;
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel() const;
  void _internal_set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 trigger_time = 7;
  void clear_trigger_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 trigger_time() const;
  void set_trigger_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_trigger_time() const;
  void _internal_set_trigger_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 state_id = 2;
  bool has_state_id() const;
  private:
  bool _internal_has_state_id() const;
  public:
  void clear_state_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 state_id() const;
  void set_state_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state_id() const;
  void _internal_set_state_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // string state_name = 3;
  bool has_state_name() const;
  private:
  bool _internal_has_state_name() const;
  public:
  void clear_state_name();
  const std::string& state_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_state_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_state_name();
  PROTOBUF_MUST_USE_RESULT std::string* release_state_name();
  void set_allocated_state_name(std::string* state_name);
  private:
  const std::string& _internal_state_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_name(const std::string& value);
  std::string* _internal_mutable_state_name();
  public:

  void clear_state();
  StateCase state_case() const;
  // @@protoc_insertion_point(class_scope:minknow_api.data.GetChannelStatesResponse.ChannelStateData)
 private:
  class _Internal;
  void set_has_state_id();
  void set_has_state_name();

  inline bool has_state() const;
  inline void clear_has_state();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::minknow_api::device::ReturnedChannelConfiguration* config_;
  ::PROTOBUF_NAMESPACE_ID::uint64 acquisition_raw_index_;
  ::PROTOBUF_NAMESPACE_ID::uint64 analysis_raw_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_;
  ::PROTOBUF_NAMESPACE_ID::uint64 trigger_time_;
  union StateUnion {
    constexpr StateUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::uint32 state_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr state_name_;
  } state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetChannelStatesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetChannelStatesResponse) */ {
 public:
  inline GetChannelStatesResponse() : GetChannelStatesResponse(nullptr) {}
  ~GetChannelStatesResponse() override;
  explicit constexpr GetChannelStatesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetChannelStatesResponse(const GetChannelStatesResponse& from);
  GetChannelStatesResponse(GetChannelStatesResponse&& from) noexcept
    : GetChannelStatesResponse() {
    *this = ::std::move(from);
  }

  inline GetChannelStatesResponse& operator=(const GetChannelStatesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChannelStatesResponse& operator=(GetChannelStatesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChannelStatesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChannelStatesResponse* internal_default_instance() {
    return reinterpret_cast<const GetChannelStatesResponse*>(
               &_GetChannelStatesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetChannelStatesResponse& a, GetChannelStatesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetChannelStatesResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChannelStatesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetChannelStatesResponse* New() const final {
    return new GetChannelStatesResponse();
  }

  GetChannelStatesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetChannelStatesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetChannelStatesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetChannelStatesResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetChannelStatesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetChannelStatesResponse";
  }
  protected:
  explicit GetChannelStatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetChannelStatesResponse_ChannelStateData ChannelStateData;

  // accessors -------------------------------------------------------

  enum : int {
    kChannelStatesFieldNumber = 1,
  };
  // repeated .minknow_api.data.GetChannelStatesResponse.ChannelStateData channel_states = 1;
  int channel_states_size() const;
  private:
  int _internal_channel_states_size() const;
  public:
  void clear_channel_states();
  ::minknow_api::data::GetChannelStatesResponse_ChannelStateData* mutable_channel_states(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetChannelStatesResponse_ChannelStateData >*
      mutable_channel_states();
  private:
  const ::minknow_api::data::GetChannelStatesResponse_ChannelStateData& _internal_channel_states(int index) const;
  ::minknow_api::data::GetChannelStatesResponse_ChannelStateData* _internal_add_channel_states();
  public:
  const ::minknow_api::data::GetChannelStatesResponse_ChannelStateData& channel_states(int index) const;
  ::minknow_api::data::GetChannelStatesResponse_ChannelStateData* add_channel_states();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetChannelStatesResponse_ChannelStateData >&
      channel_states() const;

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetChannelStatesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetChannelStatesResponse_ChannelStateData > channel_states_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetDataTypesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:minknow_api.data.GetDataTypesRequest) */ {
 public:
  inline GetDataTypesRequest() : GetDataTypesRequest(nullptr) {}
  explicit constexpr GetDataTypesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetDataTypesRequest(const GetDataTypesRequest& from);
  GetDataTypesRequest(GetDataTypesRequest&& from) noexcept
    : GetDataTypesRequest() {
    *this = ::std::move(from);
  }

  inline GetDataTypesRequest& operator=(const GetDataTypesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDataTypesRequest& operator=(GetDataTypesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDataTypesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDataTypesRequest* internal_default_instance() {
    return reinterpret_cast<const GetDataTypesRequest*>(
               &_GetDataTypesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetDataTypesRequest& a, GetDataTypesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDataTypesRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDataTypesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetDataTypesRequest* New() const final {
    return new GetDataTypesRequest();
  }

  GetDataTypesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetDataTypesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetDataTypesRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetDataTypesRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetDataTypesRequest";
  }
  protected:
  explicit GetDataTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetDataTypesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetDataTypesResponse_DataType final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetDataTypesResponse.DataType) */ {
 public:
  inline GetDataTypesResponse_DataType() : GetDataTypesResponse_DataType(nullptr) {}
  ~GetDataTypesResponse_DataType() override;
  explicit constexpr GetDataTypesResponse_DataType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetDataTypesResponse_DataType(const GetDataTypesResponse_DataType& from);
  GetDataTypesResponse_DataType(GetDataTypesResponse_DataType&& from) noexcept
    : GetDataTypesResponse_DataType() {
    *this = ::std::move(from);
  }

  inline GetDataTypesResponse_DataType& operator=(const GetDataTypesResponse_DataType& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDataTypesResponse_DataType& operator=(GetDataTypesResponse_DataType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDataTypesResponse_DataType& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDataTypesResponse_DataType* internal_default_instance() {
    return reinterpret_cast<const GetDataTypesResponse_DataType*>(
               &_GetDataTypesResponse_DataType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetDataTypesResponse_DataType& a, GetDataTypesResponse_DataType& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDataTypesResponse_DataType* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDataTypesResponse_DataType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetDataTypesResponse_DataType* New() const final {
    return new GetDataTypesResponse_DataType();
  }

  GetDataTypesResponse_DataType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetDataTypesResponse_DataType>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetDataTypesResponse_DataType& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetDataTypesResponse_DataType& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDataTypesResponse_DataType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetDataTypesResponse.DataType";
  }
  protected:
  explicit GetDataTypesResponse_DataType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetDataTypesResponse_DataType_Type Type;
  static constexpr Type SIGNED_INTEGER =
    GetDataTypesResponse_DataType_Type_SIGNED_INTEGER;
  static constexpr Type UNSIGNED_INTEGER =
    GetDataTypesResponse_DataType_Type_UNSIGNED_INTEGER;
  static constexpr Type FLOATING_POINT =
    GetDataTypesResponse_DataType_Type_FLOATING_POINT;
  static inline bool Type_IsValid(int value) {
    return GetDataTypesResponse_DataType_Type_IsValid(value);
  }
  static constexpr Type Type_MIN =
    GetDataTypesResponse_DataType_Type_Type_MIN;
  static constexpr Type Type_MAX =
    GetDataTypesResponse_DataType_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE =
    GetDataTypesResponse_DataType_Type_Type_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Type_descriptor() {
    return GetDataTypesResponse_DataType_Type_descriptor();
  }
  template<typename T>
  static inline const std::string& Type_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Type>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Type_Name.");
    return GetDataTypesResponse_DataType_Type_Name(enum_t_value);
  }
  static inline bool Type_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Type* value) {
    return GetDataTypesResponse_DataType_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kBigEndianFieldNumber = 2,
    kSizeFieldNumber = 3,
  };
  // .minknow_api.data.GetDataTypesResponse.DataType.Type type = 1;
  void clear_type();
  ::minknow_api::data::GetDataTypesResponse_DataType_Type type() const;
  void set_type(::minknow_api::data::GetDataTypesResponse_DataType_Type value);
  private:
  ::minknow_api::data::GetDataTypesResponse_DataType_Type _internal_type() const;
  void _internal_set_type(::minknow_api::data::GetDataTypesResponse_DataType_Type value);
  public:

  // bool big_endian = 2;
  void clear_big_endian();
  bool big_endian() const;
  void set_big_endian(bool value);
  private:
  bool _internal_big_endian() const;
  void _internal_set_big_endian(bool value);
  public:

  // uint32 size = 3;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetDataTypesResponse.DataType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  bool big_endian_;
  ::PROTOBUF_NAMESPACE_ID::uint32 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetDataTypesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetDataTypesResponse) */ {
 public:
  inline GetDataTypesResponse() : GetDataTypesResponse(nullptr) {}
  ~GetDataTypesResponse() override;
  explicit constexpr GetDataTypesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetDataTypesResponse(const GetDataTypesResponse& from);
  GetDataTypesResponse(GetDataTypesResponse&& from) noexcept
    : GetDataTypesResponse() {
    *this = ::std::move(from);
  }

  inline GetDataTypesResponse& operator=(const GetDataTypesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDataTypesResponse& operator=(GetDataTypesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDataTypesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDataTypesResponse* internal_default_instance() {
    return reinterpret_cast<const GetDataTypesResponse*>(
               &_GetDataTypesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetDataTypesResponse& a, GetDataTypesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDataTypesResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDataTypesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetDataTypesResponse* New() const final {
    return new GetDataTypesResponse();
  }

  GetDataTypesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetDataTypesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetDataTypesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetDataTypesResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDataTypesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetDataTypesResponse";
  }
  protected:
  explicit GetDataTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetDataTypesResponse_DataType DataType;

  // accessors -------------------------------------------------------

  enum : int {
    kUncalibratedSignalFieldNumber = 1,
    kCalibratedSignalFieldNumber = 2,
    kBiasVoltagesFieldNumber = 3,
  };
  // .minknow_api.data.GetDataTypesResponse.DataType uncalibrated_signal = 1;
  bool has_uncalibrated_signal() const;
  private:
  bool _internal_has_uncalibrated_signal() const;
  public:
  void clear_uncalibrated_signal();
  const ::minknow_api::data::GetDataTypesResponse_DataType& uncalibrated_signal() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetDataTypesResponse_DataType* release_uncalibrated_signal();
  ::minknow_api::data::GetDataTypesResponse_DataType* mutable_uncalibrated_signal();
  void set_allocated_uncalibrated_signal(::minknow_api::data::GetDataTypesResponse_DataType* uncalibrated_signal);
  private:
  const ::minknow_api::data::GetDataTypesResponse_DataType& _internal_uncalibrated_signal() const;
  ::minknow_api::data::GetDataTypesResponse_DataType* _internal_mutable_uncalibrated_signal();
  public:
  void unsafe_arena_set_allocated_uncalibrated_signal(
      ::minknow_api::data::GetDataTypesResponse_DataType* uncalibrated_signal);
  ::minknow_api::data::GetDataTypesResponse_DataType* unsafe_arena_release_uncalibrated_signal();

  // .minknow_api.data.GetDataTypesResponse.DataType calibrated_signal = 2;
  bool has_calibrated_signal() const;
  private:
  bool _internal_has_calibrated_signal() const;
  public:
  void clear_calibrated_signal();
  const ::minknow_api::data::GetDataTypesResponse_DataType& calibrated_signal() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetDataTypesResponse_DataType* release_calibrated_signal();
  ::minknow_api::data::GetDataTypesResponse_DataType* mutable_calibrated_signal();
  void set_allocated_calibrated_signal(::minknow_api::data::GetDataTypesResponse_DataType* calibrated_signal);
  private:
  const ::minknow_api::data::GetDataTypesResponse_DataType& _internal_calibrated_signal() const;
  ::minknow_api::data::GetDataTypesResponse_DataType* _internal_mutable_calibrated_signal();
  public:
  void unsafe_arena_set_allocated_calibrated_signal(
      ::minknow_api::data::GetDataTypesResponse_DataType* calibrated_signal);
  ::minknow_api::data::GetDataTypesResponse_DataType* unsafe_arena_release_calibrated_signal();

  // .minknow_api.data.GetDataTypesResponse.DataType bias_voltages = 3;
  bool has_bias_voltages() const;
  private:
  bool _internal_has_bias_voltages() const;
  public:
  void clear_bias_voltages();
  const ::minknow_api::data::GetDataTypesResponse_DataType& bias_voltages() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetDataTypesResponse_DataType* release_bias_voltages();
  ::minknow_api::data::GetDataTypesResponse_DataType* mutable_bias_voltages();
  void set_allocated_bias_voltages(::minknow_api::data::GetDataTypesResponse_DataType* bias_voltages);
  private:
  const ::minknow_api::data::GetDataTypesResponse_DataType& _internal_bias_voltages() const;
  ::minknow_api::data::GetDataTypesResponse_DataType* _internal_mutable_bias_voltages();
  public:
  void unsafe_arena_set_allocated_bias_voltages(
      ::minknow_api::data::GetDataTypesResponse_DataType* bias_voltages);
  ::minknow_api::data::GetDataTypesResponse_DataType* unsafe_arena_release_bias_voltages();

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetDataTypesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::minknow_api::data::GetDataTypesResponse_DataType* uncalibrated_signal_;
  ::minknow_api::data::GetDataTypesResponse_DataType* calibrated_signal_;
  ::minknow_api::data::GetDataTypesResponse_DataType* bias_voltages_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetSignalBytesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetSignalBytesRequest) */ {
 public:
  inline GetSignalBytesRequest() : GetSignalBytesRequest(nullptr) {}
  ~GetSignalBytesRequest() override;
  explicit constexpr GetSignalBytesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetSignalBytesRequest(const GetSignalBytesRequest& from);
  GetSignalBytesRequest(GetSignalBytesRequest&& from) noexcept
    : GetSignalBytesRequest() {
    *this = ::std::move(from);
  }

  inline GetSignalBytesRequest& operator=(const GetSignalBytesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSignalBytesRequest& operator=(GetSignalBytesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSignalBytesRequest& default_instance() {
    return *internal_default_instance();
  }
  enum LengthCase {
    kSeconds = 1,
    kSamples = 2,
    LENGTH_NOT_SET = 0,
  };

  static inline const GetSignalBytesRequest* internal_default_instance() {
    return reinterpret_cast<const GetSignalBytesRequest*>(
               &_GetSignalBytesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetSignalBytesRequest& a, GetSignalBytesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSignalBytesRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSignalBytesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSignalBytesRequest* New() const final {
    return new GetSignalBytesRequest();
  }

  GetSignalBytesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSignalBytesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetSignalBytesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetSignalBytesRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSignalBytesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetSignalBytesRequest";
  }
  protected:
  explicit GetSignalBytesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstChannelFieldNumber = 3,
    kLastChannelFieldNumber = 4,
    kIncludeChannelConfigsFieldNumber = 5,
    kIncludeBiasVoltagesFieldNumber = 6,
    kCalibratedDataFieldNumber = 7,
    kReturnWhenListeningFieldNumber = 8,
    kSecondsFieldNumber = 1,
    kSamplesFieldNumber = 2,
  };
  // uint32 first_channel = 3 [(.minknow_api.rpc_required) = true];
  void clear_first_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_channel() const;
  void set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_channel() const;
  void _internal_set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_channel = 4 [(.minknow_api.rpc_required) = true];
  void clear_last_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_channel() const;
  void set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_channel() const;
  void _internal_set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool include_channel_configs = 5;
  void clear_include_channel_configs();
  bool include_channel_configs() const;
  void set_include_channel_configs(bool value);
  private:
  bool _internal_include_channel_configs() const;
  void _internal_set_include_channel_configs(bool value);
  public:

  // bool include_bias_voltages = 6;
  void clear_include_bias_voltages();
  bool include_bias_voltages() const;
  void set_include_bias_voltages(bool value);
  private:
  bool _internal_include_bias_voltages() const;
  void _internal_set_include_bias_voltages(bool value);
  public:

  // bool calibrated_data = 7;
  void clear_calibrated_data();
  bool calibrated_data() const;
  void set_calibrated_data(bool value);
  private:
  bool _internal_calibrated_data() const;
  void _internal_set_calibrated_data(bool value);
  public:

  // bool return_when_listening = 8;
  void clear_return_when_listening();
  bool return_when_listening() const;
  void set_return_when_listening(bool value);
  private:
  bool _internal_return_when_listening() const;
  void _internal_set_return_when_listening(bool value);
  public:

  // float seconds = 1;
  bool has_seconds() const;
  private:
  bool _internal_has_seconds() const;
  public:
  void clear_seconds();
  float seconds() const;
  void set_seconds(float value);
  private:
  float _internal_seconds() const;
  void _internal_set_seconds(float value);
  public:

  // uint32 samples = 2;
  bool has_samples() const;
  private:
  bool _internal_has_samples() const;
  public:
  void clear_samples();
  ::PROTOBUF_NAMESPACE_ID::uint32 samples() const;
  void set_samples(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_samples() const;
  void _internal_set_samples(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  void clear_length();
  LengthCase length_case() const;
  // @@protoc_insertion_point(class_scope:minknow_api.data.GetSignalBytesRequest)
 private:
  class _Internal;
  void set_has_seconds();
  void set_has_samples();

  inline bool has_length() const;
  inline void clear_has_length();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_channel_;
  bool include_channel_configs_;
  bool include_bias_voltages_;
  bool calibrated_data_;
  bool return_when_listening_;
  union LengthUnion {
    constexpr LengthUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    float seconds_;
    ::PROTOBUF_NAMESPACE_ID::uint32 samples_;
  } length_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetSignalBytesResponse_ChannelConfigChange final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetSignalBytesResponse.ChannelConfigChange) */ {
 public:
  inline GetSignalBytesResponse_ChannelConfigChange() : GetSignalBytesResponse_ChannelConfigChange(nullptr) {}
  ~GetSignalBytesResponse_ChannelConfigChange() override;
  explicit constexpr GetSignalBytesResponse_ChannelConfigChange(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetSignalBytesResponse_ChannelConfigChange(const GetSignalBytesResponse_ChannelConfigChange& from);
  GetSignalBytesResponse_ChannelConfigChange(GetSignalBytesResponse_ChannelConfigChange&& from) noexcept
    : GetSignalBytesResponse_ChannelConfigChange() {
    *this = ::std::move(from);
  }

  inline GetSignalBytesResponse_ChannelConfigChange& operator=(const GetSignalBytesResponse_ChannelConfigChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSignalBytesResponse_ChannelConfigChange& operator=(GetSignalBytesResponse_ChannelConfigChange&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSignalBytesResponse_ChannelConfigChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSignalBytesResponse_ChannelConfigChange* internal_default_instance() {
    return reinterpret_cast<const GetSignalBytesResponse_ChannelConfigChange*>(
               &_GetSignalBytesResponse_ChannelConfigChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetSignalBytesResponse_ChannelConfigChange& a, GetSignalBytesResponse_ChannelConfigChange& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSignalBytesResponse_ChannelConfigChange* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSignalBytesResponse_ChannelConfigChange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSignalBytesResponse_ChannelConfigChange* New() const final {
    return new GetSignalBytesResponse_ChannelConfigChange();
  }

  GetSignalBytesResponse_ChannelConfigChange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSignalBytesResponse_ChannelConfigChange>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetSignalBytesResponse_ChannelConfigChange& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetSignalBytesResponse_ChannelConfigChange& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSignalBytesResponse_ChannelConfigChange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetSignalBytesResponse.ChannelConfigChange";
  }
  protected:
  explicit GetSignalBytesResponse_ChannelConfigChange(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigFieldNumber = 1,
    kOffsetFieldNumber = 2,
  };
  // .minknow_api.device.ReturnedChannelConfiguration config = 1;
  bool has_config() const;
  private:
  bool _internal_has_config() const;
  public:
  void clear_config();
  const ::minknow_api::device::ReturnedChannelConfiguration& config() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::device::ReturnedChannelConfiguration* release_config();
  ::minknow_api::device::ReturnedChannelConfiguration* mutable_config();
  void set_allocated_config(::minknow_api::device::ReturnedChannelConfiguration* config);
  private:
  const ::minknow_api::device::ReturnedChannelConfiguration& _internal_config() const;
  ::minknow_api::device::ReturnedChannelConfiguration* _internal_mutable_config();
  public:
  void unsafe_arena_set_allocated_config(
      ::minknow_api::device::ReturnedChannelConfiguration* config);
  ::minknow_api::device::ReturnedChannelConfiguration* unsafe_arena_release_config();

  // uint64 offset = 2;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint64 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetSignalBytesResponse.ChannelConfigChange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::minknow_api::device::ReturnedChannelConfiguration* config_;
  ::PROTOBUF_NAMESPACE_ID::uint64 offset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetSignalBytesResponse_ChannelData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetSignalBytesResponse.ChannelData) */ {
 public:
  inline GetSignalBytesResponse_ChannelData() : GetSignalBytesResponse_ChannelData(nullptr) {}
  ~GetSignalBytesResponse_ChannelData() override;
  explicit constexpr GetSignalBytesResponse_ChannelData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetSignalBytesResponse_ChannelData(const GetSignalBytesResponse_ChannelData& from);
  GetSignalBytesResponse_ChannelData(GetSignalBytesResponse_ChannelData&& from) noexcept
    : GetSignalBytesResponse_ChannelData() {
    *this = ::std::move(from);
  }

  inline GetSignalBytesResponse_ChannelData& operator=(const GetSignalBytesResponse_ChannelData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSignalBytesResponse_ChannelData& operator=(GetSignalBytesResponse_ChannelData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSignalBytesResponse_ChannelData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSignalBytesResponse_ChannelData* internal_default_instance() {
    return reinterpret_cast<const GetSignalBytesResponse_ChannelData*>(
               &_GetSignalBytesResponse_ChannelData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetSignalBytesResponse_ChannelData& a, GetSignalBytesResponse_ChannelData& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSignalBytesResponse_ChannelData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSignalBytesResponse_ChannelData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSignalBytesResponse_ChannelData* New() const final {
    return new GetSignalBytesResponse_ChannelData();
  }

  GetSignalBytesResponse_ChannelData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSignalBytesResponse_ChannelData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetSignalBytesResponse_ChannelData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetSignalBytesResponse_ChannelData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSignalBytesResponse_ChannelData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetSignalBytesResponse.ChannelData";
  }
  protected:
  explicit GetSignalBytesResponse_ChannelData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigChangesFieldNumber = 3,
    kDataFieldNumber = 1,
  };
  // repeated .minknow_api.data.GetSignalBytesResponse.ChannelConfigChange config_changes = 3;
  int config_changes_size() const;
  private:
  int _internal_config_changes_size() const;
  public:
  void clear_config_changes();
  ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange* mutable_config_changes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange >*
      mutable_config_changes();
  private:
  const ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange& _internal_config_changes(int index) const;
  ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange* _internal_add_config_changes();
  public:
  const ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange& config_changes(int index) const;
  ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange* add_config_changes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange >&
      config_changes() const;

  // bytes data = 1;
  void clear_data();
  const std::string& data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_data();
  PROTOBUF_MUST_USE_RESULT std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetSignalBytesResponse.ChannelData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange > config_changes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetSignalBytesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetSignalBytesResponse) */ {
 public:
  inline GetSignalBytesResponse() : GetSignalBytesResponse(nullptr) {}
  ~GetSignalBytesResponse() override;
  explicit constexpr GetSignalBytesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetSignalBytesResponse(const GetSignalBytesResponse& from);
  GetSignalBytesResponse(GetSignalBytesResponse&& from) noexcept
    : GetSignalBytesResponse() {
    *this = ::std::move(from);
  }

  inline GetSignalBytesResponse& operator=(const GetSignalBytesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSignalBytesResponse& operator=(GetSignalBytesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSignalBytesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSignalBytesResponse* internal_default_instance() {
    return reinterpret_cast<const GetSignalBytesResponse*>(
               &_GetSignalBytesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetSignalBytesResponse& a, GetSignalBytesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSignalBytesResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSignalBytesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSignalBytesResponse* New() const final {
    return new GetSignalBytesResponse();
  }

  GetSignalBytesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSignalBytesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetSignalBytesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetSignalBytesResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSignalBytesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetSignalBytesResponse";
  }
  protected:
  explicit GetSignalBytesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetSignalBytesResponse_ChannelConfigChange ChannelConfigChange;
  typedef GetSignalBytesResponse_ChannelData ChannelData;

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 4,
    kBiasVoltagesFieldNumber = 5,
    kSamplesSinceStartFieldNumber = 1,
    kSecondsSinceStartFieldNumber = 2,
    kSkippedChannelsFieldNumber = 3,
  };
  // repeated .minknow_api.data.GetSignalBytesResponse.ChannelData channels = 4;
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  ::minknow_api::data::GetSignalBytesResponse_ChannelData* mutable_channels(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelData >*
      mutable_channels();
  private:
  const ::minknow_api::data::GetSignalBytesResponse_ChannelData& _internal_channels(int index) const;
  ::minknow_api::data::GetSignalBytesResponse_ChannelData* _internal_add_channels();
  public:
  const ::minknow_api::data::GetSignalBytesResponse_ChannelData& channels(int index) const;
  ::minknow_api::data::GetSignalBytesResponse_ChannelData* add_channels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelData >&
      channels() const;

  // bytes bias_voltages = 5;
  void clear_bias_voltages();
  const std::string& bias_voltages() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_bias_voltages(ArgT0&& arg0, ArgT... args);
  std::string* mutable_bias_voltages();
  PROTOBUF_MUST_USE_RESULT std::string* release_bias_voltages();
  void set_allocated_bias_voltages(std::string* bias_voltages);
  private:
  const std::string& _internal_bias_voltages() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bias_voltages(const std::string& value);
  std::string* _internal_mutable_bias_voltages();
  public:

  // uint64 samples_since_start = 1;
  void clear_samples_since_start();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start() const;
  void set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples_since_start() const;
  void _internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double seconds_since_start = 2;
  void clear_seconds_since_start();
  double seconds_since_start() const;
  void set_seconds_since_start(double value);
  private:
  double _internal_seconds_since_start() const;
  void _internal_set_seconds_since_start(double value);
  public:

  // uint32 skipped_channels = 3;
  void clear_skipped_channels();
  ::PROTOBUF_NAMESPACE_ID::uint32 skipped_channels() const;
  void set_skipped_channels(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skipped_channels() const;
  void _internal_set_skipped_channels(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetSignalBytesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelData > channels_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bias_voltages_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start_;
  double seconds_since_start_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skipped_channels_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetSignalMinMaxRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetSignalMinMaxRequest) */ {
 public:
  inline GetSignalMinMaxRequest() : GetSignalMinMaxRequest(nullptr) {}
  ~GetSignalMinMaxRequest() override;
  explicit constexpr GetSignalMinMaxRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetSignalMinMaxRequest(const GetSignalMinMaxRequest& from);
  GetSignalMinMaxRequest(GetSignalMinMaxRequest&& from) noexcept
    : GetSignalMinMaxRequest() {
    *this = ::std::move(from);
  }

  inline GetSignalMinMaxRequest& operator=(const GetSignalMinMaxRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSignalMinMaxRequest& operator=(GetSignalMinMaxRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSignalMinMaxRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSignalMinMaxRequest* internal_default_instance() {
    return reinterpret_cast<const GetSignalMinMaxRequest*>(
               &_GetSignalMinMaxRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GetSignalMinMaxRequest& a, GetSignalMinMaxRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSignalMinMaxRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSignalMinMaxRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSignalMinMaxRequest* New() const final {
    return new GetSignalMinMaxRequest();
  }

  GetSignalMinMaxRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSignalMinMaxRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetSignalMinMaxRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetSignalMinMaxRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSignalMinMaxRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetSignalMinMaxRequest";
  }
  protected:
  explicit GetSignalMinMaxRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstChannelFieldNumber = 3,
    kLastChannelFieldNumber = 4,
    kWindowSizeFieldNumber = 5,
    kCalibratedDataFieldNumber = 7,
  };
  // uint32 first_channel = 3 [(.minknow_api.rpc_required) = true];
  void clear_first_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_channel() const;
  void set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_channel() const;
  void _internal_set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_channel = 4 [(.minknow_api.rpc_required) = true];
  void clear_last_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_channel() const;
  void set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_channel() const;
  void _internal_set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 window_size = 5 [(.minknow_api.rpc_required) = true];
  void clear_window_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 window_size() const;
  void set_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_window_size() const;
  void _internal_set_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool calibrated_data = 7;
  void clear_calibrated_data();
  bool calibrated_data() const;
  void set_calibrated_data(bool value);
  private:
  bool _internal_calibrated_data() const;
  void _internal_set_calibrated_data(bool value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetSignalMinMaxRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 window_size_;
  bool calibrated_data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetSignalMinMaxResponse_ChannelData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetSignalMinMaxResponse.ChannelData) */ {
 public:
  inline GetSignalMinMaxResponse_ChannelData() : GetSignalMinMaxResponse_ChannelData(nullptr) {}
  ~GetSignalMinMaxResponse_ChannelData() override;
  explicit constexpr GetSignalMinMaxResponse_ChannelData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetSignalMinMaxResponse_ChannelData(const GetSignalMinMaxResponse_ChannelData& from);
  GetSignalMinMaxResponse_ChannelData(GetSignalMinMaxResponse_ChannelData&& from) noexcept
    : GetSignalMinMaxResponse_ChannelData() {
    *this = ::std::move(from);
  }

  inline GetSignalMinMaxResponse_ChannelData& operator=(const GetSignalMinMaxResponse_ChannelData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSignalMinMaxResponse_ChannelData& operator=(GetSignalMinMaxResponse_ChannelData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSignalMinMaxResponse_ChannelData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSignalMinMaxResponse_ChannelData* internal_default_instance() {
    return reinterpret_cast<const GetSignalMinMaxResponse_ChannelData*>(
               &_GetSignalMinMaxResponse_ChannelData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GetSignalMinMaxResponse_ChannelData& a, GetSignalMinMaxResponse_ChannelData& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSignalMinMaxResponse_ChannelData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSignalMinMaxResponse_ChannelData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSignalMinMaxResponse_ChannelData* New() const final {
    return new GetSignalMinMaxResponse_ChannelData();
  }

  GetSignalMinMaxResponse_ChannelData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSignalMinMaxResponse_ChannelData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetSignalMinMaxResponse_ChannelData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetSignalMinMaxResponse_ChannelData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSignalMinMaxResponse_ChannelData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetSignalMinMaxResponse.ChannelData";
  }
  protected:
  explicit GetSignalMinMaxResponse_ChannelData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCalibratedMinimaFieldNumber = 1,
    kRawMinimaFieldNumber = 2,
    kCalibratedMaximaFieldNumber = 3,
    kRawMaximaFieldNumber = 4,
  };
  // repeated float calibrated_minima = 1;
  int calibrated_minima_size() const;
  private:
  int _internal_calibrated_minima_size() const;
  public:
  void clear_calibrated_minima();
  private:
  float _internal_calibrated_minima(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_calibrated_minima() const;
  void _internal_add_calibrated_minima(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_calibrated_minima();
  public:
  float calibrated_minima(int index) const;
  void set_calibrated_minima(int index, float value);
  void add_calibrated_minima(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      calibrated_minima() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_calibrated_minima();

  // repeated int32 raw_minima = 2;
  int raw_minima_size() const;
  private:
  int _internal_raw_minima_size() const;
  public:
  void clear_raw_minima();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_raw_minima(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_raw_minima() const;
  void _internal_add_raw_minima(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_raw_minima();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 raw_minima(int index) const;
  void set_raw_minima(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_raw_minima(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      raw_minima() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_raw_minima();

  // repeated float calibrated_maxima = 3;
  int calibrated_maxima_size() const;
  private:
  int _internal_calibrated_maxima_size() const;
  public:
  void clear_calibrated_maxima();
  private:
  float _internal_calibrated_maxima(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_calibrated_maxima() const;
  void _internal_add_calibrated_maxima(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_calibrated_maxima();
  public:
  float calibrated_maxima(int index) const;
  void set_calibrated_maxima(int index, float value);
  void add_calibrated_maxima(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      calibrated_maxima() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_calibrated_maxima();

  // repeated int32 raw_maxima = 4;
  int raw_maxima_size() const;
  private:
  int _internal_raw_maxima_size() const;
  public:
  void clear_raw_maxima();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_raw_maxima(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_raw_maxima() const;
  void _internal_add_raw_maxima(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_raw_maxima();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 raw_maxima(int index) const;
  void set_raw_maxima(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_raw_maxima(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      raw_maxima() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_raw_maxima();

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetSignalMinMaxResponse.ChannelData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > calibrated_minima_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > raw_minima_;
  mutable std::atomic<int> _raw_minima_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > calibrated_maxima_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > raw_maxima_;
  mutable std::atomic<int> _raw_maxima_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetSignalMinMaxResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetSignalMinMaxResponse) */ {
 public:
  inline GetSignalMinMaxResponse() : GetSignalMinMaxResponse(nullptr) {}
  ~GetSignalMinMaxResponse() override;
  explicit constexpr GetSignalMinMaxResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetSignalMinMaxResponse(const GetSignalMinMaxResponse& from);
  GetSignalMinMaxResponse(GetSignalMinMaxResponse&& from) noexcept
    : GetSignalMinMaxResponse() {
    *this = ::std::move(from);
  }

  inline GetSignalMinMaxResponse& operator=(const GetSignalMinMaxResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSignalMinMaxResponse& operator=(GetSignalMinMaxResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSignalMinMaxResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSignalMinMaxResponse* internal_default_instance() {
    return reinterpret_cast<const GetSignalMinMaxResponse*>(
               &_GetSignalMinMaxResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GetSignalMinMaxResponse& a, GetSignalMinMaxResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSignalMinMaxResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSignalMinMaxResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSignalMinMaxResponse* New() const final {
    return new GetSignalMinMaxResponse();
  }

  GetSignalMinMaxResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSignalMinMaxResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetSignalMinMaxResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetSignalMinMaxResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSignalMinMaxResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetSignalMinMaxResponse";
  }
  protected:
  explicit GetSignalMinMaxResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetSignalMinMaxResponse_ChannelData ChannelData;

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 4,
    kSamplesSinceStartFieldNumber = 1,
    kSecondsSinceStartFieldNumber = 2,
    kSkippedChannelsFieldNumber = 3,
  };
  // repeated .minknow_api.data.GetSignalMinMaxResponse.ChannelData channels = 4;
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  ::minknow_api::data::GetSignalMinMaxResponse_ChannelData* mutable_channels(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalMinMaxResponse_ChannelData >*
      mutable_channels();
  private:
  const ::minknow_api::data::GetSignalMinMaxResponse_ChannelData& _internal_channels(int index) const;
  ::minknow_api::data::GetSignalMinMaxResponse_ChannelData* _internal_add_channels();
  public:
  const ::minknow_api::data::GetSignalMinMaxResponse_ChannelData& channels(int index) const;
  ::minknow_api::data::GetSignalMinMaxResponse_ChannelData* add_channels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalMinMaxResponse_ChannelData >&
      channels() const;

  // uint64 samples_since_start = 1;
  void clear_samples_since_start();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start() const;
  void set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples_since_start() const;
  void _internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double seconds_since_start = 2;
  void clear_seconds_since_start();
  double seconds_since_start() const;
  void set_seconds_since_start(double value);
  private:
  double _internal_seconds_since_start() const;
  void _internal_set_seconds_since_start(double value);
  public:

  // uint32 skipped_channels = 3;
  void clear_skipped_channels();
  ::PROTOBUF_NAMESPACE_ID::uint32 skipped_channels() const;
  void set_skipped_channels(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skipped_channels() const;
  void _internal_set_skipped_channels(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetSignalMinMaxResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalMinMaxResponse_ChannelData > channels_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start_;
  double seconds_since_start_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skipped_channels_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetLiveReadsRequest_UnblockAction final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetLiveReadsRequest.UnblockAction) */ {
 public:
  inline GetLiveReadsRequest_UnblockAction() : GetLiveReadsRequest_UnblockAction(nullptr) {}
  ~GetLiveReadsRequest_UnblockAction() override;
  explicit constexpr GetLiveReadsRequest_UnblockAction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLiveReadsRequest_UnblockAction(const GetLiveReadsRequest_UnblockAction& from);
  GetLiveReadsRequest_UnblockAction(GetLiveReadsRequest_UnblockAction&& from) noexcept
    : GetLiveReadsRequest_UnblockAction() {
    *this = ::std::move(from);
  }

  inline GetLiveReadsRequest_UnblockAction& operator=(const GetLiveReadsRequest_UnblockAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveReadsRequest_UnblockAction& operator=(GetLiveReadsRequest_UnblockAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveReadsRequest_UnblockAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLiveReadsRequest_UnblockAction* internal_default_instance() {
    return reinterpret_cast<const GetLiveReadsRequest_UnblockAction*>(
               &_GetLiveReadsRequest_UnblockAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GetLiveReadsRequest_UnblockAction& a, GetLiveReadsRequest_UnblockAction& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLiveReadsRequest_UnblockAction* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveReadsRequest_UnblockAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLiveReadsRequest_UnblockAction* New() const final {
    return new GetLiveReadsRequest_UnblockAction();
  }

  GetLiveReadsRequest_UnblockAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLiveReadsRequest_UnblockAction>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLiveReadsRequest_UnblockAction& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetLiveReadsRequest_UnblockAction& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLiveReadsRequest_UnblockAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetLiveReadsRequest.UnblockAction";
  }
  protected:
  explicit GetLiveReadsRequest_UnblockAction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDurationFieldNumber = 1,
  };
  // double duration = 1;
  void clear_duration();
  double duration() const;
  void set_duration(double value);
  private:
  double _internal_duration() const;
  void _internal_set_duration(double value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetLiveReadsRequest.UnblockAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetLiveReadsRequest_StopFurtherData final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:minknow_api.data.GetLiveReadsRequest.StopFurtherData) */ {
 public:
  inline GetLiveReadsRequest_StopFurtherData() : GetLiveReadsRequest_StopFurtherData(nullptr) {}
  explicit constexpr GetLiveReadsRequest_StopFurtherData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLiveReadsRequest_StopFurtherData(const GetLiveReadsRequest_StopFurtherData& from);
  GetLiveReadsRequest_StopFurtherData(GetLiveReadsRequest_StopFurtherData&& from) noexcept
    : GetLiveReadsRequest_StopFurtherData() {
    *this = ::std::move(from);
  }

  inline GetLiveReadsRequest_StopFurtherData& operator=(const GetLiveReadsRequest_StopFurtherData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveReadsRequest_StopFurtherData& operator=(GetLiveReadsRequest_StopFurtherData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveReadsRequest_StopFurtherData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLiveReadsRequest_StopFurtherData* internal_default_instance() {
    return reinterpret_cast<const GetLiveReadsRequest_StopFurtherData*>(
               &_GetLiveReadsRequest_StopFurtherData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(GetLiveReadsRequest_StopFurtherData& a, GetLiveReadsRequest_StopFurtherData& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLiveReadsRequest_StopFurtherData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveReadsRequest_StopFurtherData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLiveReadsRequest_StopFurtherData* New() const final {
    return new GetLiveReadsRequest_StopFurtherData();
  }

  GetLiveReadsRequest_StopFurtherData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLiveReadsRequest_StopFurtherData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetLiveReadsRequest_StopFurtherData& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetLiveReadsRequest_StopFurtherData& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetLiveReadsRequest.StopFurtherData";
  }
  protected:
  explicit GetLiveReadsRequest_StopFurtherData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetLiveReadsRequest.StopFurtherData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetLiveReadsRequest_Action final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetLiveReadsRequest.Action) */ {
 public:
  inline GetLiveReadsRequest_Action() : GetLiveReadsRequest_Action(nullptr) {}
  ~GetLiveReadsRequest_Action() override;
  explicit constexpr GetLiveReadsRequest_Action(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLiveReadsRequest_Action(const GetLiveReadsRequest_Action& from);
  GetLiveReadsRequest_Action(GetLiveReadsRequest_Action&& from) noexcept
    : GetLiveReadsRequest_Action() {
    *this = ::std::move(from);
  }

  inline GetLiveReadsRequest_Action& operator=(const GetLiveReadsRequest_Action& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveReadsRequest_Action& operator=(GetLiveReadsRequest_Action&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveReadsRequest_Action& default_instance() {
    return *internal_default_instance();
  }
  enum ReadCase {
    kId = 3,
    kNumber = 4,
    READ_NOT_SET = 0,
  };

  enum ActionCase {
    kUnblock = 5,
    kStopFurtherData = 6,
    ACTION_NOT_SET = 0,
  };

  static inline const GetLiveReadsRequest_Action* internal_default_instance() {
    return reinterpret_cast<const GetLiveReadsRequest_Action*>(
               &_GetLiveReadsRequest_Action_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(GetLiveReadsRequest_Action& a, GetLiveReadsRequest_Action& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLiveReadsRequest_Action* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveReadsRequest_Action* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLiveReadsRequest_Action* New() const final {
    return new GetLiveReadsRequest_Action();
  }

  GetLiveReadsRequest_Action* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLiveReadsRequest_Action>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLiveReadsRequest_Action& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetLiveReadsRequest_Action& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLiveReadsRequest_Action* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetLiveReadsRequest.Action";
  }
  protected:
  explicit GetLiveReadsRequest_Action(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionIdFieldNumber = 1,
    kChannelFieldNumber = 2,
    kIdFieldNumber = 3,
    kNumberFieldNumber = 4,
    kUnblockFieldNumber = 5,
    kStopFurtherDataFieldNumber = 6,
  };
  // string action_id = 1;
  void clear_action_id();
  const std::string& action_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_action_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_action_id();
  PROTOBUF_MUST_USE_RESULT std::string* release_action_id();
  void set_allocated_action_id(std::string* action_id);
  private:
  const std::string& _internal_action_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_action_id(const std::string& value);
  std::string* _internal_mutable_action_id();
  public:

  // uint32 channel = 2;
  void clear_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel() const;
  void set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel() const;
  void _internal_set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // string id = 3;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  const std::string& id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_id();
  PROTOBUF_MUST_USE_RESULT std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // uint32 number = 4;
  bool has_number() const;
  private:
  bool _internal_has_number() const;
  public:
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .minknow_api.data.GetLiveReadsRequest.UnblockAction unblock = 5;
  bool has_unblock() const;
  private:
  bool _internal_has_unblock() const;
  public:
  void clear_unblock();
  const ::minknow_api::data::GetLiveReadsRequest_UnblockAction& unblock() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetLiveReadsRequest_UnblockAction* release_unblock();
  ::minknow_api::data::GetLiveReadsRequest_UnblockAction* mutable_unblock();
  void set_allocated_unblock(::minknow_api::data::GetLiveReadsRequest_UnblockAction* unblock);
  private:
  const ::minknow_api::data::GetLiveReadsRequest_UnblockAction& _internal_unblock() const;
  ::minknow_api::data::GetLiveReadsRequest_UnblockAction* _internal_mutable_unblock();
  public:
  void unsafe_arena_set_allocated_unblock(
      ::minknow_api::data::GetLiveReadsRequest_UnblockAction* unblock);
  ::minknow_api::data::GetLiveReadsRequest_UnblockAction* unsafe_arena_release_unblock();

  // .minknow_api.data.GetLiveReadsRequest.StopFurtherData stop_further_data = 6;
  bool has_stop_further_data() const;
  private:
  bool _internal_has_stop_further_data() const;
  public:
  void clear_stop_further_data();
  const ::minknow_api::data::GetLiveReadsRequest_StopFurtherData& stop_further_data() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* release_stop_further_data();
  ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* mutable_stop_further_data();
  void set_allocated_stop_further_data(::minknow_api::data::GetLiveReadsRequest_StopFurtherData* stop_further_data);
  private:
  const ::minknow_api::data::GetLiveReadsRequest_StopFurtherData& _internal_stop_further_data() const;
  ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* _internal_mutable_stop_further_data();
  public:
  void unsafe_arena_set_allocated_stop_further_data(
      ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* stop_further_data);
  ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* unsafe_arena_release_stop_further_data();

  void clear_read();
  ReadCase read_case() const;
  void clear_action();
  ActionCase action_case() const;
  // @@protoc_insertion_point(class_scope:minknow_api.data.GetLiveReadsRequest.Action)
 private:
  class _Internal;
  void set_has_id();
  void set_has_number();
  void set_has_unblock();
  void set_has_stop_further_data();

  inline bool has_read() const;
  inline void clear_has_read();

  inline bool has_action() const;
  inline void clear_has_action();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_;
  union ReadUnion {
    constexpr ReadUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
    ::PROTOBUF_NAMESPACE_ID::uint32 number_;
  } read_;
  union ActionUnion {
    constexpr ActionUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::minknow_api::data::GetLiveReadsRequest_UnblockAction* unblock_;
    ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* stop_further_data_;
  } action_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[2];

  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetLiveReadsRequest_StreamSetup final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetLiveReadsRequest.StreamSetup) */ {
 public:
  inline GetLiveReadsRequest_StreamSetup() : GetLiveReadsRequest_StreamSetup(nullptr) {}
  ~GetLiveReadsRequest_StreamSetup() override;
  explicit constexpr GetLiveReadsRequest_StreamSetup(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLiveReadsRequest_StreamSetup(const GetLiveReadsRequest_StreamSetup& from);
  GetLiveReadsRequest_StreamSetup(GetLiveReadsRequest_StreamSetup&& from) noexcept
    : GetLiveReadsRequest_StreamSetup() {
    *this = ::std::move(from);
  }

  inline GetLiveReadsRequest_StreamSetup& operator=(const GetLiveReadsRequest_StreamSetup& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveReadsRequest_StreamSetup& operator=(GetLiveReadsRequest_StreamSetup&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveReadsRequest_StreamSetup& default_instance() {
    return *internal_default_instance();
  }
  enum MaxUnblockReadLengthCase {
    kMaxUnblockReadLengthSamples = 5,
    kMaxUnblockReadLengthSeconds = 6,
    MAX_UNBLOCK_READ_LENGTH_NOT_SET = 0,
  };

  static inline const GetLiveReadsRequest_StreamSetup* internal_default_instance() {
    return reinterpret_cast<const GetLiveReadsRequest_StreamSetup*>(
               &_GetLiveReadsRequest_StreamSetup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GetLiveReadsRequest_StreamSetup& a, GetLiveReadsRequest_StreamSetup& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLiveReadsRequest_StreamSetup* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveReadsRequest_StreamSetup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLiveReadsRequest_StreamSetup* New() const final {
    return new GetLiveReadsRequest_StreamSetup();
  }

  GetLiveReadsRequest_StreamSetup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLiveReadsRequest_StreamSetup>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLiveReadsRequest_StreamSetup& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetLiveReadsRequest_StreamSetup& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLiveReadsRequest_StreamSetup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetLiveReadsRequest.StreamSetup";
  }
  protected:
  explicit GetLiveReadsRequest_StreamSetup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstChannelFieldNumber = 1,
    kLastChannelFieldNumber = 2,
    kSampleMinimumChunkSizeFieldNumber = 4,
    kRawDataTypeFieldNumber = 3,
    kMaxUnblockReadLengthSamplesFieldNumber = 5,
    kMaxUnblockReadLengthSecondsFieldNumber = 6,
  };
  // uint32 first_channel = 1;
  void clear_first_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_channel() const;
  void set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_channel() const;
  void _internal_set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 last_channel = 2;
  void clear_last_channel();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_channel() const;
  void set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_channel() const;
  void _internal_set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 sample_minimum_chunk_size = 4;
  void clear_sample_minimum_chunk_size();
  ::PROTOBUF_NAMESPACE_ID::uint64 sample_minimum_chunk_size() const;
  void set_sample_minimum_chunk_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sample_minimum_chunk_size() const;
  void _internal_set_sample_minimum_chunk_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .minknow_api.data.GetLiveReadsRequest.RawDataType raw_data_type = 3;
  void clear_raw_data_type();
  ::minknow_api::data::GetLiveReadsRequest_RawDataType raw_data_type() const;
  void set_raw_data_type(::minknow_api::data::GetLiveReadsRequest_RawDataType value);
  private:
  ::minknow_api::data::GetLiveReadsRequest_RawDataType _internal_raw_data_type() const;
  void _internal_set_raw_data_type(::minknow_api::data::GetLiveReadsRequest_RawDataType value);
  public:

  // uint64 max_unblock_read_length_samples = 5;
  bool has_max_unblock_read_length_samples() const;
  private:
  bool _internal_has_max_unblock_read_length_samples() const;
  public:
  void clear_max_unblock_read_length_samples();
  ::PROTOBUF_NAMESPACE_ID::uint64 max_unblock_read_length_samples() const;
  void set_max_unblock_read_length_samples(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_max_unblock_read_length_samples() const;
  void _internal_set_max_unblock_read_length_samples(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double max_unblock_read_length_seconds = 6;
  bool has_max_unblock_read_length_seconds() const;
  private:
  bool _internal_has_max_unblock_read_length_seconds() const;
  public:
  void clear_max_unblock_read_length_seconds();
  double max_unblock_read_length_seconds() const;
  void set_max_unblock_read_length_seconds(double value);
  private:
  double _internal_max_unblock_read_length_seconds() const;
  void _internal_set_max_unblock_read_length_seconds(double value);
  public:

  void clear_max_unblock_read_length();
  MaxUnblockReadLengthCase max_unblock_read_length_case() const;
  // @@protoc_insertion_point(class_scope:minknow_api.data.GetLiveReadsRequest.StreamSetup)
 private:
  class _Internal;
  void set_has_max_unblock_read_length_samples();
  void set_has_max_unblock_read_length_seconds();

  inline bool has_max_unblock_read_length() const;
  inline void clear_has_max_unblock_read_length();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_channel_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_channel_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sample_minimum_chunk_size_;
  int raw_data_type_;
  union MaxUnblockReadLengthUnion {
    constexpr MaxUnblockReadLengthUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::PROTOBUF_NAMESPACE_ID::uint64 max_unblock_read_length_samples_;
    double max_unblock_read_length_seconds_;
  } max_unblock_read_length_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetLiveReadsRequest_Actions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetLiveReadsRequest.Actions) */ {
 public:
  inline GetLiveReadsRequest_Actions() : GetLiveReadsRequest_Actions(nullptr) {}
  ~GetLiveReadsRequest_Actions() override;
  explicit constexpr GetLiveReadsRequest_Actions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLiveReadsRequest_Actions(const GetLiveReadsRequest_Actions& from);
  GetLiveReadsRequest_Actions(GetLiveReadsRequest_Actions&& from) noexcept
    : GetLiveReadsRequest_Actions() {
    *this = ::std::move(from);
  }

  inline GetLiveReadsRequest_Actions& operator=(const GetLiveReadsRequest_Actions& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveReadsRequest_Actions& operator=(GetLiveReadsRequest_Actions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveReadsRequest_Actions& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLiveReadsRequest_Actions* internal_default_instance() {
    return reinterpret_cast<const GetLiveReadsRequest_Actions*>(
               &_GetLiveReadsRequest_Actions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(GetLiveReadsRequest_Actions& a, GetLiveReadsRequest_Actions& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLiveReadsRequest_Actions* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveReadsRequest_Actions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLiveReadsRequest_Actions* New() const final {
    return new GetLiveReadsRequest_Actions();
  }

  GetLiveReadsRequest_Actions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLiveReadsRequest_Actions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLiveReadsRequest_Actions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetLiveReadsRequest_Actions& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLiveReadsRequest_Actions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetLiveReadsRequest.Actions";
  }
  protected:
  explicit GetLiveReadsRequest_Actions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionsFieldNumber = 2,
  };
  // repeated .minknow_api.data.GetLiveReadsRequest.Action actions = 2;
  int actions_size() const;
  private:
  int _internal_actions_size() const;
  public:
  void clear_actions();
  ::minknow_api::data::GetLiveReadsRequest_Action* mutable_actions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsRequest_Action >*
      mutable_actions();
  private:
  const ::minknow_api::data::GetLiveReadsRequest_Action& _internal_actions(int index) const;
  ::minknow_api::data::GetLiveReadsRequest_Action* _internal_add_actions();
  public:
  const ::minknow_api::data::GetLiveReadsRequest_Action& actions(int index) const;
  ::minknow_api::data::GetLiveReadsRequest_Action* add_actions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsRequest_Action >&
      actions() const;

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetLiveReadsRequest.Actions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsRequest_Action > actions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetLiveReadsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetLiveReadsRequest) */ {
 public:
  inline GetLiveReadsRequest() : GetLiveReadsRequest(nullptr) {}
  ~GetLiveReadsRequest() override;
  explicit constexpr GetLiveReadsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLiveReadsRequest(const GetLiveReadsRequest& from);
  GetLiveReadsRequest(GetLiveReadsRequest&& from) noexcept
    : GetLiveReadsRequest() {
    *this = ::std::move(from);
  }

  inline GetLiveReadsRequest& operator=(const GetLiveReadsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveReadsRequest& operator=(GetLiveReadsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveReadsRequest& default_instance() {
    return *internal_default_instance();
  }
  enum RequestCase {
    kSetup = 1,
    kActions = 2,
    REQUEST_NOT_SET = 0,
  };

  static inline const GetLiveReadsRequest* internal_default_instance() {
    return reinterpret_cast<const GetLiveReadsRequest*>(
               &_GetLiveReadsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GetLiveReadsRequest& a, GetLiveReadsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLiveReadsRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveReadsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLiveReadsRequest* New() const final {
    return new GetLiveReadsRequest();
  }

  GetLiveReadsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLiveReadsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLiveReadsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetLiveReadsRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLiveReadsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetLiveReadsRequest";
  }
  protected:
  explicit GetLiveReadsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetLiveReadsRequest_UnblockAction UnblockAction;
  typedef GetLiveReadsRequest_StopFurtherData StopFurtherData;
  typedef GetLiveReadsRequest_Action Action;
  typedef GetLiveReadsRequest_StreamSetup StreamSetup;
  typedef GetLiveReadsRequest_Actions Actions;

  typedef GetLiveReadsRequest_RawDataType RawDataType;
  static constexpr RawDataType KEEP_LAST =
    GetLiveReadsRequest_RawDataType_KEEP_LAST;
  static constexpr RawDataType NONE =
    GetLiveReadsRequest_RawDataType_NONE;
  static constexpr RawDataType CALIBRATED =
    GetLiveReadsRequest_RawDataType_CALIBRATED;
  static constexpr RawDataType UNCALIBRATED =
    GetLiveReadsRequest_RawDataType_UNCALIBRATED;
  static inline bool RawDataType_IsValid(int value) {
    return GetLiveReadsRequest_RawDataType_IsValid(value);
  }
  static constexpr RawDataType RawDataType_MIN =
    GetLiveReadsRequest_RawDataType_RawDataType_MIN;
  static constexpr RawDataType RawDataType_MAX =
    GetLiveReadsRequest_RawDataType_RawDataType_MAX;
  static constexpr int RawDataType_ARRAYSIZE =
    GetLiveReadsRequest_RawDataType_RawDataType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  RawDataType_descriptor() {
    return GetLiveReadsRequest_RawDataType_descriptor();
  }
  template<typename T>
  static inline const std::string& RawDataType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RawDataType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RawDataType_Name.");
    return GetLiveReadsRequest_RawDataType_Name(enum_t_value);
  }
  static inline bool RawDataType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      RawDataType* value) {
    return GetLiveReadsRequest_RawDataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kSetupFieldNumber = 1,
    kActionsFieldNumber = 2,
  };
  // .minknow_api.data.GetLiveReadsRequest.StreamSetup setup = 1;
  bool has_setup() const;
  private:
  bool _internal_has_setup() const;
  public:
  void clear_setup();
  const ::minknow_api::data::GetLiveReadsRequest_StreamSetup& setup() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetLiveReadsRequest_StreamSetup* release_setup();
  ::minknow_api::data::GetLiveReadsRequest_StreamSetup* mutable_setup();
  void set_allocated_setup(::minknow_api::data::GetLiveReadsRequest_StreamSetup* setup);
  private:
  const ::minknow_api::data::GetLiveReadsRequest_StreamSetup& _internal_setup() const;
  ::minknow_api::data::GetLiveReadsRequest_StreamSetup* _internal_mutable_setup();
  public:
  void unsafe_arena_set_allocated_setup(
      ::minknow_api::data::GetLiveReadsRequest_StreamSetup* setup);
  ::minknow_api::data::GetLiveReadsRequest_StreamSetup* unsafe_arena_release_setup();

  // .minknow_api.data.GetLiveReadsRequest.Actions actions = 2;
  bool has_actions() const;
  private:
  bool _internal_has_actions() const;
  public:
  void clear_actions();
  const ::minknow_api::data::GetLiveReadsRequest_Actions& actions() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetLiveReadsRequest_Actions* release_actions();
  ::minknow_api::data::GetLiveReadsRequest_Actions* mutable_actions();
  void set_allocated_actions(::minknow_api::data::GetLiveReadsRequest_Actions* actions);
  private:
  const ::minknow_api::data::GetLiveReadsRequest_Actions& _internal_actions() const;
  ::minknow_api::data::GetLiveReadsRequest_Actions* _internal_mutable_actions();
  public:
  void unsafe_arena_set_allocated_actions(
      ::minknow_api::data::GetLiveReadsRequest_Actions* actions);
  ::minknow_api::data::GetLiveReadsRequest_Actions* unsafe_arena_release_actions();

  void clear_request();
  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:minknow_api.data.GetLiveReadsRequest)
 private:
  class _Internal;
  void set_has_setup();
  void set_has_actions();

  inline bool has_request() const;
  inline void clear_has_request();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union RequestUnion {
    constexpr RequestUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::minknow_api::data::GetLiveReadsRequest_StreamSetup* setup_;
    ::minknow_api::data::GetLiveReadsRequest_Actions* actions_;
  } request_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetLiveReadsResponse_ReadData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetLiveReadsResponse.ReadData) */ {
 public:
  inline GetLiveReadsResponse_ReadData() : GetLiveReadsResponse_ReadData(nullptr) {}
  ~GetLiveReadsResponse_ReadData() override;
  explicit constexpr GetLiveReadsResponse_ReadData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLiveReadsResponse_ReadData(const GetLiveReadsResponse_ReadData& from);
  GetLiveReadsResponse_ReadData(GetLiveReadsResponse_ReadData&& from) noexcept
    : GetLiveReadsResponse_ReadData() {
    *this = ::std::move(from);
  }

  inline GetLiveReadsResponse_ReadData& operator=(const GetLiveReadsResponse_ReadData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveReadsResponse_ReadData& operator=(GetLiveReadsResponse_ReadData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveReadsResponse_ReadData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLiveReadsResponse_ReadData* internal_default_instance() {
    return reinterpret_cast<const GetLiveReadsResponse_ReadData*>(
               &_GetLiveReadsResponse_ReadData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GetLiveReadsResponse_ReadData& a, GetLiveReadsResponse_ReadData& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLiveReadsResponse_ReadData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveReadsResponse_ReadData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLiveReadsResponse_ReadData* New() const final {
    return new GetLiveReadsResponse_ReadData();
  }

  GetLiveReadsResponse_ReadData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLiveReadsResponse_ReadData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLiveReadsResponse_ReadData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetLiveReadsResponse_ReadData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLiveReadsResponse_ReadData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetLiveReadsResponse.ReadData";
  }
  protected:
  explicit GetLiveReadsResponse_ReadData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChunkClassificationsFieldNumber = 6,
    kIdFieldNumber = 1,
    kRawDataFieldNumber = 7,
    kStartSampleFieldNumber = 3,
    kChunkStartSampleFieldNumber = 4,
    kChunkLengthFieldNumber = 5,
    kNumberFieldNumber = 2,
    kMedianBeforeFieldNumber = 8,
    kMedianFieldNumber = 9,
  };
  // repeated int32 chunk_classifications = 6;
  int chunk_classifications_size() const;
  private:
  int _internal_chunk_classifications_size() const;
  public:
  void clear_chunk_classifications();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chunk_classifications(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_chunk_classifications() const;
  void _internal_add_chunk_classifications(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_chunk_classifications();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 chunk_classifications(int index) const;
  void set_chunk_classifications(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_chunk_classifications(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      chunk_classifications() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_chunk_classifications();

  // string id = 1;
  void clear_id();
  const std::string& id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_id();
  PROTOBUF_MUST_USE_RESULT std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // bytes raw_data = 7;
  void clear_raw_data();
  const std::string& raw_data() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_raw_data(ArgT0&& arg0, ArgT... args);
  std::string* mutable_raw_data();
  PROTOBUF_MUST_USE_RESULT std::string* release_raw_data();
  void set_allocated_raw_data(std::string* raw_data);
  private:
  const std::string& _internal_raw_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_data(const std::string& value);
  std::string* _internal_mutable_raw_data();
  public:

  // uint64 start_sample = 3;
  void clear_start_sample();
  ::PROTOBUF_NAMESPACE_ID::uint64 start_sample() const;
  void set_start_sample(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_start_sample() const;
  void _internal_set_start_sample(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 chunk_start_sample = 4;
  void clear_chunk_start_sample();
  ::PROTOBUF_NAMESPACE_ID::uint64 chunk_start_sample() const;
  void set_chunk_start_sample(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_chunk_start_sample() const;
  void _internal_set_chunk_start_sample(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 chunk_length = 5;
  void clear_chunk_length();
  ::PROTOBUF_NAMESPACE_ID::uint64 chunk_length() const;
  void set_chunk_length(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_chunk_length() const;
  void _internal_set_chunk_length(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 number = 2;
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::uint32 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float median_before = 8;
  void clear_median_before();
  float median_before() const;
  void set_median_before(float value);
  private:
  float _internal_median_before() const;
  void _internal_set_median_before(float value);
  public:

  // float median = 9;
  void clear_median();
  float median() const;
  void set_median(float value);
  private:
  float _internal_median() const;
  void _internal_set_median(float value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetLiveReadsResponse.ReadData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > chunk_classifications_;
  mutable std::atomic<int> _chunk_classifications_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr raw_data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 start_sample_;
  ::PROTOBUF_NAMESPACE_ID::uint64 chunk_start_sample_;
  ::PROTOBUF_NAMESPACE_ID::uint64 chunk_length_;
  ::PROTOBUF_NAMESPACE_ID::uint32 number_;
  float median_before_;
  float median_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetLiveReadsResponse_ActionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetLiveReadsResponse.ActionResponse) */ {
 public:
  inline GetLiveReadsResponse_ActionResponse() : GetLiveReadsResponse_ActionResponse(nullptr) {}
  ~GetLiveReadsResponse_ActionResponse() override;
  explicit constexpr GetLiveReadsResponse_ActionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLiveReadsResponse_ActionResponse(const GetLiveReadsResponse_ActionResponse& from);
  GetLiveReadsResponse_ActionResponse(GetLiveReadsResponse_ActionResponse&& from) noexcept
    : GetLiveReadsResponse_ActionResponse() {
    *this = ::std::move(from);
  }

  inline GetLiveReadsResponse_ActionResponse& operator=(const GetLiveReadsResponse_ActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveReadsResponse_ActionResponse& operator=(GetLiveReadsResponse_ActionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveReadsResponse_ActionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLiveReadsResponse_ActionResponse* internal_default_instance() {
    return reinterpret_cast<const GetLiveReadsResponse_ActionResponse*>(
               &_GetLiveReadsResponse_ActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(GetLiveReadsResponse_ActionResponse& a, GetLiveReadsResponse_ActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLiveReadsResponse_ActionResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveReadsResponse_ActionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLiveReadsResponse_ActionResponse* New() const final {
    return new GetLiveReadsResponse_ActionResponse();
  }

  GetLiveReadsResponse_ActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLiveReadsResponse_ActionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLiveReadsResponse_ActionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetLiveReadsResponse_ActionResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLiveReadsResponse_ActionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetLiveReadsResponse.ActionResponse";
  }
  protected:
  explicit GetLiveReadsResponse_ActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetLiveReadsResponse_ActionResponse_Response Response;
  static constexpr Response SUCCESS =
    GetLiveReadsResponse_ActionResponse_Response_SUCCESS;
  static constexpr Response FAILED_READ_FINISHED =
    GetLiveReadsResponse_ActionResponse_Response_FAILED_READ_FINISHED;
  static constexpr Response FAILED_READ_TOO_LONG =
    GetLiveReadsResponse_ActionResponse_Response_FAILED_READ_TOO_LONG;
  static inline bool Response_IsValid(int value) {
    return GetLiveReadsResponse_ActionResponse_Response_IsValid(value);
  }
  static constexpr Response Response_MIN =
    GetLiveReadsResponse_ActionResponse_Response_Response_MIN;
  static constexpr Response Response_MAX =
    GetLiveReadsResponse_ActionResponse_Response_Response_MAX;
  static constexpr int Response_ARRAYSIZE =
    GetLiveReadsResponse_ActionResponse_Response_Response_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Response_descriptor() {
    return GetLiveReadsResponse_ActionResponse_Response_descriptor();
  }
  template<typename T>
  static inline const std::string& Response_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Response>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Response_Name.");
    return GetLiveReadsResponse_ActionResponse_Response_Name(enum_t_value);
  }
  static inline bool Response_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Response* value) {
    return GetLiveReadsResponse_ActionResponse_Response_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kActionIdFieldNumber = 1,
    kResponseFieldNumber = 2,
  };
  // string action_id = 1;
  void clear_action_id();
  const std::string& action_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_action_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_action_id();
  PROTOBUF_MUST_USE_RESULT std::string* release_action_id();
  void set_allocated_action_id(std::string* action_id);
  private:
  const std::string& _internal_action_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_action_id(const std::string& value);
  std::string* _internal_mutable_action_id();
  public:

  // .minknow_api.data.GetLiveReadsResponse.ActionResponse.Response response = 2;
  void clear_response();
  ::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response response() const;
  void set_response(::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response value);
  private:
  ::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response _internal_response() const;
  void _internal_set_response(::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetLiveReadsResponse.ActionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr action_id_;
  int response_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetLiveReadsResponse_ChannelsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetLiveReadsResponse_ChannelsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetLiveReadsResponse_ChannelsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  GetLiveReadsResponse_ChannelsEntry_DoNotUse();
  explicit constexpr GetLiveReadsResponse_ChannelsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit GetLiveReadsResponse_ChannelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GetLiveReadsResponse_ChannelsEntry_DoNotUse& other);
  static const GetLiveReadsResponse_ChannelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetLiveReadsResponse_ChannelsEntry_DoNotUse*>(&_GetLiveReadsResponse_ChannelsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class GetLiveReadsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetLiveReadsResponse) */ {
 public:
  inline GetLiveReadsResponse() : GetLiveReadsResponse(nullptr) {}
  ~GetLiveReadsResponse() override;
  explicit constexpr GetLiveReadsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLiveReadsResponse(const GetLiveReadsResponse& from);
  GetLiveReadsResponse(GetLiveReadsResponse&& from) noexcept
    : GetLiveReadsResponse() {
    *this = ::std::move(from);
  }

  inline GetLiveReadsResponse& operator=(const GetLiveReadsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLiveReadsResponse& operator=(GetLiveReadsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLiveReadsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLiveReadsResponse* internal_default_instance() {
    return reinterpret_cast<const GetLiveReadsResponse*>(
               &_GetLiveReadsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(GetLiveReadsResponse& a, GetLiveReadsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLiveReadsResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLiveReadsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetLiveReadsResponse* New() const final {
    return new GetLiveReadsResponse();
  }

  GetLiveReadsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLiveReadsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLiveReadsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetLiveReadsResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLiveReadsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetLiveReadsResponse";
  }
  protected:
  explicit GetLiveReadsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetLiveReadsResponse_ReadData ReadData;
  typedef GetLiveReadsResponse_ActionResponse ActionResponse;

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 4,
    kActionResponsesFieldNumber = 5,
    kSamplesSinceStartFieldNumber = 1,
    kSecondsSinceStartFieldNumber = 2,
  };
  // map<uint32, .minknow_api.data.GetLiveReadsResponse.ReadData> channels = 4;
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData >&
      _internal_channels() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData >*
      _internal_mutable_channels();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData >&
      channels() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData >*
      mutable_channels();

  // repeated .minknow_api.data.GetLiveReadsResponse.ActionResponse action_responses = 5;
  int action_responses_size() const;
  private:
  int _internal_action_responses_size() const;
  public:
  void clear_action_responses();
  ::minknow_api::data::GetLiveReadsResponse_ActionResponse* mutable_action_responses(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsResponse_ActionResponse >*
      mutable_action_responses();
  private:
  const ::minknow_api::data::GetLiveReadsResponse_ActionResponse& _internal_action_responses(int index) const;
  ::minknow_api::data::GetLiveReadsResponse_ActionResponse* _internal_add_action_responses();
  public:
  const ::minknow_api::data::GetLiveReadsResponse_ActionResponse& action_responses(int index) const;
  ::minknow_api::data::GetLiveReadsResponse_ActionResponse* add_action_responses();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsResponse_ActionResponse >&
      action_responses() const;

  // uint64 samples_since_start = 1;
  void clear_samples_since_start();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start() const;
  void set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples_since_start() const;
  void _internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double seconds_since_start = 2;
  void clear_seconds_since_start();
  double seconds_since_start() const;
  void set_seconds_since_start(double value);
  private:
  double _internal_seconds_since_start() const;
  void _internal_set_seconds_since_start(double value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetLiveReadsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      GetLiveReadsResponse_ChannelsEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> channels_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsResponse_ActionResponse > action_responses_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start_;
  double seconds_since_start_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class ResetChannelStatesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:minknow_api.data.ResetChannelStatesRequest) */ {
 public:
  inline ResetChannelStatesRequest() : ResetChannelStatesRequest(nullptr) {}
  explicit constexpr ResetChannelStatesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResetChannelStatesRequest(const ResetChannelStatesRequest& from);
  ResetChannelStatesRequest(ResetChannelStatesRequest&& from) noexcept
    : ResetChannelStatesRequest() {
    *this = ::std::move(from);
  }

  inline ResetChannelStatesRequest& operator=(const ResetChannelStatesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetChannelStatesRequest& operator=(ResetChannelStatesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetChannelStatesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetChannelStatesRequest* internal_default_instance() {
    return reinterpret_cast<const ResetChannelStatesRequest*>(
               &_ResetChannelStatesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(ResetChannelStatesRequest& a, ResetChannelStatesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ResetChannelStatesRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetChannelStatesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResetChannelStatesRequest* New() const final {
    return new ResetChannelStatesRequest();
  }

  ResetChannelStatesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResetChannelStatesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResetChannelStatesRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResetChannelStatesRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.ResetChannelStatesRequest";
  }
  protected:
  explicit ResetChannelStatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:minknow_api.data.ResetChannelStatesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class ResetChannelStatesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:minknow_api.data.ResetChannelStatesResponse) */ {
 public:
  inline ResetChannelStatesResponse() : ResetChannelStatesResponse(nullptr) {}
  explicit constexpr ResetChannelStatesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResetChannelStatesResponse(const ResetChannelStatesResponse& from);
  ResetChannelStatesResponse(ResetChannelStatesResponse&& from) noexcept
    : ResetChannelStatesResponse() {
    *this = ::std::move(from);
  }

  inline ResetChannelStatesResponse& operator=(const ResetChannelStatesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetChannelStatesResponse& operator=(ResetChannelStatesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetChannelStatesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetChannelStatesResponse* internal_default_instance() {
    return reinterpret_cast<const ResetChannelStatesResponse*>(
               &_ResetChannelStatesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(ResetChannelStatesResponse& a, ResetChannelStatesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ResetChannelStatesResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetChannelStatesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResetChannelStatesResponse* New() const final {
    return new ResetChannelStatesResponse();
  }

  ResetChannelStatesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResetChannelStatesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResetChannelStatesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResetChannelStatesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.ResetChannelStatesResponse";
  }
  protected:
  explicit ResetChannelStatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:minknow_api.data.ResetChannelStatesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetReadStatisticsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetReadStatisticsRequest) */ {
 public:
  inline GetReadStatisticsRequest() : GetReadStatisticsRequest(nullptr) {}
  ~GetReadStatisticsRequest() override;
  explicit constexpr GetReadStatisticsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetReadStatisticsRequest(const GetReadStatisticsRequest& from);
  GetReadStatisticsRequest(GetReadStatisticsRequest&& from) noexcept
    : GetReadStatisticsRequest() {
    *this = ::std::move(from);
  }

  inline GetReadStatisticsRequest& operator=(const GetReadStatisticsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadStatisticsRequest& operator=(GetReadStatisticsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadStatisticsRequest& default_instance() {
    return *internal_default_instance();
  }
  enum DurationCase {
    kSeconds = 2,
    kSamples = 3,
    DURATION_NOT_SET = 0,
  };

  static inline const GetReadStatisticsRequest* internal_default_instance() {
    return reinterpret_cast<const GetReadStatisticsRequest*>(
               &_GetReadStatisticsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(GetReadStatisticsRequest& a, GetReadStatisticsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadStatisticsRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadStatisticsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetReadStatisticsRequest* New() const final {
    return new GetReadStatisticsRequest();
  }

  GetReadStatisticsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetReadStatisticsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetReadStatisticsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetReadStatisticsRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReadStatisticsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetReadStatisticsRequest";
  }
  protected:
  explicit GetReadStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetReadStatisticsRequest_ReadSplit ReadSplit;
  static constexpr ReadSplit CHUNK =
    GetReadStatisticsRequest_ReadSplit_CHUNK;
  static constexpr ReadSplit COMPLETED_READ =
    GetReadStatisticsRequest_ReadSplit_COMPLETED_READ;
  static inline bool ReadSplit_IsValid(int value) {
    return GetReadStatisticsRequest_ReadSplit_IsValid(value);
  }
  static constexpr ReadSplit ReadSplit_MIN =
    GetReadStatisticsRequest_ReadSplit_ReadSplit_MIN;
  static constexpr ReadSplit ReadSplit_MAX =
    GetReadStatisticsRequest_ReadSplit_ReadSplit_MAX;
  static constexpr int ReadSplit_ARRAYSIZE =
    GetReadStatisticsRequest_ReadSplit_ReadSplit_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ReadSplit_descriptor() {
    return GetReadStatisticsRequest_ReadSplit_descriptor();
  }
  template<typename T>
  static inline const std::string& ReadSplit_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ReadSplit>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ReadSplit_Name.");
    return GetReadStatisticsRequest_ReadSplit_Name(enum_t_value);
  }
  static inline bool ReadSplit_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ReadSplit* value) {
    return GetReadStatisticsRequest_ReadSplit_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 1,
    kRequiredClassificationsFieldNumber = 7,
    kReadSplitFieldNumber = 4,
    kNoCurrentStatisticsFieldNumber = 5,
    kNoChunkStatisticsFieldNumber = 6,
    kSecondsFieldNumber = 2,
    kSamplesFieldNumber = 3,
  };
  // repeated uint32 channels = 1;
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channels(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_channels() const;
  void _internal_add_channels(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_channels();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 channels(int index) const;
  void set_channels(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_channels(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      channels() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_channels();

  // repeated string required_classifications = 7;
  int required_classifications_size() const;
  private:
  int _internal_required_classifications_size() const;
  public:
  void clear_required_classifications();
  const std::string& required_classifications(int index) const;
  std::string* mutable_required_classifications(int index);
  void set_required_classifications(int index, const std::string& value);
  void set_required_classifications(int index, std::string&& value);
  void set_required_classifications(int index, const char* value);
  void set_required_classifications(int index, const char* value, size_t size);
  std::string* add_required_classifications();
  void add_required_classifications(const std::string& value);
  void add_required_classifications(std::string&& value);
  void add_required_classifications(const char* value);
  void add_required_classifications(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& required_classifications() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_required_classifications();
  private:
  const std::string& _internal_required_classifications(int index) const;
  std::string* _internal_add_required_classifications();
  public:

  // .minknow_api.data.GetReadStatisticsRequest.ReadSplit read_split = 4 [(.minknow_api.rpc_required) = true];
  void clear_read_split();
  ::minknow_api::data::GetReadStatisticsRequest_ReadSplit read_split() const;
  void set_read_split(::minknow_api::data::GetReadStatisticsRequest_ReadSplit value);
  private:
  ::minknow_api::data::GetReadStatisticsRequest_ReadSplit _internal_read_split() const;
  void _internal_set_read_split(::minknow_api::data::GetReadStatisticsRequest_ReadSplit value);
  public:

  // bool no_current_statistics = 5;
  void clear_no_current_statistics();
  bool no_current_statistics() const;
  void set_no_current_statistics(bool value);
  private:
  bool _internal_no_current_statistics() const;
  void _internal_set_no_current_statistics(bool value);
  public:

  // bool no_chunk_statistics = 6;
  void clear_no_chunk_statistics();
  bool no_chunk_statistics() const;
  void set_no_chunk_statistics(bool value);
  private:
  bool _internal_no_chunk_statistics() const;
  void _internal_set_no_chunk_statistics(bool value);
  public:

  // float seconds = 2;
  bool has_seconds() const;
  private:
  bool _internal_has_seconds() const;
  public:
  void clear_seconds();
  float seconds() const;
  void set_seconds(float value);
  private:
  float _internal_seconds() const;
  void _internal_set_seconds(float value);
  public:

  // uint64 samples = 3;
  bool has_samples() const;
  private:
  bool _internal_has_samples() const;
  public:
  void clear_samples();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples() const;
  void set_samples(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples() const;
  void _internal_set_samples(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  void clear_duration();
  DurationCase duration_case() const;
  // @@protoc_insertion_point(class_scope:minknow_api.data.GetReadStatisticsRequest)
 private:
  class _Internal;
  void set_has_seconds();
  void set_has_samples();

  inline bool has_duration() const;
  inline void clear_has_duration();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > channels_;
  mutable std::atomic<int> _channels_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> required_classifications_;
  int read_split_;
  bool no_current_statistics_;
  bool no_chunk_statistics_;
  union DurationUnion {
    constexpr DurationUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    float seconds_;
    ::PROTOBUF_NAMESPACE_ID::uint64 samples_;
  } duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetReadStatisticsResponse_Statistics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetReadStatisticsResponse.Statistics) */ {
 public:
  inline GetReadStatisticsResponse_Statistics() : GetReadStatisticsResponse_Statistics(nullptr) {}
  ~GetReadStatisticsResponse_Statistics() override;
  explicit constexpr GetReadStatisticsResponse_Statistics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetReadStatisticsResponse_Statistics(const GetReadStatisticsResponse_Statistics& from);
  GetReadStatisticsResponse_Statistics(GetReadStatisticsResponse_Statistics&& from) noexcept
    : GetReadStatisticsResponse_Statistics() {
    *this = ::std::move(from);
  }

  inline GetReadStatisticsResponse_Statistics& operator=(const GetReadStatisticsResponse_Statistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadStatisticsResponse_Statistics& operator=(GetReadStatisticsResponse_Statistics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadStatisticsResponse_Statistics& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadStatisticsResponse_Statistics* internal_default_instance() {
    return reinterpret_cast<const GetReadStatisticsResponse_Statistics*>(
               &_GetReadStatisticsResponse_Statistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(GetReadStatisticsResponse_Statistics& a, GetReadStatisticsResponse_Statistics& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadStatisticsResponse_Statistics* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadStatisticsResponse_Statistics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetReadStatisticsResponse_Statistics* New() const final {
    return new GetReadStatisticsResponse_Statistics();
  }

  GetReadStatisticsResponse_Statistics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetReadStatisticsResponse_Statistics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetReadStatisticsResponse_Statistics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetReadStatisticsResponse_Statistics& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReadStatisticsResponse_Statistics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetReadStatisticsResponse.Statistics";
  }
  protected:
  explicit GetReadStatisticsResponse_Statistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
    kMeanFieldNumber = 3,
    kSDFieldNumber = 4,
    kMedianFieldNumber = 6,
    kQ5FieldNumber = 7,
    kQ10FieldNumber = 8,
    kQ25FieldNumber = 9,
    kQ75FieldNumber = 10,
    kQ90FieldNumber = 11,
    kQ95FieldNumber = 12,
  };
  // double min = 1;
  void clear_min();
  double min() const;
  void set_min(double value);
  private:
  double _internal_min() const;
  void _internal_set_min(double value);
  public:

  // double max = 2;
  void clear_max();
  double max() const;
  void set_max(double value);
  private:
  double _internal_max() const;
  void _internal_set_max(double value);
  public:

  // double mean = 3;
  void clear_mean();
  double mean() const;
  void set_mean(double value);
  private:
  double _internal_mean() const;
  void _internal_set_mean(double value);
  public:

  // double s_d = 4;
  void clear_s_d();
  double s_d() const;
  void set_s_d(double value);
  private:
  double _internal_s_d() const;
  void _internal_set_s_d(double value);
  public:

  // double median = 6;
  void clear_median();
  double median() const;
  void set_median(double value);
  private:
  double _internal_median() const;
  void _internal_set_median(double value);
  public:

  // double q_5 = 7;
  void clear_q_5();
  double q_5() const;
  void set_q_5(double value);
  private:
  double _internal_q_5() const;
  void _internal_set_q_5(double value);
  public:

  // double q_10 = 8;
  void clear_q_10();
  double q_10() const;
  void set_q_10(double value);
  private:
  double _internal_q_10() const;
  void _internal_set_q_10(double value);
  public:

  // double q_25 = 9;
  void clear_q_25();
  double q_25() const;
  void set_q_25(double value);
  private:
  double _internal_q_25() const;
  void _internal_set_q_25(double value);
  public:

  // double q_75 = 10;
  void clear_q_75();
  double q_75() const;
  void set_q_75(double value);
  private:
  double _internal_q_75() const;
  void _internal_set_q_75(double value);
  public:

  // double q_90 = 11;
  void clear_q_90();
  double q_90() const;
  void set_q_90(double value);
  private:
  double _internal_q_90() const;
  void _internal_set_q_90(double value);
  public:

  // double q_95 = 12;
  void clear_q_95();
  double q_95() const;
  void set_q_95(double value);
  private:
  double _internal_q_95() const;
  void _internal_set_q_95(double value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetReadStatisticsResponse.Statistics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double min_;
  double max_;
  double mean_;
  double s_d_;
  double median_;
  double q_5_;
  double q_10_;
  double q_25_;
  double q_75_;
  double q_90_;
  double q_95_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetReadStatisticsResponse_ChunkStatistics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetReadStatisticsResponse.ChunkStatistics) */ {
 public:
  inline GetReadStatisticsResponse_ChunkStatistics() : GetReadStatisticsResponse_ChunkStatistics(nullptr) {}
  ~GetReadStatisticsResponse_ChunkStatistics() override;
  explicit constexpr GetReadStatisticsResponse_ChunkStatistics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetReadStatisticsResponse_ChunkStatistics(const GetReadStatisticsResponse_ChunkStatistics& from);
  GetReadStatisticsResponse_ChunkStatistics(GetReadStatisticsResponse_ChunkStatistics&& from) noexcept
    : GetReadStatisticsResponse_ChunkStatistics() {
    *this = ::std::move(from);
  }

  inline GetReadStatisticsResponse_ChunkStatistics& operator=(const GetReadStatisticsResponse_ChunkStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadStatisticsResponse_ChunkStatistics& operator=(GetReadStatisticsResponse_ChunkStatistics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadStatisticsResponse_ChunkStatistics& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadStatisticsResponse_ChunkStatistics* internal_default_instance() {
    return reinterpret_cast<const GetReadStatisticsResponse_ChunkStatistics*>(
               &_GetReadStatisticsResponse_ChunkStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(GetReadStatisticsResponse_ChunkStatistics& a, GetReadStatisticsResponse_ChunkStatistics& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadStatisticsResponse_ChunkStatistics* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadStatisticsResponse_ChunkStatistics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetReadStatisticsResponse_ChunkStatistics* New() const final {
    return new GetReadStatisticsResponse_ChunkStatistics();
  }

  GetReadStatisticsResponse_ChunkStatistics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetReadStatisticsResponse_ChunkStatistics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetReadStatisticsResponse_ChunkStatistics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetReadStatisticsResponse_ChunkStatistics& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReadStatisticsResponse_ChunkStatistics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetReadStatisticsResponse.ChunkStatistics";
  }
  protected:
  explicit GetReadStatisticsResponse_ChunkStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMedianSdFieldNumber = 1,
    kMedianFieldNumber = 2,
    kRangeFieldNumber = 3,
  };
  // double median_sd = 1;
  void clear_median_sd();
  double median_sd() const;
  void set_median_sd(double value);
  private:
  double _internal_median_sd() const;
  void _internal_set_median_sd(double value);
  public:

  // double median = 2;
  void clear_median();
  double median() const;
  void set_median(double value);
  private:
  double _internal_median() const;
  void _internal_set_median(double value);
  public:

  // double range = 3;
  void clear_range();
  double range() const;
  void set_range(double value);
  private:
  double _internal_range() const;
  void _internal_set_range(double value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetReadStatisticsResponse.ChunkStatistics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double median_sd_;
  double median_;
  double range_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetReadStatisticsResponse_PerClassificationData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetReadStatisticsResponse.PerClassificationData) */ {
 public:
  inline GetReadStatisticsResponse_PerClassificationData() : GetReadStatisticsResponse_PerClassificationData(nullptr) {}
  ~GetReadStatisticsResponse_PerClassificationData() override;
  explicit constexpr GetReadStatisticsResponse_PerClassificationData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetReadStatisticsResponse_PerClassificationData(const GetReadStatisticsResponse_PerClassificationData& from);
  GetReadStatisticsResponse_PerClassificationData(GetReadStatisticsResponse_PerClassificationData&& from) noexcept
    : GetReadStatisticsResponse_PerClassificationData() {
    *this = ::std::move(from);
  }

  inline GetReadStatisticsResponse_PerClassificationData& operator=(const GetReadStatisticsResponse_PerClassificationData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadStatisticsResponse_PerClassificationData& operator=(GetReadStatisticsResponse_PerClassificationData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadStatisticsResponse_PerClassificationData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadStatisticsResponse_PerClassificationData* internal_default_instance() {
    return reinterpret_cast<const GetReadStatisticsResponse_PerClassificationData*>(
               &_GetReadStatisticsResponse_PerClassificationData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(GetReadStatisticsResponse_PerClassificationData& a, GetReadStatisticsResponse_PerClassificationData& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadStatisticsResponse_PerClassificationData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadStatisticsResponse_PerClassificationData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetReadStatisticsResponse_PerClassificationData* New() const final {
    return new GetReadStatisticsResponse_PerClassificationData();
  }

  GetReadStatisticsResponse_PerClassificationData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetReadStatisticsResponse_PerClassificationData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetReadStatisticsResponse_PerClassificationData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetReadStatisticsResponse_PerClassificationData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReadStatisticsResponse_PerClassificationData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetReadStatisticsResponse.PerClassificationData";
  }
  protected:
  explicit GetReadStatisticsResponse_PerClassificationData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDurationStatisticsFieldNumber = 1,
    kCurrentStatisticsFieldNumber = 2,
    kChunkStatisticsFieldNumber = 6,
    kSamplesDurationFieldNumber = 4,
    kSecondsDurationFieldNumber = 5,
  };
  // .minknow_api.data.GetReadStatisticsResponse.Statistics duration_statistics = 1;
  bool has_duration_statistics() const;
  private:
  bool _internal_has_duration_statistics() const;
  public:
  void clear_duration_statistics();
  const ::minknow_api::data::GetReadStatisticsResponse_Statistics& duration_statistics() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetReadStatisticsResponse_Statistics* release_duration_statistics();
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* mutable_duration_statistics();
  void set_allocated_duration_statistics(::minknow_api::data::GetReadStatisticsResponse_Statistics* duration_statistics);
  private:
  const ::minknow_api::data::GetReadStatisticsResponse_Statistics& _internal_duration_statistics() const;
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* _internal_mutable_duration_statistics();
  public:
  void unsafe_arena_set_allocated_duration_statistics(
      ::minknow_api::data::GetReadStatisticsResponse_Statistics* duration_statistics);
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* unsafe_arena_release_duration_statistics();

  // .minknow_api.data.GetReadStatisticsResponse.Statistics current_statistics = 2;
  bool has_current_statistics() const;
  private:
  bool _internal_has_current_statistics() const;
  public:
  void clear_current_statistics();
  const ::minknow_api::data::GetReadStatisticsResponse_Statistics& current_statistics() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetReadStatisticsResponse_Statistics* release_current_statistics();
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* mutable_current_statistics();
  void set_allocated_current_statistics(::minknow_api::data::GetReadStatisticsResponse_Statistics* current_statistics);
  private:
  const ::minknow_api::data::GetReadStatisticsResponse_Statistics& _internal_current_statistics() const;
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* _internal_mutable_current_statistics();
  public:
  void unsafe_arena_set_allocated_current_statistics(
      ::minknow_api::data::GetReadStatisticsResponse_Statistics* current_statistics);
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* unsafe_arena_release_current_statistics();

  // .minknow_api.data.GetReadStatisticsResponse.ChunkStatistics chunk_statistics = 6;
  bool has_chunk_statistics() const;
  private:
  bool _internal_has_chunk_statistics() const;
  public:
  void clear_chunk_statistics();
  const ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics& chunk_statistics() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* release_chunk_statistics();
  ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* mutable_chunk_statistics();
  void set_allocated_chunk_statistics(::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* chunk_statistics);
  private:
  const ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics& _internal_chunk_statistics() const;
  ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* _internal_mutable_chunk_statistics();
  public:
  void unsafe_arena_set_allocated_chunk_statistics(
      ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* chunk_statistics);
  ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* unsafe_arena_release_chunk_statistics();

  // uint64 samples_duration = 4;
  void clear_samples_duration();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_duration() const;
  void set_samples_duration(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples_duration() const;
  void _internal_set_samples_duration(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double seconds_duration = 5;
  void clear_seconds_duration();
  double seconds_duration() const;
  void set_seconds_duration(double value);
  private:
  double _internal_seconds_duration() const;
  void _internal_set_seconds_duration(double value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetReadStatisticsResponse.PerClassificationData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* duration_statistics_;
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* current_statistics_;
  ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* chunk_statistics_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_duration_;
  double seconds_duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse, 
    std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse, 
    std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse();
  explicit constexpr GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse& other);
  static const GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse*>(&_GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.ClassificationsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class GetReadStatisticsResponse_PerConfigurationData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData) */ {
 public:
  inline GetReadStatisticsResponse_PerConfigurationData() : GetReadStatisticsResponse_PerConfigurationData(nullptr) {}
  ~GetReadStatisticsResponse_PerConfigurationData() override;
  explicit constexpr GetReadStatisticsResponse_PerConfigurationData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetReadStatisticsResponse_PerConfigurationData(const GetReadStatisticsResponse_PerConfigurationData& from);
  GetReadStatisticsResponse_PerConfigurationData(GetReadStatisticsResponse_PerConfigurationData&& from) noexcept
    : GetReadStatisticsResponse_PerConfigurationData() {
    *this = ::std::move(from);
  }

  inline GetReadStatisticsResponse_PerConfigurationData& operator=(const GetReadStatisticsResponse_PerConfigurationData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadStatisticsResponse_PerConfigurationData& operator=(GetReadStatisticsResponse_PerConfigurationData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadStatisticsResponse_PerConfigurationData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadStatisticsResponse_PerConfigurationData* internal_default_instance() {
    return reinterpret_cast<const GetReadStatisticsResponse_PerConfigurationData*>(
               &_GetReadStatisticsResponse_PerConfigurationData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(GetReadStatisticsResponse_PerConfigurationData& a, GetReadStatisticsResponse_PerConfigurationData& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadStatisticsResponse_PerConfigurationData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadStatisticsResponse_PerConfigurationData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetReadStatisticsResponse_PerConfigurationData* New() const final {
    return new GetReadStatisticsResponse_PerConfigurationData();
  }

  GetReadStatisticsResponse_PerConfigurationData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetReadStatisticsResponse_PerConfigurationData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetReadStatisticsResponse_PerConfigurationData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetReadStatisticsResponse_PerConfigurationData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReadStatisticsResponse_PerConfigurationData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetReadStatisticsResponse.PerConfigurationData";
  }
  protected:
  explicit GetReadStatisticsResponse_PerConfigurationData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kClassificationsFieldNumber = 2,
    kChannelConfigurationFieldNumber = 1,
    kIncompleteFieldNumber = 3,
  };
  // map<string, .minknow_api.data.GetReadStatisticsResponse.PerClassificationData> classifications = 2;
  int classifications_size() const;
  private:
  int _internal_classifications_size() const;
  public:
  void clear_classifications();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData >&
      _internal_classifications() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData >*
      _internal_mutable_classifications();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData >&
      classifications() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData >*
      mutable_classifications();

  // .minknow_api.device.ReturnedChannelConfiguration channel_configuration = 1;
  bool has_channel_configuration() const;
  private:
  bool _internal_has_channel_configuration() const;
  public:
  void clear_channel_configuration();
  const ::minknow_api::device::ReturnedChannelConfiguration& channel_configuration() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::device::ReturnedChannelConfiguration* release_channel_configuration();
  ::minknow_api::device::ReturnedChannelConfiguration* mutable_channel_configuration();
  void set_allocated_channel_configuration(::minknow_api::device::ReturnedChannelConfiguration* channel_configuration);
  private:
  const ::minknow_api::device::ReturnedChannelConfiguration& _internal_channel_configuration() const;
  ::minknow_api::device::ReturnedChannelConfiguration* _internal_mutable_channel_configuration();
  public:
  void unsafe_arena_set_allocated_channel_configuration(
      ::minknow_api::device::ReturnedChannelConfiguration* channel_configuration);
  ::minknow_api::device::ReturnedChannelConfiguration* unsafe_arena_release_channel_configuration();

  // .minknow_api.data.GetReadStatisticsResponse.PerClassificationData incomplete = 3;
  bool has_incomplete() const;
  private:
  bool _internal_has_incomplete() const;
  public:
  void clear_incomplete();
  const ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData& incomplete() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* release_incomplete();
  ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* mutable_incomplete();
  void set_allocated_incomplete(::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* incomplete);
  private:
  const ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData& _internal_incomplete() const;
  ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* _internal_mutable_incomplete();
  public:
  void unsafe_arena_set_allocated_incomplete(
      ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* incomplete);
  ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* unsafe_arena_release_incomplete();

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      GetReadStatisticsResponse_PerConfigurationData_ClassificationsEntry_DoNotUse,
      std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> classifications_;
  ::minknow_api::device::ReturnedChannelConfiguration* channel_configuration_;
  ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* incomplete_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetReadStatisticsResponse_PerChannelData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetReadStatisticsResponse.PerChannelData) */ {
 public:
  inline GetReadStatisticsResponse_PerChannelData() : GetReadStatisticsResponse_PerChannelData(nullptr) {}
  ~GetReadStatisticsResponse_PerChannelData() override;
  explicit constexpr GetReadStatisticsResponse_PerChannelData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetReadStatisticsResponse_PerChannelData(const GetReadStatisticsResponse_PerChannelData& from);
  GetReadStatisticsResponse_PerChannelData(GetReadStatisticsResponse_PerChannelData&& from) noexcept
    : GetReadStatisticsResponse_PerChannelData() {
    *this = ::std::move(from);
  }

  inline GetReadStatisticsResponse_PerChannelData& operator=(const GetReadStatisticsResponse_PerChannelData& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadStatisticsResponse_PerChannelData& operator=(GetReadStatisticsResponse_PerChannelData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadStatisticsResponse_PerChannelData& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadStatisticsResponse_PerChannelData* internal_default_instance() {
    return reinterpret_cast<const GetReadStatisticsResponse_PerChannelData*>(
               &_GetReadStatisticsResponse_PerChannelData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(GetReadStatisticsResponse_PerChannelData& a, GetReadStatisticsResponse_PerChannelData& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadStatisticsResponse_PerChannelData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadStatisticsResponse_PerChannelData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetReadStatisticsResponse_PerChannelData* New() const final {
    return new GetReadStatisticsResponse_PerChannelData();
  }

  GetReadStatisticsResponse_PerChannelData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetReadStatisticsResponse_PerChannelData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetReadStatisticsResponse_PerChannelData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetReadStatisticsResponse_PerChannelData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReadStatisticsResponse_PerChannelData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetReadStatisticsResponse.PerChannelData";
  }
  protected:
  explicit GetReadStatisticsResponse_PerChannelData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigurationsFieldNumber = 6,
    kSamplesSinceStartFieldNumber = 2,
    kSecondsSinceStartFieldNumber = 3,
    kSamplesDurationFieldNumber = 4,
    kSecondsDurationFieldNumber = 5,
  };
  // repeated .minknow_api.data.GetReadStatisticsResponse.PerConfigurationData configurations = 6;
  int configurations_size() const;
  private:
  int _internal_configurations_size() const;
  public:
  void clear_configurations();
  ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData* mutable_configurations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData >*
      mutable_configurations();
  private:
  const ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData& _internal_configurations(int index) const;
  ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData* _internal_add_configurations();
  public:
  const ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData& configurations(int index) const;
  ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData* add_configurations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData >&
      configurations() const;

  // uint64 samples_since_start = 2;
  void clear_samples_since_start();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start() const;
  void set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples_since_start() const;
  void _internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double seconds_since_start = 3;
  void clear_seconds_since_start();
  double seconds_since_start() const;
  void set_seconds_since_start(double value);
  private:
  double _internal_seconds_since_start() const;
  void _internal_set_seconds_since_start(double value);
  public:

  // uint64 samples_duration = 4;
  void clear_samples_duration();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_duration() const;
  void set_samples_duration(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples_duration() const;
  void _internal_set_samples_duration(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double seconds_duration = 5;
  void clear_seconds_duration();
  double seconds_duration() const;
  void set_seconds_duration(double value);
  private:
  double _internal_seconds_duration() const;
  void _internal_set_seconds_duration(double value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetReadStatisticsResponse.PerChannelData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData > configurations_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start_;
  double seconds_since_start_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_duration_;
  double seconds_duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetReadStatisticsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetReadStatisticsResponse) */ {
 public:
  inline GetReadStatisticsResponse() : GetReadStatisticsResponse(nullptr) {}
  ~GetReadStatisticsResponse() override;
  explicit constexpr GetReadStatisticsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetReadStatisticsResponse(const GetReadStatisticsResponse& from);
  GetReadStatisticsResponse(GetReadStatisticsResponse&& from) noexcept
    : GetReadStatisticsResponse() {
    *this = ::std::move(from);
  }

  inline GetReadStatisticsResponse& operator=(const GetReadStatisticsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetReadStatisticsResponse& operator=(GetReadStatisticsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetReadStatisticsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetReadStatisticsResponse* internal_default_instance() {
    return reinterpret_cast<const GetReadStatisticsResponse*>(
               &_GetReadStatisticsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(GetReadStatisticsResponse& a, GetReadStatisticsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetReadStatisticsResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetReadStatisticsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetReadStatisticsResponse* New() const final {
    return new GetReadStatisticsResponse();
  }

  GetReadStatisticsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetReadStatisticsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetReadStatisticsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetReadStatisticsResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReadStatisticsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetReadStatisticsResponse";
  }
  protected:
  explicit GetReadStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetReadStatisticsResponse_Statistics Statistics;
  typedef GetReadStatisticsResponse_ChunkStatistics ChunkStatistics;
  typedef GetReadStatisticsResponse_PerClassificationData PerClassificationData;
  typedef GetReadStatisticsResponse_PerConfigurationData PerConfigurationData;
  typedef GetReadStatisticsResponse_PerChannelData PerChannelData;

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 1,
    kSamplesSinceStartFieldNumber = 2,
    kSecondsSinceStartFieldNumber = 3,
  };
  // repeated .minknow_api.data.GetReadStatisticsResponse.PerChannelData channels = 1;
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  ::minknow_api::data::GetReadStatisticsResponse_PerChannelData* mutable_channels(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerChannelData >*
      mutable_channels();
  private:
  const ::minknow_api::data::GetReadStatisticsResponse_PerChannelData& _internal_channels(int index) const;
  ::minknow_api::data::GetReadStatisticsResponse_PerChannelData* _internal_add_channels();
  public:
  const ::minknow_api::data::GetReadStatisticsResponse_PerChannelData& channels(int index) const;
  ::minknow_api::data::GetReadStatisticsResponse_PerChannelData* add_channels();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerChannelData >&
      channels() const;

  // uint64 samples_since_start = 2;
  void clear_samples_since_start();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start() const;
  void set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples_since_start() const;
  void _internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // double seconds_since_start = 3;
  void clear_seconds_since_start();
  double seconds_since_start() const;
  void set_seconds_since_start(double value);
  private:
  double _internal_seconds_since_start() const;
  void _internal_set_seconds_since_start(double value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetReadStatisticsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerChannelData > channels_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_since_start_;
  double seconds_since_start_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class LockChannelStatesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.LockChannelStatesRequest) */ {
 public:
  inline LockChannelStatesRequest() : LockChannelStatesRequest(nullptr) {}
  ~LockChannelStatesRequest() override;
  explicit constexpr LockChannelStatesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LockChannelStatesRequest(const LockChannelStatesRequest& from);
  LockChannelStatesRequest(LockChannelStatesRequest&& from) noexcept
    : LockChannelStatesRequest() {
    *this = ::std::move(from);
  }

  inline LockChannelStatesRequest& operator=(const LockChannelStatesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LockChannelStatesRequest& operator=(LockChannelStatesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LockChannelStatesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LockChannelStatesRequest* internal_default_instance() {
    return reinterpret_cast<const LockChannelStatesRequest*>(
               &_LockChannelStatesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(LockChannelStatesRequest& a, LockChannelStatesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LockChannelStatesRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LockChannelStatesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LockChannelStatesRequest* New() const final {
    return new LockChannelStatesRequest();
  }

  LockChannelStatesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LockChannelStatesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const LockChannelStatesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const LockChannelStatesRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LockChannelStatesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.LockChannelStatesRequest";
  }
  protected:
  explicit LockChannelStatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 1,
    kStateNameFieldNumber = 2,
  };
  // repeated uint64 channels = 1 [(.minknow_api.rpc_required) = true];
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_channels(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_channels() const;
  void _internal_add_channels(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_channels();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 channels(int index) const;
  void set_channels(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_channels(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      channels() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_channels();

  // string state_name = 2 [(.minknow_api.rpc_required) = true];
  void clear_state_name();
  const std::string& state_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_state_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_state_name();
  PROTOBUF_MUST_USE_RESULT std::string* release_state_name();
  void set_allocated_state_name(std::string* state_name);
  private:
  const std::string& _internal_state_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state_name(const std::string& value);
  std::string* _internal_mutable_state_name();
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.LockChannelStatesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > channels_;
  mutable std::atomic<int> _channels_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr state_name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class LockChannelStatesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:minknow_api.data.LockChannelStatesResponse) */ {
 public:
  inline LockChannelStatesResponse() : LockChannelStatesResponse(nullptr) {}
  explicit constexpr LockChannelStatesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LockChannelStatesResponse(const LockChannelStatesResponse& from);
  LockChannelStatesResponse(LockChannelStatesResponse&& from) noexcept
    : LockChannelStatesResponse() {
    *this = ::std::move(from);
  }

  inline LockChannelStatesResponse& operator=(const LockChannelStatesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LockChannelStatesResponse& operator=(LockChannelStatesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LockChannelStatesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LockChannelStatesResponse* internal_default_instance() {
    return reinterpret_cast<const LockChannelStatesResponse*>(
               &_LockChannelStatesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(LockChannelStatesResponse& a, LockChannelStatesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LockChannelStatesResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LockChannelStatesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LockChannelStatesResponse* New() const final {
    return new LockChannelStatesResponse();
  }

  LockChannelStatesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LockChannelStatesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const LockChannelStatesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const LockChannelStatesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.LockChannelStatesResponse";
  }
  protected:
  explicit LockChannelStatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:minknow_api.data.LockChannelStatesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class UnlockChannelStatesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.UnlockChannelStatesRequest) */ {
 public:
  inline UnlockChannelStatesRequest() : UnlockChannelStatesRequest(nullptr) {}
  ~UnlockChannelStatesRequest() override;
  explicit constexpr UnlockChannelStatesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnlockChannelStatesRequest(const UnlockChannelStatesRequest& from);
  UnlockChannelStatesRequest(UnlockChannelStatesRequest&& from) noexcept
    : UnlockChannelStatesRequest() {
    *this = ::std::move(from);
  }

  inline UnlockChannelStatesRequest& operator=(const UnlockChannelStatesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnlockChannelStatesRequest& operator=(UnlockChannelStatesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnlockChannelStatesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnlockChannelStatesRequest* internal_default_instance() {
    return reinterpret_cast<const UnlockChannelStatesRequest*>(
               &_UnlockChannelStatesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(UnlockChannelStatesRequest& a, UnlockChannelStatesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UnlockChannelStatesRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnlockChannelStatesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnlockChannelStatesRequest* New() const final {
    return new UnlockChannelStatesRequest();
  }

  UnlockChannelStatesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnlockChannelStatesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UnlockChannelStatesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const UnlockChannelStatesRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnlockChannelStatesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.UnlockChannelStatesRequest";
  }
  protected:
  explicit UnlockChannelStatesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelsFieldNumber = 1,
  };
  // repeated uint64 channels = 1 [(.minknow_api.rpc_required) = true];
  int channels_size() const;
  private:
  int _internal_channels_size() const;
  public:
  void clear_channels();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_channels(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_channels() const;
  void _internal_add_channels(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_channels();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 channels(int index) const;
  void set_channels(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_channels(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      channels() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_channels();

  // @@protoc_insertion_point(class_scope:minknow_api.data.UnlockChannelStatesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > channels_;
  mutable std::atomic<int> _channels_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class UnlockChannelStatesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:minknow_api.data.UnlockChannelStatesResponse) */ {
 public:
  inline UnlockChannelStatesResponse() : UnlockChannelStatesResponse(nullptr) {}
  explicit constexpr UnlockChannelStatesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnlockChannelStatesResponse(const UnlockChannelStatesResponse& from);
  UnlockChannelStatesResponse(UnlockChannelStatesResponse&& from) noexcept
    : UnlockChannelStatesResponse() {
    *this = ::std::move(from);
  }

  inline UnlockChannelStatesResponse& operator=(const UnlockChannelStatesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnlockChannelStatesResponse& operator=(UnlockChannelStatesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnlockChannelStatesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnlockChannelStatesResponse* internal_default_instance() {
    return reinterpret_cast<const UnlockChannelStatesResponse*>(
               &_UnlockChannelStatesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(UnlockChannelStatesResponse& a, UnlockChannelStatesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UnlockChannelStatesResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnlockChannelStatesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UnlockChannelStatesResponse* New() const final {
    return new UnlockChannelStatesResponse();
  }

  UnlockChannelStatesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UnlockChannelStatesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UnlockChannelStatesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UnlockChannelStatesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.UnlockChannelStatesResponse";
  }
  protected:
  explicit UnlockChannelStatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:minknow_api.data.UnlockChannelStatesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoRequest) */ {
 public:
  inline GetExperimentYieldInfoRequest() : GetExperimentYieldInfoRequest(nullptr) {}
  explicit constexpr GetExperimentYieldInfoRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoRequest(const GetExperimentYieldInfoRequest& from);
  GetExperimentYieldInfoRequest(GetExperimentYieldInfoRequest&& from) noexcept
    : GetExperimentYieldInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoRequest& operator=(const GetExperimentYieldInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoRequest& operator=(GetExperimentYieldInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoRequest*>(
               &_GetExperimentYieldInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(GetExperimentYieldInfoRequest& a, GetExperimentYieldInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoRequest* New() const final {
    return new GetExperimentYieldInfoRequest();
  }

  GetExperimentYieldInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetExperimentYieldInfoRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoRequest";
  }
  protected:
  explicit GetExperimentYieldInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_CompleteReadInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo) */ {
 public:
  inline GetExperimentYieldInfoResponse_CompleteReadInfo() : GetExperimentYieldInfoResponse_CompleteReadInfo(nullptr) {}
  ~GetExperimentYieldInfoResponse_CompleteReadInfo() override;
  explicit constexpr GetExperimentYieldInfoResponse_CompleteReadInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_CompleteReadInfo(const GetExperimentYieldInfoResponse_CompleteReadInfo& from);
  GetExperimentYieldInfoResponse_CompleteReadInfo(GetExperimentYieldInfoResponse_CompleteReadInfo&& from) noexcept
    : GetExperimentYieldInfoResponse_CompleteReadInfo() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_CompleteReadInfo& operator=(const GetExperimentYieldInfoResponse_CompleteReadInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_CompleteReadInfo& operator=(GetExperimentYieldInfoResponse_CompleteReadInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_CompleteReadInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_CompleteReadInfo* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_CompleteReadInfo*>(
               &_GetExperimentYieldInfoResponse_CompleteReadInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(GetExperimentYieldInfoResponse_CompleteReadInfo& a, GetExperimentYieldInfoResponse_CompleteReadInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_CompleteReadInfo* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_CompleteReadInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_CompleteReadInfo* New() const final {
    return new GetExperimentYieldInfoResponse_CompleteReadInfo();
  }

  GetExperimentYieldInfoResponse_CompleteReadInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_CompleteReadInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_CompleteReadInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_CompleteReadInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_CompleteReadInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_CompleteReadInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPendingChunksFieldNumber = 1,
    kPendingMemoryReadsFieldNumber = 2,
    kPendingMultiDiskReadsFieldNumber = 3,
    kPendingSkippedReadsFieldNumber = 4,
    kPendingForceSkippedReadsFieldNumber = 5,
    kProcessedMemoryReadsFieldNumber = 6,
    kProcessedDiskReadsFieldNumber = 7,
    kProcessedSkippedReadsFieldNumber = 8,
    kProcessedForceSkippedReadsFieldNumber = 9,
    kStoredReadsBytesMemoryFieldNumber = 10,
    kStoredReadsBytesDiskFieldNumber = 11,
    kDiscardedErrorBytesFieldNumber = 12,
    kChannelsWritingToDiskFieldNumber = 13,
    kChannelsWritingToDiskTmpFieldNumber = 14,
    kPendingDiskReadsFieldNumber = 15,
    kStoredReadSupportingBytesMemoryFieldNumber = 16,
  };
  // uint64 pending_chunks = 1;
  void clear_pending_chunks();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_chunks() const;
  void set_pending_chunks(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_chunks() const;
  void _internal_set_pending_chunks(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pending_memory_reads = 2;
  void clear_pending_memory_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_memory_reads() const;
  void set_pending_memory_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_memory_reads() const;
  void _internal_set_pending_memory_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pending_multi_disk_reads = 3;
  void clear_pending_multi_disk_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_multi_disk_reads() const;
  void set_pending_multi_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_multi_disk_reads() const;
  void _internal_set_pending_multi_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pending_skipped_reads = 4;
  void clear_pending_skipped_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_skipped_reads() const;
  void set_pending_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_skipped_reads() const;
  void _internal_set_pending_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pending_force_skipped_reads = 5;
  void clear_pending_force_skipped_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_force_skipped_reads() const;
  void set_pending_force_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_force_skipped_reads() const;
  void _internal_set_pending_force_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 processed_memory_reads = 6;
  void clear_processed_memory_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 processed_memory_reads() const;
  void set_processed_memory_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_processed_memory_reads() const;
  void _internal_set_processed_memory_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 processed_disk_reads = 7;
  void clear_processed_disk_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 processed_disk_reads() const;
  void set_processed_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_processed_disk_reads() const;
  void _internal_set_processed_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 processed_skipped_reads = 8;
  void clear_processed_skipped_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 processed_skipped_reads() const;
  void set_processed_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_processed_skipped_reads() const;
  void _internal_set_processed_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 processed_force_skipped_reads = 9;
  void clear_processed_force_skipped_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 processed_force_skipped_reads() const;
  void set_processed_force_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_processed_force_skipped_reads() const;
  void _internal_set_processed_force_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 stored_reads_bytes_memory = 10;
  void clear_stored_reads_bytes_memory();
  ::PROTOBUF_NAMESPACE_ID::uint64 stored_reads_bytes_memory() const;
  void set_stored_reads_bytes_memory(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_stored_reads_bytes_memory() const;
  void _internal_set_stored_reads_bytes_memory(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 stored_reads_bytes_disk = 11;
  void clear_stored_reads_bytes_disk();
  ::PROTOBUF_NAMESPACE_ID::uint64 stored_reads_bytes_disk() const;
  void set_stored_reads_bytes_disk(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_stored_reads_bytes_disk() const;
  void _internal_set_stored_reads_bytes_disk(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 discarded_error_bytes = 12;
  void clear_discarded_error_bytes();
  ::PROTOBUF_NAMESPACE_ID::uint64 discarded_error_bytes() const;
  void set_discarded_error_bytes(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_discarded_error_bytes() const;
  void _internal_set_discarded_error_bytes(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 channels_writing_to_disk = 13;
  void clear_channels_writing_to_disk();
  ::PROTOBUF_NAMESPACE_ID::uint64 channels_writing_to_disk() const;
  void set_channels_writing_to_disk(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_channels_writing_to_disk() const;
  void _internal_set_channels_writing_to_disk(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 channels_writing_to_disk_tmp = 14;
  void clear_channels_writing_to_disk_tmp();
  ::PROTOBUF_NAMESPACE_ID::uint64 channels_writing_to_disk_tmp() const;
  void set_channels_writing_to_disk_tmp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_channels_writing_to_disk_tmp() const;
  void _internal_set_channels_writing_to_disk_tmp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pending_disk_reads = 15;
  void clear_pending_disk_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_disk_reads() const;
  void set_pending_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_disk_reads() const;
  void _internal_set_pending_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 stored_read_supporting_bytes_memory = 16;
  void clear_stored_read_supporting_bytes_memory();
  ::PROTOBUF_NAMESPACE_ID::uint64 stored_read_supporting_bytes_memory() const;
  void set_stored_read_supporting_bytes_memory(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_stored_read_supporting_bytes_memory() const;
  void _internal_set_stored_read_supporting_bytes_memory(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_chunks_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_memory_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_multi_disk_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_skipped_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_force_skipped_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 processed_memory_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 processed_disk_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 processed_skipped_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 processed_force_skipped_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 stored_reads_bytes_memory_;
  ::PROTOBUF_NAMESPACE_ID::uint64 stored_reads_bytes_disk_;
  ::PROTOBUF_NAMESPACE_ID::uint64 discarded_error_bytes_;
  ::PROTOBUF_NAMESPACE_ID::uint64 channels_writing_to_disk_;
  ::PROTOBUF_NAMESPACE_ID::uint64 channels_writing_to_disk_tmp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_disk_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 stored_read_supporting_bytes_memory_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_AcquisitionInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.AcquisitionInfo) */ {
 public:
  inline GetExperimentYieldInfoResponse_AcquisitionInfo() : GetExperimentYieldInfoResponse_AcquisitionInfo(nullptr) {}
  ~GetExperimentYieldInfoResponse_AcquisitionInfo() override;
  explicit constexpr GetExperimentYieldInfoResponse_AcquisitionInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_AcquisitionInfo(const GetExperimentYieldInfoResponse_AcquisitionInfo& from);
  GetExperimentYieldInfoResponse_AcquisitionInfo(GetExperimentYieldInfoResponse_AcquisitionInfo&& from) noexcept
    : GetExperimentYieldInfoResponse_AcquisitionInfo() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_AcquisitionInfo& operator=(const GetExperimentYieldInfoResponse_AcquisitionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_AcquisitionInfo& operator=(GetExperimentYieldInfoResponse_AcquisitionInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_AcquisitionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_AcquisitionInfo* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_AcquisitionInfo*>(
               &_GetExperimentYieldInfoResponse_AcquisitionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(GetExperimentYieldInfoResponse_AcquisitionInfo& a, GetExperimentYieldInfoResponse_AcquisitionInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_AcquisitionInfo* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_AcquisitionInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_AcquisitionInfo* New() const final {
    return new GetExperimentYieldInfoResponse_AcquisitionInfo();
  }

  GetExperimentYieldInfoResponse_AcquisitionInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_AcquisitionInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_AcquisitionInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_AcquisitionInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_AcquisitionInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.AcquisitionInfo";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_AcquisitionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRawPerChannelFieldNumber = 1,
    kFrameDiscontinuitiesFieldNumber = 2,
  };
  // uint64 raw_per_channel = 1;
  void clear_raw_per_channel();
  ::PROTOBUF_NAMESPACE_ID::uint64 raw_per_channel() const;
  void set_raw_per_channel(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_raw_per_channel() const;
  void _internal_set_raw_per_channel(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 frame_discontinuities = 2;
  void clear_frame_discontinuities();
  ::PROTOBUF_NAMESPACE_ID::uint64 frame_discontinuities() const;
  void set_frame_discontinuities(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_frame_discontinuities() const;
  void _internal_set_frame_discontinuities(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.AcquisitionInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 raw_per_channel_;
  ::PROTOBUF_NAMESPACE_ID::uint64 frame_discontinuities_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_AnalyserInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo) */ {
 public:
  inline GetExperimentYieldInfoResponse_AnalyserInfo() : GetExperimentYieldInfoResponse_AnalyserInfo(nullptr) {}
  ~GetExperimentYieldInfoResponse_AnalyserInfo() override;
  explicit constexpr GetExperimentYieldInfoResponse_AnalyserInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_AnalyserInfo(const GetExperimentYieldInfoResponse_AnalyserInfo& from);
  GetExperimentYieldInfoResponse_AnalyserInfo(GetExperimentYieldInfoResponse_AnalyserInfo&& from) noexcept
    : GetExperimentYieldInfoResponse_AnalyserInfo() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_AnalyserInfo& operator=(const GetExperimentYieldInfoResponse_AnalyserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_AnalyserInfo& operator=(GetExperimentYieldInfoResponse_AnalyserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_AnalyserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_AnalyserInfo* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_AnalyserInfo*>(
               &_GetExperimentYieldInfoResponse_AnalyserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(GetExperimentYieldInfoResponse_AnalyserInfo& a, GetExperimentYieldInfoResponse_AnalyserInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_AnalyserInfo* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_AnalyserInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_AnalyserInfo* New() const final {
    return new GetExperimentYieldInfoResponse_AnalyserInfo();
  }

  GetExperimentYieldInfoResponse_AnalyserInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_AnalyserInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_AnalyserInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_AnalyserInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_AnalyserInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_AnalyserInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRawPerChannelFieldNumber = 1,
    kTotalSelectedRawFieldNumber = 2,
    kTotalSelectedEventsFieldNumber = 3,
    kTotalEventsFieldNumber = 4,
    kTotalReadChunksFieldNumber = 5,
    kCompletedSelectedReadsCountFieldNumber = 6,
    kCompletedUnselectedReadsCountFieldNumber = 7,
  };
  // uint64 raw_per_channel = 1;
  void clear_raw_per_channel();
  ::PROTOBUF_NAMESPACE_ID::uint64 raw_per_channel() const;
  void set_raw_per_channel(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_raw_per_channel() const;
  void _internal_set_raw_per_channel(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 total_selected_raw = 2;
  void clear_total_selected_raw();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_selected_raw() const;
  void set_total_selected_raw(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_selected_raw() const;
  void _internal_set_total_selected_raw(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 total_selected_events = 3;
  void clear_total_selected_events();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_selected_events() const;
  void set_total_selected_events(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_selected_events() const;
  void _internal_set_total_selected_events(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 total_events = 4;
  void clear_total_events();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_events() const;
  void set_total_events(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_events() const;
  void _internal_set_total_events(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 total_read_chunks = 5;
  void clear_total_read_chunks();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_read_chunks() const;
  void set_total_read_chunks(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_read_chunks() const;
  void _internal_set_total_read_chunks(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 completed_selected_reads_count = 6;
  void clear_completed_selected_reads_count();
  ::PROTOBUF_NAMESPACE_ID::uint64 completed_selected_reads_count() const;
  void set_completed_selected_reads_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_completed_selected_reads_count() const;
  void _internal_set_completed_selected_reads_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 completed_unselected_reads_count = 7;
  void clear_completed_unselected_reads_count();
  ::PROTOBUF_NAMESPACE_ID::uint64 completed_unselected_reads_count() const;
  void set_completed_unselected_reads_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_completed_unselected_reads_count() const;
  void _internal_set_completed_unselected_reads_count(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 raw_per_channel_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_selected_raw_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_selected_events_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_events_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_read_chunks_;
  ::PROTOBUF_NAMESPACE_ID::uint64 completed_selected_reads_count_;
  ::PROTOBUF_NAMESPACE_ID::uint64 completed_unselected_reads_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_BulkInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.BulkInfo) */ {
 public:
  inline GetExperimentYieldInfoResponse_BulkInfo() : GetExperimentYieldInfoResponse_BulkInfo(nullptr) {}
  ~GetExperimentYieldInfoResponse_BulkInfo() override;
  explicit constexpr GetExperimentYieldInfoResponse_BulkInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_BulkInfo(const GetExperimentYieldInfoResponse_BulkInfo& from);
  GetExperimentYieldInfoResponse_BulkInfo(GetExperimentYieldInfoResponse_BulkInfo&& from) noexcept
    : GetExperimentYieldInfoResponse_BulkInfo() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_BulkInfo& operator=(const GetExperimentYieldInfoResponse_BulkInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_BulkInfo& operator=(GetExperimentYieldInfoResponse_BulkInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_BulkInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_BulkInfo* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_BulkInfo*>(
               &_GetExperimentYieldInfoResponse_BulkInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(GetExperimentYieldInfoResponse_BulkInfo& a, GetExperimentYieldInfoResponse_BulkInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_BulkInfo* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_BulkInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_BulkInfo* New() const final {
    return new GetExperimentYieldInfoResponse_BulkInfo();
  }

  GetExperimentYieldInfoResponse_BulkInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_BulkInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_BulkInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_BulkInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_BulkInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.BulkInfo";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_BulkInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTotalRawFieldNumber = 1,
    kTotalEventsFieldNumber = 2,
  };
  // uint64 total_raw = 1;
  void clear_total_raw();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_raw() const;
  void set_total_raw(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_raw() const;
  void _internal_set_total_raw(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 total_events = 2;
  void clear_total_events();
  ::PROTOBUF_NAMESPACE_ID::uint64 total_events() const;
  void set_total_events(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_total_events() const;
  void _internal_set_total_events(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.BulkInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_raw_;
  ::PROTOBUF_NAMESPACE_ID::uint64 total_events_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_HdfWriterInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo) */ {
 public:
  inline GetExperimentYieldInfoResponse_HdfWriterInfo() : GetExperimentYieldInfoResponse_HdfWriterInfo(nullptr) {}
  ~GetExperimentYieldInfoResponse_HdfWriterInfo() override;
  explicit constexpr GetExperimentYieldInfoResponse_HdfWriterInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_HdfWriterInfo(const GetExperimentYieldInfoResponse_HdfWriterInfo& from);
  GetExperimentYieldInfoResponse_HdfWriterInfo(GetExperimentYieldInfoResponse_HdfWriterInfo&& from) noexcept
    : GetExperimentYieldInfoResponse_HdfWriterInfo() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_HdfWriterInfo& operator=(const GetExperimentYieldInfoResponse_HdfWriterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_HdfWriterInfo& operator=(GetExperimentYieldInfoResponse_HdfWriterInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_HdfWriterInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_HdfWriterInfo* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_HdfWriterInfo*>(
               &_GetExperimentYieldInfoResponse_HdfWriterInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(GetExperimentYieldInfoResponse_HdfWriterInfo& a, GetExperimentYieldInfoResponse_HdfWriterInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_HdfWriterInfo* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_HdfWriterInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_HdfWriterInfo* New() const final {
    return new GetExperimentYieldInfoResponse_HdfWriterInfo();
  }

  GetExperimentYieldInfoResponse_HdfWriterInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_HdfWriterInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_HdfWriterInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_HdfWriterInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_HdfWriterInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_HdfWriterInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPendingCompressionsFieldNumber = 1,
    kPendingWritesFieldNumber = 2,
    kPendingHdfTasksFieldNumber = 3,
    kCompletedWritesFieldNumber = 4,
    kDatasetBytesDataInFlightFieldNumber = 5,
  };
  // uint64 pending_compressions = 1;
  void clear_pending_compressions();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_compressions() const;
  void set_pending_compressions(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_compressions() const;
  void _internal_set_pending_compressions(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pending_writes = 2;
  void clear_pending_writes();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_writes() const;
  void set_pending_writes(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_writes() const;
  void _internal_set_pending_writes(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pending_hdf_tasks = 3;
  void clear_pending_hdf_tasks();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_hdf_tasks() const;
  void set_pending_hdf_tasks(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_hdf_tasks() const;
  void _internal_set_pending_hdf_tasks(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 completed_writes = 4;
  void clear_completed_writes();
  ::PROTOBUF_NAMESPACE_ID::uint64 completed_writes() const;
  void set_completed_writes(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_completed_writes() const;
  void _internal_set_completed_writes(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 dataset_bytes_data_in_flight = 5;
  void clear_dataset_bytes_data_in_flight();
  ::PROTOBUF_NAMESPACE_ID::uint64 dataset_bytes_data_in_flight() const;
  void set_dataset_bytes_data_in_flight(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dataset_bytes_data_in_flight() const;
  void _internal_set_dataset_bytes_data_in_flight(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_compressions_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_writes_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_hdf_tasks_;
  ::PROTOBUF_NAMESPACE_ID::uint64 completed_writes_;
  ::PROTOBUF_NAMESPACE_ID::uint64 dataset_bytes_data_in_flight_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_BasecallStatistics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics) */ {
 public:
  inline GetExperimentYieldInfoResponse_BasecallStatistics() : GetExperimentYieldInfoResponse_BasecallStatistics(nullptr) {}
  ~GetExperimentYieldInfoResponse_BasecallStatistics() override;
  explicit constexpr GetExperimentYieldInfoResponse_BasecallStatistics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_BasecallStatistics(const GetExperimentYieldInfoResponse_BasecallStatistics& from);
  GetExperimentYieldInfoResponse_BasecallStatistics(GetExperimentYieldInfoResponse_BasecallStatistics&& from) noexcept
    : GetExperimentYieldInfoResponse_BasecallStatistics() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_BasecallStatistics& operator=(const GetExperimentYieldInfoResponse_BasecallStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_BasecallStatistics& operator=(GetExperimentYieldInfoResponse_BasecallStatistics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_BasecallStatistics& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_BasecallStatistics* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_BasecallStatistics*>(
               &_GetExperimentYieldInfoResponse_BasecallStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(GetExperimentYieldInfoResponse_BasecallStatistics& a, GetExperimentYieldInfoResponse_BasecallStatistics& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_BasecallStatistics* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_BasecallStatistics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_BasecallStatistics* New() const final {
    return new GetExperimentYieldInfoResponse_BasecallStatistics();
  }

  GetExperimentYieldInfoResponse_BasecallStatistics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_BasecallStatistics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_BasecallStatistics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_BasecallStatistics& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_BasecallStatistics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_BasecallStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadsInProgressFieldNumber = 1,
    kReadsProcessedFieldNumber = 2,
    kReadsSkippedFieldNumber = 3,
    kReadsForceSkippedFieldNumber = 4,
    kReadsFailedCallingFilteredFieldNumber = 5,
    kReadsFailedCallingFieldNumber = 6,
    kReadsCalledFieldNumber = 7,
    kSamplesCalledFieldNumber = 8,
    kSamplesSkippedFieldNumber = 9,
    kBasesPassedCalledFieldNumber = 10,
    kEventsCalledFieldNumber = 11,
    kBasesFailedCalledFieldNumber = 12,
  };
  // uint64 reads_in_progress = 1;
  void clear_reads_in_progress();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_in_progress() const;
  void set_reads_in_progress(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_in_progress() const;
  void _internal_set_reads_in_progress(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 reads_processed = 2;
  void clear_reads_processed();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_processed() const;
  void set_reads_processed(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_processed() const;
  void _internal_set_reads_processed(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 reads_skipped = 3;
  void clear_reads_skipped();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_skipped() const;
  void set_reads_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_skipped() const;
  void _internal_set_reads_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 reads_force_skipped = 4;
  void clear_reads_force_skipped();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_force_skipped() const;
  void set_reads_force_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_force_skipped() const;
  void _internal_set_reads_force_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 reads_failed_calling_filtered = 5;
  void clear_reads_failed_calling_filtered();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_failed_calling_filtered() const;
  void set_reads_failed_calling_filtered(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_failed_calling_filtered() const;
  void _internal_set_reads_failed_calling_filtered(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 reads_failed_calling = 6;
  void clear_reads_failed_calling();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_failed_calling() const;
  void set_reads_failed_calling(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_failed_calling() const;
  void _internal_set_reads_failed_calling(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 reads_called = 7;
  void clear_reads_called();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_called() const;
  void set_reads_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_called() const;
  void _internal_set_reads_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 samples_called = 8;
  void clear_samples_called();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_called() const;
  void set_samples_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples_called() const;
  void _internal_set_samples_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 samples_skipped = 9;
  void clear_samples_skipped();
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_skipped() const;
  void set_samples_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samples_skipped() const;
  void _internal_set_samples_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 bases_passed_called = 10;
  void clear_bases_passed_called();
  ::PROTOBUF_NAMESPACE_ID::uint64 bases_passed_called() const;
  void set_bases_passed_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bases_passed_called() const;
  void _internal_set_bases_passed_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 events_called = 11;
  void clear_events_called();
  ::PROTOBUF_NAMESPACE_ID::uint64 events_called() const;
  void set_events_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_events_called() const;
  void _internal_set_events_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 bases_failed_called = 12;
  void clear_bases_failed_called();
  ::PROTOBUF_NAMESPACE_ID::uint64 bases_failed_called() const;
  void set_bases_failed_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bases_failed_called() const;
  void _internal_set_bases_failed_called(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_in_progress_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_processed_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_skipped_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_force_skipped_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_failed_calling_filtered_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_failed_calling_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_called_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_called_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samples_skipped_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bases_passed_called_;
  ::PROTOBUF_NAMESPACE_ID::uint64 events_called_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bases_failed_called_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics) */ {
 public:
  inline GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics() : GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics(nullptr) {}
  ~GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics() override;
  explicit constexpr GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics(const GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& from);
  GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics(GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics&& from) noexcept
    : GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& operator=(const GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& operator=(GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics*>(
               &_GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& a, GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* New() const final {
    return new GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics();
  }

  GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadsWrittenFieldNumber = 1,
    kPassedReadsWrittenFieldNumber = 2,
    kFailedReadsWrittenFieldNumber = 3,
    kForceSkippedReadsWrittenFieldNumber = 4,
    kRawBytesWrittenFieldNumber = 5,
    kFastqBytesWrittenFieldNumber = 6,
    kBasecallEventsBytesWrittenFieldNumber = 7,
  };
  // uint64 reads_written = 1;
  void clear_reads_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_written() const;
  void set_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_written() const;
  void _internal_set_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 passed_reads_written = 2;
  void clear_passed_reads_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 passed_reads_written() const;
  void set_passed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_passed_reads_written() const;
  void _internal_set_passed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 failed_reads_written = 3;
  void clear_failed_reads_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 failed_reads_written() const;
  void set_failed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_failed_reads_written() const;
  void _internal_set_failed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 force_skipped_reads_written = 4;
  void clear_force_skipped_reads_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 force_skipped_reads_written() const;
  void set_force_skipped_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_force_skipped_reads_written() const;
  void _internal_set_force_skipped_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 raw_bytes_written = 5;
  void clear_raw_bytes_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 raw_bytes_written() const;
  void set_raw_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_raw_bytes_written() const;
  void _internal_set_raw_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 fastq_bytes_written = 6;
  void clear_fastq_bytes_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 fastq_bytes_written() const;
  void set_fastq_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_fastq_bytes_written() const;
  void _internal_set_fastq_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 basecall_events_bytes_written = 7;
  void clear_basecall_events_bytes_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 basecall_events_bytes_written() const;
  void set_basecall_events_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_basecall_events_bytes_written() const;
  void _internal_set_basecall_events_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 passed_reads_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 failed_reads_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 force_skipped_reads_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 raw_bytes_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 fastq_bytes_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 basecall_events_bytes_written_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_FastqReadWritingStatistics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics) */ {
 public:
  inline GetExperimentYieldInfoResponse_FastqReadWritingStatistics() : GetExperimentYieldInfoResponse_FastqReadWritingStatistics(nullptr) {}
  ~GetExperimentYieldInfoResponse_FastqReadWritingStatistics() override;
  explicit constexpr GetExperimentYieldInfoResponse_FastqReadWritingStatistics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_FastqReadWritingStatistics(const GetExperimentYieldInfoResponse_FastqReadWritingStatistics& from);
  GetExperimentYieldInfoResponse_FastqReadWritingStatistics(GetExperimentYieldInfoResponse_FastqReadWritingStatistics&& from) noexcept
    : GetExperimentYieldInfoResponse_FastqReadWritingStatistics() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_FastqReadWritingStatistics& operator=(const GetExperimentYieldInfoResponse_FastqReadWritingStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_FastqReadWritingStatistics& operator=(GetExperimentYieldInfoResponse_FastqReadWritingStatistics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_FastqReadWritingStatistics& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_FastqReadWritingStatistics* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_FastqReadWritingStatistics*>(
               &_GetExperimentYieldInfoResponse_FastqReadWritingStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(GetExperimentYieldInfoResponse_FastqReadWritingStatistics& a, GetExperimentYieldInfoResponse_FastqReadWritingStatistics& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_FastqReadWritingStatistics* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_FastqReadWritingStatistics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_FastqReadWritingStatistics* New() const final {
    return new GetExperimentYieldInfoResponse_FastqReadWritingStatistics();
  }

  GetExperimentYieldInfoResponse_FastqReadWritingStatistics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_FastqReadWritingStatistics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_FastqReadWritingStatistics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_FastqReadWritingStatistics& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_FastqReadWritingStatistics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_FastqReadWritingStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPassedReadsWrittenFieldNumber = 1,
    kSkippedReadsFieldNumber = 2,
    kForcedSkippedFieldNumber = 3,
    kFailedReadsWrittenFieldNumber = 4,
    kFailedReadsDiscardedFieldNumber = 5,
  };
  // uint64 passed_reads_written = 1;
  void clear_passed_reads_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 passed_reads_written() const;
  void set_passed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_passed_reads_written() const;
  void _internal_set_passed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 skipped_reads = 2;
  void clear_skipped_reads();
  ::PROTOBUF_NAMESPACE_ID::uint64 skipped_reads() const;
  void set_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_skipped_reads() const;
  void _internal_set_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 forced_skipped = 3;
  void clear_forced_skipped();
  ::PROTOBUF_NAMESPACE_ID::uint64 forced_skipped() const;
  void set_forced_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_forced_skipped() const;
  void _internal_set_forced_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 failed_reads_written = 4;
  void clear_failed_reads_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 failed_reads_written() const;
  void set_failed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_failed_reads_written() const;
  void _internal_set_failed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 failed_reads_discarded = 5;
  void clear_failed_reads_discarded();
  ::PROTOBUF_NAMESPACE_ID::uint64 failed_reads_discarded() const;
  void set_failed_reads_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_failed_reads_discarded() const;
  void _internal_set_failed_reads_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 passed_reads_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 skipped_reads_;
  ::PROTOBUF_NAMESPACE_ID::uint64 forced_skipped_;
  ::PROTOBUF_NAMESPACE_ID::uint64 failed_reads_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 failed_reads_discarded_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics) */ {
 public:
  inline GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics() : GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics(nullptr) {}
  ~GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics() override;
  explicit constexpr GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics(const GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& from);
  GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics(GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics&& from) noexcept
    : GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& operator=(const GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& operator=(GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics*>(
               &_GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& a, GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* New() const final {
    return new GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics();
  }

  GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadChunksWrittenFieldNumber = 1,
    kReadChunksDiscardedFieldNumber = 2,
    kReadsWrittenFieldNumber = 3,
    kReadsDiscardedFieldNumber = 4,
  };
  // uint64 read_chunks_written = 1;
  void clear_read_chunks_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 read_chunks_written() const;
  void set_read_chunks_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_read_chunks_written() const;
  void _internal_set_read_chunks_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 read_chunks_discarded = 2;
  void clear_read_chunks_discarded();
  ::PROTOBUF_NAMESPACE_ID::uint64 read_chunks_discarded() const;
  void set_read_chunks_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_read_chunks_discarded() const;
  void _internal_set_read_chunks_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 reads_written = 3;
  void clear_reads_written();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_written() const;
  void set_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_written() const;
  void _internal_set_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 reads_discarded = 4;
  void clear_reads_discarded();
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_discarded() const;
  void set_reads_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_reads_discarded() const;
  void _internal_set_reads_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 read_chunks_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 read_chunks_discarded_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_written_;
  ::PROTOBUF_NAMESPACE_ID::uint64 reads_discarded_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo) */ {
 public:
  inline GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo() : GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo(nullptr) {}
  ~GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo() override;
  explicit constexpr GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo(const GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& from);
  GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo(GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo&& from) noexcept
    : GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& operator=(const GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& operator=(GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo*>(
               &_GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& a, GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* New() const final {
    return new GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo();
  }

  GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilesMovedSuccessfullyFieldNumber = 1,
    kFilesMovedToFallbackFieldNumber = 2,
    kFilesFailedToMoveFieldNumber = 3,
  };
  // uint64 files_moved_successfully = 1;
  void clear_files_moved_successfully();
  ::PROTOBUF_NAMESPACE_ID::uint64 files_moved_successfully() const;
  void set_files_moved_successfully(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_files_moved_successfully() const;
  void _internal_set_files_moved_successfully(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 files_moved_to_fallback = 2;
  void clear_files_moved_to_fallback();
  ::PROTOBUF_NAMESPACE_ID::uint64 files_moved_to_fallback() const;
  void set_files_moved_to_fallback(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_files_moved_to_fallback() const;
  void _internal_set_files_moved_to_fallback(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 files_failed_to_move = 3;
  void clear_files_failed_to_move();
  ::PROTOBUF_NAMESPACE_ID::uint64 files_failed_to_move() const;
  void set_files_failed_to_move(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_files_failed_to_move() const;
  void _internal_set_files_failed_to_move(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 files_moved_successfully_;
  ::PROTOBUF_NAMESPACE_ID::uint64 files_moved_to_fallback_;
  ::PROTOBUF_NAMESPACE_ID::uint64 files_failed_to_move_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse_FileOperationQueueProgress final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress) */ {
 public:
  inline GetExperimentYieldInfoResponse_FileOperationQueueProgress() : GetExperimentYieldInfoResponse_FileOperationQueueProgress(nullptr) {}
  ~GetExperimentYieldInfoResponse_FileOperationQueueProgress() override;
  explicit constexpr GetExperimentYieldInfoResponse_FileOperationQueueProgress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse_FileOperationQueueProgress(const GetExperimentYieldInfoResponse_FileOperationQueueProgress& from);
  GetExperimentYieldInfoResponse_FileOperationQueueProgress(GetExperimentYieldInfoResponse_FileOperationQueueProgress&& from) noexcept
    : GetExperimentYieldInfoResponse_FileOperationQueueProgress() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse_FileOperationQueueProgress& operator=(const GetExperimentYieldInfoResponse_FileOperationQueueProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse_FileOperationQueueProgress& operator=(GetExperimentYieldInfoResponse_FileOperationQueueProgress&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse_FileOperationQueueProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse_FileOperationQueueProgress* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse_FileOperationQueueProgress*>(
               &_GetExperimentYieldInfoResponse_FileOperationQueueProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(GetExperimentYieldInfoResponse_FileOperationQueueProgress& a, GetExperimentYieldInfoResponse_FileOperationQueueProgress& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse_FileOperationQueueProgress* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse_FileOperationQueueProgress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse_FileOperationQueueProgress* New() const final {
    return new GetExperimentYieldInfoResponse_FileOperationQueueProgress();
  }

  GetExperimentYieldInfoResponse_FileOperationQueueProgress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse_FileOperationQueueProgress>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse_FileOperationQueueProgress& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse_FileOperationQueueProgress& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse_FileOperationQueueProgress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress";
  }
  protected:
  explicit GetExperimentYieldInfoResponse_FileOperationQueueProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo FileTypeInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kFast5FieldNumber = 7,
    kFastqFieldNumber = 8,
    kPendingOperationsFieldNumber = 1,
    kCompleteSuccessfulOperationsFieldNumber = 2,
    kCompleteFailedOperationsFieldNumber = 3,
    kBytesToMovePostedFieldNumber = 4,
    kBytesToMoveFailedFieldNumber = 5,
    kBytesToMoveCompletedFieldNumber = 6,
  };
  // .minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo fast5 = 7;
  bool has_fast5() const;
  private:
  bool _internal_has_fast5() const;
  public:
  void clear_fast5();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& fast5() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* release_fast5();
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* mutable_fast5();
  void set_allocated_fast5(::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fast5);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& _internal_fast5() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* _internal_mutable_fast5();
  public:
  void unsafe_arena_set_allocated_fast5(
      ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fast5);
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* unsafe_arena_release_fast5();

  // .minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo fastq = 8;
  bool has_fastq() const;
  private:
  bool _internal_has_fastq() const;
  public:
  void clear_fastq();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& fastq() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* release_fastq();
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* mutable_fastq();
  void set_allocated_fastq(::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fastq);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& _internal_fastq() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* _internal_mutable_fastq();
  public:
  void unsafe_arena_set_allocated_fastq(
      ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fastq);
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* unsafe_arena_release_fastq();

  // uint64 pending_operations = 1;
  void clear_pending_operations();
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_operations() const;
  void set_pending_operations(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pending_operations() const;
  void _internal_set_pending_operations(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 complete_successful_operations = 2;
  void clear_complete_successful_operations();
  ::PROTOBUF_NAMESPACE_ID::uint64 complete_successful_operations() const;
  void set_complete_successful_operations(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_complete_successful_operations() const;
  void _internal_set_complete_successful_operations(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 complete_failed_operations = 3;
  void clear_complete_failed_operations();
  ::PROTOBUF_NAMESPACE_ID::uint64 complete_failed_operations() const;
  void set_complete_failed_operations(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_complete_failed_operations() const;
  void _internal_set_complete_failed_operations(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 bytes_to_move_posted = 4;
  void clear_bytes_to_move_posted();
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_to_move_posted() const;
  void set_bytes_to_move_posted(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bytes_to_move_posted() const;
  void _internal_set_bytes_to_move_posted(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 bytes_to_move_failed = 5;
  void clear_bytes_to_move_failed();
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_to_move_failed() const;
  void set_bytes_to_move_failed(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bytes_to_move_failed() const;
  void _internal_set_bytes_to_move_failed(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 bytes_to_move_completed = 6;
  void clear_bytes_to_move_completed();
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_to_move_completed() const;
  void set_bytes_to_move_completed(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bytes_to_move_completed() const;
  void _internal_set_bytes_to_move_completed(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fast5_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fastq_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pending_operations_;
  ::PROTOBUF_NAMESPACE_ID::uint64 complete_successful_operations_;
  ::PROTOBUF_NAMESPACE_ID::uint64 complete_failed_operations_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_to_move_posted_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_to_move_failed_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_to_move_completed_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// -------------------------------------------------------------------

class GetExperimentYieldInfoResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:minknow_api.data.GetExperimentYieldInfoResponse) */ {
 public:
  inline GetExperimentYieldInfoResponse() : GetExperimentYieldInfoResponse(nullptr) {}
  ~GetExperimentYieldInfoResponse() override;
  explicit constexpr GetExperimentYieldInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExperimentYieldInfoResponse(const GetExperimentYieldInfoResponse& from);
  GetExperimentYieldInfoResponse(GetExperimentYieldInfoResponse&& from) noexcept
    : GetExperimentYieldInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetExperimentYieldInfoResponse& operator=(const GetExperimentYieldInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExperimentYieldInfoResponse& operator=(GetExperimentYieldInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExperimentYieldInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExperimentYieldInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetExperimentYieldInfoResponse*>(
               &_GetExperimentYieldInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(GetExperimentYieldInfoResponse& a, GetExperimentYieldInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExperimentYieldInfoResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExperimentYieldInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetExperimentYieldInfoResponse* New() const final {
    return new GetExperimentYieldInfoResponse();
  }

  GetExperimentYieldInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetExperimentYieldInfoResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExperimentYieldInfoResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetExperimentYieldInfoResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExperimentYieldInfoResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "minknow_api.data.GetExperimentYieldInfoResponse";
  }
  protected:
  explicit GetExperimentYieldInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetExperimentYieldInfoResponse_CompleteReadInfo CompleteReadInfo;
  typedef GetExperimentYieldInfoResponse_AcquisitionInfo AcquisitionInfo;
  typedef GetExperimentYieldInfoResponse_AnalyserInfo AnalyserInfo;
  typedef GetExperimentYieldInfoResponse_BulkInfo BulkInfo;
  typedef GetExperimentYieldInfoResponse_HdfWriterInfo HdfWriterInfo;
  typedef GetExperimentYieldInfoResponse_BasecallStatistics BasecallStatistics;
  typedef GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics HdfMultiReadWritingStatistics;
  typedef GetExperimentYieldInfoResponse_FastqReadWritingStatistics FastqReadWritingStatistics;
  typedef GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics ProtobufReadWritingStatistics;
  typedef GetExperimentYieldInfoResponse_FileOperationQueueProgress FileOperationQueueProgress;

  // accessors -------------------------------------------------------

  enum : int {
    kCompleteReadInfoFieldNumber = 1,
    kAcquisitionInfoFieldNumber = 2,
    kAnalyserInfoFieldNumber = 3,
    kBulkInfoFieldNumber = 4,
    kHdfWriterInfoFieldNumber = 5,
    kBasecallerStatisticsFieldNumber = 6,
    kHdfMultiReadWritingStatisiticsFieldNumber = 7,
    kFastqReadWritingStatisticsFieldNumber = 8,
    kProtobufReadWritingStatisticsFieldNumber = 9,
    kFileOperationQueueProgressFieldNumber = 10,
  };
  // .minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo complete_read_info = 1;
  bool has_complete_read_info() const;
  private:
  bool _internal_has_complete_read_info() const;
  public:
  void clear_complete_read_info();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo& complete_read_info() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* release_complete_read_info();
  ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* mutable_complete_read_info();
  void set_allocated_complete_read_info(::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* complete_read_info);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo& _internal_complete_read_info() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* _internal_mutable_complete_read_info();
  public:
  void unsafe_arena_set_allocated_complete_read_info(
      ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* complete_read_info);
  ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* unsafe_arena_release_complete_read_info();

  // .minknow_api.data.GetExperimentYieldInfoResponse.AcquisitionInfo acquisition_info = 2;
  bool has_acquisition_info() const;
  private:
  bool _internal_has_acquisition_info() const;
  public:
  void clear_acquisition_info();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo& acquisition_info() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* release_acquisition_info();
  ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* mutable_acquisition_info();
  void set_allocated_acquisition_info(::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* acquisition_info);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo& _internal_acquisition_info() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* _internal_mutable_acquisition_info();
  public:
  void unsafe_arena_set_allocated_acquisition_info(
      ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* acquisition_info);
  ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* unsafe_arena_release_acquisition_info();

  // .minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo analyser_info = 3;
  bool has_analyser_info() const;
  private:
  bool _internal_has_analyser_info() const;
  public:
  void clear_analyser_info();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo& analyser_info() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* release_analyser_info();
  ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* mutable_analyser_info();
  void set_allocated_analyser_info(::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* analyser_info);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo& _internal_analyser_info() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* _internal_mutable_analyser_info();
  public:
  void unsafe_arena_set_allocated_analyser_info(
      ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* analyser_info);
  ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* unsafe_arena_release_analyser_info();

  // .minknow_api.data.GetExperimentYieldInfoResponse.BulkInfo bulk_info = 4;
  bool has_bulk_info() const;
  private:
  bool _internal_has_bulk_info() const;
  public:
  void clear_bulk_info();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo& bulk_info() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* release_bulk_info();
  ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* mutable_bulk_info();
  void set_allocated_bulk_info(::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* bulk_info);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo& _internal_bulk_info() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* _internal_mutable_bulk_info();
  public:
  void unsafe_arena_set_allocated_bulk_info(
      ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* bulk_info);
  ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* unsafe_arena_release_bulk_info();

  // .minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo hdf_writer_info = 5;
  bool has_hdf_writer_info() const;
  private:
  bool _internal_has_hdf_writer_info() const;
  public:
  void clear_hdf_writer_info();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo& hdf_writer_info() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* release_hdf_writer_info();
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* mutable_hdf_writer_info();
  void set_allocated_hdf_writer_info(::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* hdf_writer_info);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo& _internal_hdf_writer_info() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* _internal_mutable_hdf_writer_info();
  public:
  void unsafe_arena_set_allocated_hdf_writer_info(
      ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* hdf_writer_info);
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* unsafe_arena_release_hdf_writer_info();

  // .minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics basecaller_statistics = 6;
  bool has_basecaller_statistics() const;
  private:
  bool _internal_has_basecaller_statistics() const;
  public:
  void clear_basecaller_statistics();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics& basecaller_statistics() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* release_basecaller_statistics();
  ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* mutable_basecaller_statistics();
  void set_allocated_basecaller_statistics(::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* basecaller_statistics);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics& _internal_basecaller_statistics() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* _internal_mutable_basecaller_statistics();
  public:
  void unsafe_arena_set_allocated_basecaller_statistics(
      ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* basecaller_statistics);
  ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* unsafe_arena_release_basecaller_statistics();

  // .minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics hdf_multi_read_writing_statisitics = 7;
  bool has_hdf_multi_read_writing_statisitics() const;
  private:
  bool _internal_has_hdf_multi_read_writing_statisitics() const;
  public:
  void clear_hdf_multi_read_writing_statisitics();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& hdf_multi_read_writing_statisitics() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* release_hdf_multi_read_writing_statisitics();
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* mutable_hdf_multi_read_writing_statisitics();
  void set_allocated_hdf_multi_read_writing_statisitics(::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* hdf_multi_read_writing_statisitics);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& _internal_hdf_multi_read_writing_statisitics() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* _internal_mutable_hdf_multi_read_writing_statisitics();
  public:
  void unsafe_arena_set_allocated_hdf_multi_read_writing_statisitics(
      ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* hdf_multi_read_writing_statisitics);
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* unsafe_arena_release_hdf_multi_read_writing_statisitics();

  // .minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics fastq_read_writing_statistics = 8;
  bool has_fastq_read_writing_statistics() const;
  private:
  bool _internal_has_fastq_read_writing_statistics() const;
  public:
  void clear_fastq_read_writing_statistics();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics& fastq_read_writing_statistics() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* release_fastq_read_writing_statistics();
  ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* mutable_fastq_read_writing_statistics();
  void set_allocated_fastq_read_writing_statistics(::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* fastq_read_writing_statistics);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics& _internal_fastq_read_writing_statistics() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* _internal_mutable_fastq_read_writing_statistics();
  public:
  void unsafe_arena_set_allocated_fastq_read_writing_statistics(
      ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* fastq_read_writing_statistics);
  ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* unsafe_arena_release_fastq_read_writing_statistics();

  // .minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics protobuf_read_writing_statistics = 9;
  bool has_protobuf_read_writing_statistics() const;
  private:
  bool _internal_has_protobuf_read_writing_statistics() const;
  public:
  void clear_protobuf_read_writing_statistics();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& protobuf_read_writing_statistics() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* release_protobuf_read_writing_statistics();
  ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* mutable_protobuf_read_writing_statistics();
  void set_allocated_protobuf_read_writing_statistics(::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* protobuf_read_writing_statistics);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& _internal_protobuf_read_writing_statistics() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* _internal_mutable_protobuf_read_writing_statistics();
  public:
  void unsafe_arena_set_allocated_protobuf_read_writing_statistics(
      ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* protobuf_read_writing_statistics);
  ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* unsafe_arena_release_protobuf_read_writing_statistics();

  // .minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress file_operation_queue_progress = 10;
  bool has_file_operation_queue_progress() const;
  private:
  bool _internal_has_file_operation_queue_progress() const;
  public:
  void clear_file_operation_queue_progress();
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress& file_operation_queue_progress() const;
  PROTOBUF_MUST_USE_RESULT ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* release_file_operation_queue_progress();
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* mutable_file_operation_queue_progress();
  void set_allocated_file_operation_queue_progress(::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* file_operation_queue_progress);
  private:
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress& _internal_file_operation_queue_progress() const;
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* _internal_mutable_file_operation_queue_progress();
  public:
  void unsafe_arena_set_allocated_file_operation_queue_progress(
      ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* file_operation_queue_progress);
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* unsafe_arena_release_file_operation_queue_progress();

  // @@protoc_insertion_point(class_scope:minknow_api.data.GetExperimentYieldInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* complete_read_info_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* acquisition_info_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* analyser_info_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* bulk_info_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* hdf_writer_info_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* basecaller_statistics_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* hdf_multi_read_writing_statisitics_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* fastq_read_writing_statistics_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* protobuf_read_writing_statistics_;
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* file_operation_queue_progress_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_minknow_5fapi_2fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetChannelStatesRequest

// uint32 first_channel = 1 [(.minknow_api.rpc_required) = true];
inline void GetChannelStatesRequest::clear_first_channel() {
  first_channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetChannelStatesRequest::_internal_first_channel() const {
  return first_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetChannelStatesRequest::first_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesRequest.first_channel)
  return _internal_first_channel();
}
inline void GetChannelStatesRequest::_internal_set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  first_channel_ = value;
}
inline void GetChannelStatesRequest::set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetChannelStatesRequest.first_channel)
}

// uint32 last_channel = 2 [(.minknow_api.rpc_required) = true];
inline void GetChannelStatesRequest::clear_last_channel() {
  last_channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetChannelStatesRequest::_internal_last_channel() const {
  return last_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetChannelStatesRequest::last_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesRequest.last_channel)
  return _internal_last_channel();
}
inline void GetChannelStatesRequest::_internal_set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_channel_ = value;
}
inline void GetChannelStatesRequest::set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetChannelStatesRequest.last_channel)
}

// .google.protobuf.BoolValue use_channel_states_ids = 3;
inline bool GetChannelStatesRequest::_internal_has_use_channel_states_ids() const {
  return this != internal_default_instance() && use_channel_states_ids_ != nullptr;
}
inline bool GetChannelStatesRequest::has_use_channel_states_ids() const {
  return _internal_has_use_channel_states_ids();
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& GetChannelStatesRequest::_internal_use_channel_states_ids() const {
  const ::PROTOBUF_NAMESPACE_ID::BoolValue* p = use_channel_states_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::BoolValue&>(
      ::PROTOBUF_NAMESPACE_ID::_BoolValue_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::BoolValue& GetChannelStatesRequest::use_channel_states_ids() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesRequest.use_channel_states_ids)
  return _internal_use_channel_states_ids();
}
inline void GetChannelStatesRequest::unsafe_arena_set_allocated_use_channel_states_ids(
    ::PROTOBUF_NAMESPACE_ID::BoolValue* use_channel_states_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(use_channel_states_ids_);
  }
  use_channel_states_ids_ = use_channel_states_ids;
  if (use_channel_states_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetChannelStatesRequest.use_channel_states_ids)
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* GetChannelStatesRequest::release_use_channel_states_ids() {
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = use_channel_states_ids_;
  use_channel_states_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* GetChannelStatesRequest::unsafe_arena_release_use_channel_states_ids() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetChannelStatesRequest.use_channel_states_ids)
  
  ::PROTOBUF_NAMESPACE_ID::BoolValue* temp = use_channel_states_ids_;
  use_channel_states_ids_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* GetChannelStatesRequest::_internal_mutable_use_channel_states_ids() {
  
  if (use_channel_states_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::BoolValue>(GetArenaForAllocation());
    use_channel_states_ids_ = p;
  }
  return use_channel_states_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::BoolValue* GetChannelStatesRequest::mutable_use_channel_states_ids() {
  ::PROTOBUF_NAMESPACE_ID::BoolValue* _msg = _internal_mutable_use_channel_states_ids();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetChannelStatesRequest.use_channel_states_ids)
  return _msg;
}
inline void GetChannelStatesRequest::set_allocated_use_channel_states_ids(::PROTOBUF_NAMESPACE_ID::BoolValue* use_channel_states_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(use_channel_states_ids_);
  }
  if (use_channel_states_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(use_channel_states_ids));
    if (message_arena != submessage_arena) {
      use_channel_states_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, use_channel_states_ids, submessage_arena);
    }
    
  } else {
    
  }
  use_channel_states_ids_ = use_channel_states_ids;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetChannelStatesRequest.use_channel_states_ids)
}

// bool wait_for_processing = 4;
inline void GetChannelStatesRequest::clear_wait_for_processing() {
  wait_for_processing_ = false;
}
inline bool GetChannelStatesRequest::_internal_wait_for_processing() const {
  return wait_for_processing_;
}
inline bool GetChannelStatesRequest::wait_for_processing() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesRequest.wait_for_processing)
  return _internal_wait_for_processing();
}
inline void GetChannelStatesRequest::_internal_set_wait_for_processing(bool value) {
  
  wait_for_processing_ = value;
}
inline void GetChannelStatesRequest::set_wait_for_processing(bool value) {
  _internal_set_wait_for_processing(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetChannelStatesRequest.wait_for_processing)
}

// .google.protobuf.Duration heartbeat = 5;
inline bool GetChannelStatesRequest::_internal_has_heartbeat() const {
  return this != internal_default_instance() && heartbeat_ != nullptr;
}
inline bool GetChannelStatesRequest::has_heartbeat() const {
  return _internal_has_heartbeat();
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& GetChannelStatesRequest::_internal_heartbeat() const {
  const ::PROTOBUF_NAMESPACE_ID::Duration* p = heartbeat_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Duration&>(
      ::PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& GetChannelStatesRequest::heartbeat() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesRequest.heartbeat)
  return _internal_heartbeat();
}
inline void GetChannelStatesRequest::unsafe_arena_set_allocated_heartbeat(
    ::PROTOBUF_NAMESPACE_ID::Duration* heartbeat) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(heartbeat_);
  }
  heartbeat_ = heartbeat;
  if (heartbeat) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetChannelStatesRequest.heartbeat)
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* GetChannelStatesRequest::release_heartbeat() {
  
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = heartbeat_;
  heartbeat_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* GetChannelStatesRequest::unsafe_arena_release_heartbeat() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetChannelStatesRequest.heartbeat)
  
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = heartbeat_;
  heartbeat_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* GetChannelStatesRequest::_internal_mutable_heartbeat() {
  
  if (heartbeat_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Duration>(GetArenaForAllocation());
    heartbeat_ = p;
  }
  return heartbeat_;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* GetChannelStatesRequest::mutable_heartbeat() {
  ::PROTOBUF_NAMESPACE_ID::Duration* _msg = _internal_mutable_heartbeat();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetChannelStatesRequest.heartbeat)
  return _msg;
}
inline void GetChannelStatesRequest::set_allocated_heartbeat(::PROTOBUF_NAMESPACE_ID::Duration* heartbeat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(heartbeat_);
  }
  if (heartbeat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(heartbeat));
    if (message_arena != submessage_arena) {
      heartbeat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heartbeat, submessage_arena);
    }
    
  } else {
    
  }
  heartbeat_ = heartbeat;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetChannelStatesRequest.heartbeat)
}

// -------------------------------------------------------------------

// GetChannelStatesResponse_ChannelStateData

// uint32 channel = 1;
inline void GetChannelStatesResponse_ChannelStateData::clear_channel() {
  channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetChannelStatesResponse_ChannelStateData::_internal_channel() const {
  return channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetChannelStatesResponse_ChannelStateData::channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesResponse.ChannelStateData.channel)
  return _internal_channel();
}
inline void GetChannelStatesResponse_ChannelStateData::_internal_set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_ = value;
}
inline void GetChannelStatesResponse_ChannelStateData::set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetChannelStatesResponse.ChannelStateData.channel)
}

// uint32 state_id = 2;
inline bool GetChannelStatesResponse_ChannelStateData::_internal_has_state_id() const {
  return state_case() == kStateId;
}
inline bool GetChannelStatesResponse_ChannelStateData::has_state_id() const {
  return _internal_has_state_id();
}
inline void GetChannelStatesResponse_ChannelStateData::set_has_state_id() {
  _oneof_case_[0] = kStateId;
}
inline void GetChannelStatesResponse_ChannelStateData::clear_state_id() {
  if (_internal_has_state_id()) {
    state_.state_id_ = 0u;
    clear_has_state();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetChannelStatesResponse_ChannelStateData::_internal_state_id() const {
  if (_internal_has_state_id()) {
    return state_.state_id_;
  }
  return 0u;
}
inline void GetChannelStatesResponse_ChannelStateData::_internal_set_state_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_state_id()) {
    clear_state();
    set_has_state_id();
  }
  state_.state_id_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetChannelStatesResponse_ChannelStateData::state_id() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesResponse.ChannelStateData.state_id)
  return _internal_state_id();
}
inline void GetChannelStatesResponse_ChannelStateData::set_state_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state_id(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetChannelStatesResponse.ChannelStateData.state_id)
}

// string state_name = 3;
inline bool GetChannelStatesResponse_ChannelStateData::_internal_has_state_name() const {
  return state_case() == kStateName;
}
inline bool GetChannelStatesResponse_ChannelStateData::has_state_name() const {
  return _internal_has_state_name();
}
inline void GetChannelStatesResponse_ChannelStateData::set_has_state_name() {
  _oneof_case_[0] = kStateName;
}
inline void GetChannelStatesResponse_ChannelStateData::clear_state_name() {
  if (_internal_has_state_name()) {
    state_.state_name_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_state();
  }
}
inline const std::string& GetChannelStatesResponse_ChannelStateData::state_name() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesResponse.ChannelStateData.state_name)
  return _internal_state_name();
}
template <typename ArgT0, typename... ArgT>
inline void GetChannelStatesResponse_ChannelStateData::set_state_name(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_state_name()) {
    clear_state();
    set_has_state_name();
    state_.state_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  state_.state_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:minknow_api.data.GetChannelStatesResponse.ChannelStateData.state_name)
}
inline std::string* GetChannelStatesResponse_ChannelStateData::mutable_state_name() {
  std::string* _s = _internal_mutable_state_name();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetChannelStatesResponse.ChannelStateData.state_name)
  return _s;
}
inline const std::string& GetChannelStatesResponse_ChannelStateData::_internal_state_name() const {
  if (_internal_has_state_name()) {
    return state_.state_name_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void GetChannelStatesResponse_ChannelStateData::_internal_set_state_name(const std::string& value) {
  if (!_internal_has_state_name()) {
    clear_state();
    set_has_state_name();
    state_.state_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  state_.state_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetChannelStatesResponse_ChannelStateData::_internal_mutable_state_name() {
  if (!_internal_has_state_name()) {
    clear_state();
    set_has_state_name();
    state_.state_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return state_.state_name_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetChannelStatesResponse_ChannelStateData::release_state_name() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetChannelStatesResponse.ChannelStateData.state_name)
  if (_internal_has_state_name()) {
    clear_has_state();
    return state_.state_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void GetChannelStatesResponse_ChannelStateData::set_allocated_state_name(std::string* state_name) {
  if (has_state()) {
    clear_state();
  }
  if (state_name != nullptr) {
    set_has_state_name();
    state_.state_name_.UnsafeSetDefault(state_name);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(state_name);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetChannelStatesResponse.ChannelStateData.state_name)
}

// uint64 acquisition_raw_index = 4;
inline void GetChannelStatesResponse_ChannelStateData::clear_acquisition_raw_index() {
  acquisition_raw_index_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetChannelStatesResponse_ChannelStateData::_internal_acquisition_raw_index() const {
  return acquisition_raw_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetChannelStatesResponse_ChannelStateData::acquisition_raw_index() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesResponse.ChannelStateData.acquisition_raw_index)
  return _internal_acquisition_raw_index();
}
inline void GetChannelStatesResponse_ChannelStateData::_internal_set_acquisition_raw_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  acquisition_raw_index_ = value;
}
inline void GetChannelStatesResponse_ChannelStateData::set_acquisition_raw_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_acquisition_raw_index(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetChannelStatesResponse.ChannelStateData.acquisition_raw_index)
}

// uint64 analysis_raw_index = 5;
inline void GetChannelStatesResponse_ChannelStateData::clear_analysis_raw_index() {
  analysis_raw_index_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetChannelStatesResponse_ChannelStateData::_internal_analysis_raw_index() const {
  return analysis_raw_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetChannelStatesResponse_ChannelStateData::analysis_raw_index() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesResponse.ChannelStateData.analysis_raw_index)
  return _internal_analysis_raw_index();
}
inline void GetChannelStatesResponse_ChannelStateData::_internal_set_analysis_raw_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  analysis_raw_index_ = value;
}
inline void GetChannelStatesResponse_ChannelStateData::set_analysis_raw_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_analysis_raw_index(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetChannelStatesResponse.ChannelStateData.analysis_raw_index)
}

// uint64 trigger_time = 7;
inline void GetChannelStatesResponse_ChannelStateData::clear_trigger_time() {
  trigger_time_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetChannelStatesResponse_ChannelStateData::_internal_trigger_time() const {
  return trigger_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetChannelStatesResponse_ChannelStateData::trigger_time() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesResponse.ChannelStateData.trigger_time)
  return _internal_trigger_time();
}
inline void GetChannelStatesResponse_ChannelStateData::_internal_set_trigger_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  trigger_time_ = value;
}
inline void GetChannelStatesResponse_ChannelStateData::set_trigger_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_trigger_time(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetChannelStatesResponse.ChannelStateData.trigger_time)
}

// .minknow_api.device.ReturnedChannelConfiguration config = 6;
inline bool GetChannelStatesResponse_ChannelStateData::_internal_has_config() const {
  return this != internal_default_instance() && config_ != nullptr;
}
inline bool GetChannelStatesResponse_ChannelStateData::has_config() const {
  return _internal_has_config();
}
inline const ::minknow_api::device::ReturnedChannelConfiguration& GetChannelStatesResponse_ChannelStateData::_internal_config() const {
  const ::minknow_api::device::ReturnedChannelConfiguration* p = config_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::device::ReturnedChannelConfiguration&>(
      ::minknow_api::device::_ReturnedChannelConfiguration_default_instance_);
}
inline const ::minknow_api::device::ReturnedChannelConfiguration& GetChannelStatesResponse_ChannelStateData::config() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesResponse.ChannelStateData.config)
  return _internal_config();
}
inline void GetChannelStatesResponse_ChannelStateData::unsafe_arena_set_allocated_config(
    ::minknow_api::device::ReturnedChannelConfiguration* config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetChannelStatesResponse.ChannelStateData.config)
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetChannelStatesResponse_ChannelStateData::release_config() {
  
  ::minknow_api::device::ReturnedChannelConfiguration* temp = config_;
  config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetChannelStatesResponse_ChannelStateData::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetChannelStatesResponse.ChannelStateData.config)
  
  ::minknow_api::device::ReturnedChannelConfiguration* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetChannelStatesResponse_ChannelStateData::_internal_mutable_config() {
  
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::device::ReturnedChannelConfiguration>(GetArenaForAllocation());
    config_ = p;
  }
  return config_;
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetChannelStatesResponse_ChannelStateData::mutable_config() {
  ::minknow_api::device::ReturnedChannelConfiguration* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetChannelStatesResponse.ChannelStateData.config)
  return _msg;
}
inline void GetChannelStatesResponse_ChannelStateData::set_allocated_config(::minknow_api::device::ReturnedChannelConfiguration* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config));
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetChannelStatesResponse.ChannelStateData.config)
}

inline bool GetChannelStatesResponse_ChannelStateData::has_state() const {
  return state_case() != STATE_NOT_SET;
}
inline void GetChannelStatesResponse_ChannelStateData::clear_has_state() {
  _oneof_case_[0] = STATE_NOT_SET;
}
inline GetChannelStatesResponse_ChannelStateData::StateCase GetChannelStatesResponse_ChannelStateData::state_case() const {
  return GetChannelStatesResponse_ChannelStateData::StateCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetChannelStatesResponse

// repeated .minknow_api.data.GetChannelStatesResponse.ChannelStateData channel_states = 1;
inline int GetChannelStatesResponse::_internal_channel_states_size() const {
  return channel_states_.size();
}
inline int GetChannelStatesResponse::channel_states_size() const {
  return _internal_channel_states_size();
}
inline void GetChannelStatesResponse::clear_channel_states() {
  channel_states_.Clear();
}
inline ::minknow_api::data::GetChannelStatesResponse_ChannelStateData* GetChannelStatesResponse::mutable_channel_states(int index) {
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetChannelStatesResponse.channel_states)
  return channel_states_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetChannelStatesResponse_ChannelStateData >*
GetChannelStatesResponse::mutable_channel_states() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetChannelStatesResponse.channel_states)
  return &channel_states_;
}
inline const ::minknow_api::data::GetChannelStatesResponse_ChannelStateData& GetChannelStatesResponse::_internal_channel_states(int index) const {
  return channel_states_.Get(index);
}
inline const ::minknow_api::data::GetChannelStatesResponse_ChannelStateData& GetChannelStatesResponse::channel_states(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetChannelStatesResponse.channel_states)
  return _internal_channel_states(index);
}
inline ::minknow_api::data::GetChannelStatesResponse_ChannelStateData* GetChannelStatesResponse::_internal_add_channel_states() {
  return channel_states_.Add();
}
inline ::minknow_api::data::GetChannelStatesResponse_ChannelStateData* GetChannelStatesResponse::add_channel_states() {
  ::minknow_api::data::GetChannelStatesResponse_ChannelStateData* _add = _internal_add_channel_states();
  // @@protoc_insertion_point(field_add:minknow_api.data.GetChannelStatesResponse.channel_states)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetChannelStatesResponse_ChannelStateData >&
GetChannelStatesResponse::channel_states() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetChannelStatesResponse.channel_states)
  return channel_states_;
}

// -------------------------------------------------------------------

// GetDataTypesRequest

// -------------------------------------------------------------------

// GetDataTypesResponse_DataType

// .minknow_api.data.GetDataTypesResponse.DataType.Type type = 1;
inline void GetDataTypesResponse_DataType::clear_type() {
  type_ = 0;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType_Type GetDataTypesResponse_DataType::_internal_type() const {
  return static_cast< ::minknow_api::data::GetDataTypesResponse_DataType_Type >(type_);
}
inline ::minknow_api::data::GetDataTypesResponse_DataType_Type GetDataTypesResponse_DataType::type() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetDataTypesResponse.DataType.type)
  return _internal_type();
}
inline void GetDataTypesResponse_DataType::_internal_set_type(::minknow_api::data::GetDataTypesResponse_DataType_Type value) {
  
  type_ = value;
}
inline void GetDataTypesResponse_DataType::set_type(::minknow_api::data::GetDataTypesResponse_DataType_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetDataTypesResponse.DataType.type)
}

// bool big_endian = 2;
inline void GetDataTypesResponse_DataType::clear_big_endian() {
  big_endian_ = false;
}
inline bool GetDataTypesResponse_DataType::_internal_big_endian() const {
  return big_endian_;
}
inline bool GetDataTypesResponse_DataType::big_endian() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetDataTypesResponse.DataType.big_endian)
  return _internal_big_endian();
}
inline void GetDataTypesResponse_DataType::_internal_set_big_endian(bool value) {
  
  big_endian_ = value;
}
inline void GetDataTypesResponse_DataType::set_big_endian(bool value) {
  _internal_set_big_endian(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetDataTypesResponse.DataType.big_endian)
}

// uint32 size = 3;
inline void GetDataTypesResponse_DataType::clear_size() {
  size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetDataTypesResponse_DataType::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetDataTypesResponse_DataType::size() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetDataTypesResponse.DataType.size)
  return _internal_size();
}
inline void GetDataTypesResponse_DataType::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  size_ = value;
}
inline void GetDataTypesResponse_DataType::set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetDataTypesResponse.DataType.size)
}

// -------------------------------------------------------------------

// GetDataTypesResponse

// .minknow_api.data.GetDataTypesResponse.DataType uncalibrated_signal = 1;
inline bool GetDataTypesResponse::_internal_has_uncalibrated_signal() const {
  return this != internal_default_instance() && uncalibrated_signal_ != nullptr;
}
inline bool GetDataTypesResponse::has_uncalibrated_signal() const {
  return _internal_has_uncalibrated_signal();
}
inline void GetDataTypesResponse::clear_uncalibrated_signal() {
  if (GetArenaForAllocation() == nullptr && uncalibrated_signal_ != nullptr) {
    delete uncalibrated_signal_;
  }
  uncalibrated_signal_ = nullptr;
}
inline const ::minknow_api::data::GetDataTypesResponse_DataType& GetDataTypesResponse::_internal_uncalibrated_signal() const {
  const ::minknow_api::data::GetDataTypesResponse_DataType* p = uncalibrated_signal_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetDataTypesResponse_DataType&>(
      ::minknow_api::data::_GetDataTypesResponse_DataType_default_instance_);
}
inline const ::minknow_api::data::GetDataTypesResponse_DataType& GetDataTypesResponse::uncalibrated_signal() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetDataTypesResponse.uncalibrated_signal)
  return _internal_uncalibrated_signal();
}
inline void GetDataTypesResponse::unsafe_arena_set_allocated_uncalibrated_signal(
    ::minknow_api::data::GetDataTypesResponse_DataType* uncalibrated_signal) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(uncalibrated_signal_);
  }
  uncalibrated_signal_ = uncalibrated_signal;
  if (uncalibrated_signal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetDataTypesResponse.uncalibrated_signal)
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::release_uncalibrated_signal() {
  
  ::minknow_api::data::GetDataTypesResponse_DataType* temp = uncalibrated_signal_;
  uncalibrated_signal_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::unsafe_arena_release_uncalibrated_signal() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetDataTypesResponse.uncalibrated_signal)
  
  ::minknow_api::data::GetDataTypesResponse_DataType* temp = uncalibrated_signal_;
  uncalibrated_signal_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::_internal_mutable_uncalibrated_signal() {
  
  if (uncalibrated_signal_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetDataTypesResponse_DataType>(GetArenaForAllocation());
    uncalibrated_signal_ = p;
  }
  return uncalibrated_signal_;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::mutable_uncalibrated_signal() {
  ::minknow_api::data::GetDataTypesResponse_DataType* _msg = _internal_mutable_uncalibrated_signal();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetDataTypesResponse.uncalibrated_signal)
  return _msg;
}
inline void GetDataTypesResponse::set_allocated_uncalibrated_signal(::minknow_api::data::GetDataTypesResponse_DataType* uncalibrated_signal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete uncalibrated_signal_;
  }
  if (uncalibrated_signal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetDataTypesResponse_DataType>::GetOwningArena(uncalibrated_signal);
    if (message_arena != submessage_arena) {
      uncalibrated_signal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, uncalibrated_signal, submessage_arena);
    }
    
  } else {
    
  }
  uncalibrated_signal_ = uncalibrated_signal;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetDataTypesResponse.uncalibrated_signal)
}

// .minknow_api.data.GetDataTypesResponse.DataType calibrated_signal = 2;
inline bool GetDataTypesResponse::_internal_has_calibrated_signal() const {
  return this != internal_default_instance() && calibrated_signal_ != nullptr;
}
inline bool GetDataTypesResponse::has_calibrated_signal() const {
  return _internal_has_calibrated_signal();
}
inline void GetDataTypesResponse::clear_calibrated_signal() {
  if (GetArenaForAllocation() == nullptr && calibrated_signal_ != nullptr) {
    delete calibrated_signal_;
  }
  calibrated_signal_ = nullptr;
}
inline const ::minknow_api::data::GetDataTypesResponse_DataType& GetDataTypesResponse::_internal_calibrated_signal() const {
  const ::minknow_api::data::GetDataTypesResponse_DataType* p = calibrated_signal_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetDataTypesResponse_DataType&>(
      ::minknow_api::data::_GetDataTypesResponse_DataType_default_instance_);
}
inline const ::minknow_api::data::GetDataTypesResponse_DataType& GetDataTypesResponse::calibrated_signal() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetDataTypesResponse.calibrated_signal)
  return _internal_calibrated_signal();
}
inline void GetDataTypesResponse::unsafe_arena_set_allocated_calibrated_signal(
    ::minknow_api::data::GetDataTypesResponse_DataType* calibrated_signal) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(calibrated_signal_);
  }
  calibrated_signal_ = calibrated_signal;
  if (calibrated_signal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetDataTypesResponse.calibrated_signal)
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::release_calibrated_signal() {
  
  ::minknow_api::data::GetDataTypesResponse_DataType* temp = calibrated_signal_;
  calibrated_signal_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::unsafe_arena_release_calibrated_signal() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetDataTypesResponse.calibrated_signal)
  
  ::minknow_api::data::GetDataTypesResponse_DataType* temp = calibrated_signal_;
  calibrated_signal_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::_internal_mutable_calibrated_signal() {
  
  if (calibrated_signal_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetDataTypesResponse_DataType>(GetArenaForAllocation());
    calibrated_signal_ = p;
  }
  return calibrated_signal_;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::mutable_calibrated_signal() {
  ::minknow_api::data::GetDataTypesResponse_DataType* _msg = _internal_mutable_calibrated_signal();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetDataTypesResponse.calibrated_signal)
  return _msg;
}
inline void GetDataTypesResponse::set_allocated_calibrated_signal(::minknow_api::data::GetDataTypesResponse_DataType* calibrated_signal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete calibrated_signal_;
  }
  if (calibrated_signal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetDataTypesResponse_DataType>::GetOwningArena(calibrated_signal);
    if (message_arena != submessage_arena) {
      calibrated_signal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, calibrated_signal, submessage_arena);
    }
    
  } else {
    
  }
  calibrated_signal_ = calibrated_signal;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetDataTypesResponse.calibrated_signal)
}

// .minknow_api.data.GetDataTypesResponse.DataType bias_voltages = 3;
inline bool GetDataTypesResponse::_internal_has_bias_voltages() const {
  return this != internal_default_instance() && bias_voltages_ != nullptr;
}
inline bool GetDataTypesResponse::has_bias_voltages() const {
  return _internal_has_bias_voltages();
}
inline void GetDataTypesResponse::clear_bias_voltages() {
  if (GetArenaForAllocation() == nullptr && bias_voltages_ != nullptr) {
    delete bias_voltages_;
  }
  bias_voltages_ = nullptr;
}
inline const ::minknow_api::data::GetDataTypesResponse_DataType& GetDataTypesResponse::_internal_bias_voltages() const {
  const ::minknow_api::data::GetDataTypesResponse_DataType* p = bias_voltages_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetDataTypesResponse_DataType&>(
      ::minknow_api::data::_GetDataTypesResponse_DataType_default_instance_);
}
inline const ::minknow_api::data::GetDataTypesResponse_DataType& GetDataTypesResponse::bias_voltages() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetDataTypesResponse.bias_voltages)
  return _internal_bias_voltages();
}
inline void GetDataTypesResponse::unsafe_arena_set_allocated_bias_voltages(
    ::minknow_api::data::GetDataTypesResponse_DataType* bias_voltages) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bias_voltages_);
  }
  bias_voltages_ = bias_voltages;
  if (bias_voltages) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetDataTypesResponse.bias_voltages)
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::release_bias_voltages() {
  
  ::minknow_api::data::GetDataTypesResponse_DataType* temp = bias_voltages_;
  bias_voltages_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::unsafe_arena_release_bias_voltages() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetDataTypesResponse.bias_voltages)
  
  ::minknow_api::data::GetDataTypesResponse_DataType* temp = bias_voltages_;
  bias_voltages_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::_internal_mutable_bias_voltages() {
  
  if (bias_voltages_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetDataTypesResponse_DataType>(GetArenaForAllocation());
    bias_voltages_ = p;
  }
  return bias_voltages_;
}
inline ::minknow_api::data::GetDataTypesResponse_DataType* GetDataTypesResponse::mutable_bias_voltages() {
  ::minknow_api::data::GetDataTypesResponse_DataType* _msg = _internal_mutable_bias_voltages();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetDataTypesResponse.bias_voltages)
  return _msg;
}
inline void GetDataTypesResponse::set_allocated_bias_voltages(::minknow_api::data::GetDataTypesResponse_DataType* bias_voltages) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete bias_voltages_;
  }
  if (bias_voltages) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetDataTypesResponse_DataType>::GetOwningArena(bias_voltages);
    if (message_arena != submessage_arena) {
      bias_voltages = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bias_voltages, submessage_arena);
    }
    
  } else {
    
  }
  bias_voltages_ = bias_voltages;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetDataTypesResponse.bias_voltages)
}

// -------------------------------------------------------------------

// GetSignalBytesRequest

// float seconds = 1;
inline bool GetSignalBytesRequest::_internal_has_seconds() const {
  return length_case() == kSeconds;
}
inline bool GetSignalBytesRequest::has_seconds() const {
  return _internal_has_seconds();
}
inline void GetSignalBytesRequest::set_has_seconds() {
  _oneof_case_[0] = kSeconds;
}
inline void GetSignalBytesRequest::clear_seconds() {
  if (_internal_has_seconds()) {
    length_.seconds_ = 0;
    clear_has_length();
  }
}
inline float GetSignalBytesRequest::_internal_seconds() const {
  if (_internal_has_seconds()) {
    return length_.seconds_;
  }
  return 0;
}
inline void GetSignalBytesRequest::_internal_set_seconds(float value) {
  if (!_internal_has_seconds()) {
    clear_length();
    set_has_seconds();
  }
  length_.seconds_ = value;
}
inline float GetSignalBytesRequest::seconds() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesRequest.seconds)
  return _internal_seconds();
}
inline void GetSignalBytesRequest::set_seconds(float value) {
  _internal_set_seconds(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesRequest.seconds)
}

// uint32 samples = 2;
inline bool GetSignalBytesRequest::_internal_has_samples() const {
  return length_case() == kSamples;
}
inline bool GetSignalBytesRequest::has_samples() const {
  return _internal_has_samples();
}
inline void GetSignalBytesRequest::set_has_samples() {
  _oneof_case_[0] = kSamples;
}
inline void GetSignalBytesRequest::clear_samples() {
  if (_internal_has_samples()) {
    length_.samples_ = 0u;
    clear_has_length();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalBytesRequest::_internal_samples() const {
  if (_internal_has_samples()) {
    return length_.samples_;
  }
  return 0u;
}
inline void GetSignalBytesRequest::_internal_set_samples(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_samples()) {
    clear_length();
    set_has_samples();
  }
  length_.samples_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalBytesRequest::samples() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesRequest.samples)
  return _internal_samples();
}
inline void GetSignalBytesRequest::set_samples(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_samples(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesRequest.samples)
}

// uint32 first_channel = 3 [(.minknow_api.rpc_required) = true];
inline void GetSignalBytesRequest::clear_first_channel() {
  first_channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalBytesRequest::_internal_first_channel() const {
  return first_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalBytesRequest::first_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesRequest.first_channel)
  return _internal_first_channel();
}
inline void GetSignalBytesRequest::_internal_set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  first_channel_ = value;
}
inline void GetSignalBytesRequest::set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesRequest.first_channel)
}

// uint32 last_channel = 4 [(.minknow_api.rpc_required) = true];
inline void GetSignalBytesRequest::clear_last_channel() {
  last_channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalBytesRequest::_internal_last_channel() const {
  return last_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalBytesRequest::last_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesRequest.last_channel)
  return _internal_last_channel();
}
inline void GetSignalBytesRequest::_internal_set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_channel_ = value;
}
inline void GetSignalBytesRequest::set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesRequest.last_channel)
}

// bool include_channel_configs = 5;
inline void GetSignalBytesRequest::clear_include_channel_configs() {
  include_channel_configs_ = false;
}
inline bool GetSignalBytesRequest::_internal_include_channel_configs() const {
  return include_channel_configs_;
}
inline bool GetSignalBytesRequest::include_channel_configs() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesRequest.include_channel_configs)
  return _internal_include_channel_configs();
}
inline void GetSignalBytesRequest::_internal_set_include_channel_configs(bool value) {
  
  include_channel_configs_ = value;
}
inline void GetSignalBytesRequest::set_include_channel_configs(bool value) {
  _internal_set_include_channel_configs(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesRequest.include_channel_configs)
}

// bool include_bias_voltages = 6;
inline void GetSignalBytesRequest::clear_include_bias_voltages() {
  include_bias_voltages_ = false;
}
inline bool GetSignalBytesRequest::_internal_include_bias_voltages() const {
  return include_bias_voltages_;
}
inline bool GetSignalBytesRequest::include_bias_voltages() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesRequest.include_bias_voltages)
  return _internal_include_bias_voltages();
}
inline void GetSignalBytesRequest::_internal_set_include_bias_voltages(bool value) {
  
  include_bias_voltages_ = value;
}
inline void GetSignalBytesRequest::set_include_bias_voltages(bool value) {
  _internal_set_include_bias_voltages(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesRequest.include_bias_voltages)
}

// bool calibrated_data = 7;
inline void GetSignalBytesRequest::clear_calibrated_data() {
  calibrated_data_ = false;
}
inline bool GetSignalBytesRequest::_internal_calibrated_data() const {
  return calibrated_data_;
}
inline bool GetSignalBytesRequest::calibrated_data() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesRequest.calibrated_data)
  return _internal_calibrated_data();
}
inline void GetSignalBytesRequest::_internal_set_calibrated_data(bool value) {
  
  calibrated_data_ = value;
}
inline void GetSignalBytesRequest::set_calibrated_data(bool value) {
  _internal_set_calibrated_data(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesRequest.calibrated_data)
}

// bool return_when_listening = 8;
inline void GetSignalBytesRequest::clear_return_when_listening() {
  return_when_listening_ = false;
}
inline bool GetSignalBytesRequest::_internal_return_when_listening() const {
  return return_when_listening_;
}
inline bool GetSignalBytesRequest::return_when_listening() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesRequest.return_when_listening)
  return _internal_return_when_listening();
}
inline void GetSignalBytesRequest::_internal_set_return_when_listening(bool value) {
  
  return_when_listening_ = value;
}
inline void GetSignalBytesRequest::set_return_when_listening(bool value) {
  _internal_set_return_when_listening(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesRequest.return_when_listening)
}

inline bool GetSignalBytesRequest::has_length() const {
  return length_case() != LENGTH_NOT_SET;
}
inline void GetSignalBytesRequest::clear_has_length() {
  _oneof_case_[0] = LENGTH_NOT_SET;
}
inline GetSignalBytesRequest::LengthCase GetSignalBytesRequest::length_case() const {
  return GetSignalBytesRequest::LengthCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetSignalBytesResponse_ChannelConfigChange

// .minknow_api.device.ReturnedChannelConfiguration config = 1;
inline bool GetSignalBytesResponse_ChannelConfigChange::_internal_has_config() const {
  return this != internal_default_instance() && config_ != nullptr;
}
inline bool GetSignalBytesResponse_ChannelConfigChange::has_config() const {
  return _internal_has_config();
}
inline const ::minknow_api::device::ReturnedChannelConfiguration& GetSignalBytesResponse_ChannelConfigChange::_internal_config() const {
  const ::minknow_api::device::ReturnedChannelConfiguration* p = config_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::device::ReturnedChannelConfiguration&>(
      ::minknow_api::device::_ReturnedChannelConfiguration_default_instance_);
}
inline const ::minknow_api::device::ReturnedChannelConfiguration& GetSignalBytesResponse_ChannelConfigChange::config() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesResponse.ChannelConfigChange.config)
  return _internal_config();
}
inline void GetSignalBytesResponse_ChannelConfigChange::unsafe_arena_set_allocated_config(
    ::minknow_api::device::ReturnedChannelConfiguration* config) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetSignalBytesResponse.ChannelConfigChange.config)
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetSignalBytesResponse_ChannelConfigChange::release_config() {
  
  ::minknow_api::device::ReturnedChannelConfiguration* temp = config_;
  config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetSignalBytesResponse_ChannelConfigChange::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetSignalBytesResponse.ChannelConfigChange.config)
  
  ::minknow_api::device::ReturnedChannelConfiguration* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetSignalBytesResponse_ChannelConfigChange::_internal_mutable_config() {
  
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::device::ReturnedChannelConfiguration>(GetArenaForAllocation());
    config_ = p;
  }
  return config_;
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetSignalBytesResponse_ChannelConfigChange::mutable_config() {
  ::minknow_api::device::ReturnedChannelConfiguration* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetSignalBytesResponse.ChannelConfigChange.config)
  return _msg;
}
inline void GetSignalBytesResponse_ChannelConfigChange::set_allocated_config(::minknow_api::device::ReturnedChannelConfiguration* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config));
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetSignalBytesResponse.ChannelConfigChange.config)
}

// uint64 offset = 2;
inline void GetSignalBytesResponse_ChannelConfigChange::clear_offset() {
  offset_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetSignalBytesResponse_ChannelConfigChange::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetSignalBytesResponse_ChannelConfigChange::offset() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesResponse.ChannelConfigChange.offset)
  return _internal_offset();
}
inline void GetSignalBytesResponse_ChannelConfigChange::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  offset_ = value;
}
inline void GetSignalBytesResponse_ChannelConfigChange::set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesResponse.ChannelConfigChange.offset)
}

// -------------------------------------------------------------------

// GetSignalBytesResponse_ChannelData

// bytes data = 1;
inline void GetSignalBytesResponse_ChannelData::clear_data() {
  data_.ClearToEmpty();
}
inline const std::string& GetSignalBytesResponse_ChannelData::data() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesResponse.ChannelData.data)
  return _internal_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetSignalBytesResponse_ChannelData::set_data(ArgT0&& arg0, ArgT... args) {
 
 data_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesResponse.ChannelData.data)
}
inline std::string* GetSignalBytesResponse_ChannelData::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetSignalBytesResponse.ChannelData.data)
  return _s;
}
inline const std::string& GetSignalBytesResponse_ChannelData::_internal_data() const {
  return data_.Get();
}
inline void GetSignalBytesResponse_ChannelData::_internal_set_data(const std::string& value) {
  
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetSignalBytesResponse_ChannelData::_internal_mutable_data() {
  
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetSignalBytesResponse_ChannelData::release_data() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetSignalBytesResponse.ChannelData.data)
  return data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetSignalBytesResponse_ChannelData::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetSignalBytesResponse.ChannelData.data)
}

// repeated .minknow_api.data.GetSignalBytesResponse.ChannelConfigChange config_changes = 3;
inline int GetSignalBytesResponse_ChannelData::_internal_config_changes_size() const {
  return config_changes_.size();
}
inline int GetSignalBytesResponse_ChannelData::config_changes_size() const {
  return _internal_config_changes_size();
}
inline void GetSignalBytesResponse_ChannelData::clear_config_changes() {
  config_changes_.Clear();
}
inline ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange* GetSignalBytesResponse_ChannelData::mutable_config_changes(int index) {
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetSignalBytesResponse.ChannelData.config_changes)
  return config_changes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange >*
GetSignalBytesResponse_ChannelData::mutable_config_changes() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetSignalBytesResponse.ChannelData.config_changes)
  return &config_changes_;
}
inline const ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange& GetSignalBytesResponse_ChannelData::_internal_config_changes(int index) const {
  return config_changes_.Get(index);
}
inline const ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange& GetSignalBytesResponse_ChannelData::config_changes(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesResponse.ChannelData.config_changes)
  return _internal_config_changes(index);
}
inline ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange* GetSignalBytesResponse_ChannelData::_internal_add_config_changes() {
  return config_changes_.Add();
}
inline ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange* GetSignalBytesResponse_ChannelData::add_config_changes() {
  ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange* _add = _internal_add_config_changes();
  // @@protoc_insertion_point(field_add:minknow_api.data.GetSignalBytesResponse.ChannelData.config_changes)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelConfigChange >&
GetSignalBytesResponse_ChannelData::config_changes() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetSignalBytesResponse.ChannelData.config_changes)
  return config_changes_;
}

// -------------------------------------------------------------------

// GetSignalBytesResponse

// uint64 samples_since_start = 1;
inline void GetSignalBytesResponse::clear_samples_since_start() {
  samples_since_start_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetSignalBytesResponse::_internal_samples_since_start() const {
  return samples_since_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetSignalBytesResponse::samples_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesResponse.samples_since_start)
  return _internal_samples_since_start();
}
inline void GetSignalBytesResponse::_internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samples_since_start_ = value;
}
inline void GetSignalBytesResponse::set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesResponse.samples_since_start)
}

// double seconds_since_start = 2;
inline void GetSignalBytesResponse::clear_seconds_since_start() {
  seconds_since_start_ = 0;
}
inline double GetSignalBytesResponse::_internal_seconds_since_start() const {
  return seconds_since_start_;
}
inline double GetSignalBytesResponse::seconds_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesResponse.seconds_since_start)
  return _internal_seconds_since_start();
}
inline void GetSignalBytesResponse::_internal_set_seconds_since_start(double value) {
  
  seconds_since_start_ = value;
}
inline void GetSignalBytesResponse::set_seconds_since_start(double value) {
  _internal_set_seconds_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesResponse.seconds_since_start)
}

// uint32 skipped_channels = 3;
inline void GetSignalBytesResponse::clear_skipped_channels() {
  skipped_channels_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalBytesResponse::_internal_skipped_channels() const {
  return skipped_channels_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalBytesResponse::skipped_channels() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesResponse.skipped_channels)
  return _internal_skipped_channels();
}
inline void GetSignalBytesResponse::_internal_set_skipped_channels(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  skipped_channels_ = value;
}
inline void GetSignalBytesResponse::set_skipped_channels(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skipped_channels(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesResponse.skipped_channels)
}

// repeated .minknow_api.data.GetSignalBytesResponse.ChannelData channels = 4;
inline int GetSignalBytesResponse::_internal_channels_size() const {
  return channels_.size();
}
inline int GetSignalBytesResponse::channels_size() const {
  return _internal_channels_size();
}
inline void GetSignalBytesResponse::clear_channels() {
  channels_.Clear();
}
inline ::minknow_api::data::GetSignalBytesResponse_ChannelData* GetSignalBytesResponse::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetSignalBytesResponse.channels)
  return channels_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelData >*
GetSignalBytesResponse::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetSignalBytesResponse.channels)
  return &channels_;
}
inline const ::minknow_api::data::GetSignalBytesResponse_ChannelData& GetSignalBytesResponse::_internal_channels(int index) const {
  return channels_.Get(index);
}
inline const ::minknow_api::data::GetSignalBytesResponse_ChannelData& GetSignalBytesResponse::channels(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesResponse.channels)
  return _internal_channels(index);
}
inline ::minknow_api::data::GetSignalBytesResponse_ChannelData* GetSignalBytesResponse::_internal_add_channels() {
  return channels_.Add();
}
inline ::minknow_api::data::GetSignalBytesResponse_ChannelData* GetSignalBytesResponse::add_channels() {
  ::minknow_api::data::GetSignalBytesResponse_ChannelData* _add = _internal_add_channels();
  // @@protoc_insertion_point(field_add:minknow_api.data.GetSignalBytesResponse.channels)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalBytesResponse_ChannelData >&
GetSignalBytesResponse::channels() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetSignalBytesResponse.channels)
  return channels_;
}

// bytes bias_voltages = 5;
inline void GetSignalBytesResponse::clear_bias_voltages() {
  bias_voltages_.ClearToEmpty();
}
inline const std::string& GetSignalBytesResponse::bias_voltages() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalBytesResponse.bias_voltages)
  return _internal_bias_voltages();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetSignalBytesResponse::set_bias_voltages(ArgT0&& arg0, ArgT... args) {
 
 bias_voltages_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalBytesResponse.bias_voltages)
}
inline std::string* GetSignalBytesResponse::mutable_bias_voltages() {
  std::string* _s = _internal_mutable_bias_voltages();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetSignalBytesResponse.bias_voltages)
  return _s;
}
inline const std::string& GetSignalBytesResponse::_internal_bias_voltages() const {
  return bias_voltages_.Get();
}
inline void GetSignalBytesResponse::_internal_set_bias_voltages(const std::string& value) {
  
  bias_voltages_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetSignalBytesResponse::_internal_mutable_bias_voltages() {
  
  return bias_voltages_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetSignalBytesResponse::release_bias_voltages() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetSignalBytesResponse.bias_voltages)
  return bias_voltages_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetSignalBytesResponse::set_allocated_bias_voltages(std::string* bias_voltages) {
  if (bias_voltages != nullptr) {
    
  } else {
    
  }
  bias_voltages_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bias_voltages,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetSignalBytesResponse.bias_voltages)
}

// -------------------------------------------------------------------

// GetSignalMinMaxRequest

// uint32 first_channel = 3 [(.minknow_api.rpc_required) = true];
inline void GetSignalMinMaxRequest::clear_first_channel() {
  first_channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalMinMaxRequest::_internal_first_channel() const {
  return first_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalMinMaxRequest::first_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxRequest.first_channel)
  return _internal_first_channel();
}
inline void GetSignalMinMaxRequest::_internal_set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  first_channel_ = value;
}
inline void GetSignalMinMaxRequest::set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxRequest.first_channel)
}

// uint32 last_channel = 4 [(.minknow_api.rpc_required) = true];
inline void GetSignalMinMaxRequest::clear_last_channel() {
  last_channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalMinMaxRequest::_internal_last_channel() const {
  return last_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalMinMaxRequest::last_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxRequest.last_channel)
  return _internal_last_channel();
}
inline void GetSignalMinMaxRequest::_internal_set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_channel_ = value;
}
inline void GetSignalMinMaxRequest::set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxRequest.last_channel)
}

// uint32 window_size = 5 [(.minknow_api.rpc_required) = true];
inline void GetSignalMinMaxRequest::clear_window_size() {
  window_size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalMinMaxRequest::_internal_window_size() const {
  return window_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalMinMaxRequest::window_size() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxRequest.window_size)
  return _internal_window_size();
}
inline void GetSignalMinMaxRequest::_internal_set_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  window_size_ = value;
}
inline void GetSignalMinMaxRequest::set_window_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_window_size(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxRequest.window_size)
}

// bool calibrated_data = 7;
inline void GetSignalMinMaxRequest::clear_calibrated_data() {
  calibrated_data_ = false;
}
inline bool GetSignalMinMaxRequest::_internal_calibrated_data() const {
  return calibrated_data_;
}
inline bool GetSignalMinMaxRequest::calibrated_data() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxRequest.calibrated_data)
  return _internal_calibrated_data();
}
inline void GetSignalMinMaxRequest::_internal_set_calibrated_data(bool value) {
  
  calibrated_data_ = value;
}
inline void GetSignalMinMaxRequest::set_calibrated_data(bool value) {
  _internal_set_calibrated_data(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxRequest.calibrated_data)
}

// -------------------------------------------------------------------

// GetSignalMinMaxResponse_ChannelData

// repeated float calibrated_minima = 1;
inline int GetSignalMinMaxResponse_ChannelData::_internal_calibrated_minima_size() const {
  return calibrated_minima_.size();
}
inline int GetSignalMinMaxResponse_ChannelData::calibrated_minima_size() const {
  return _internal_calibrated_minima_size();
}
inline void GetSignalMinMaxResponse_ChannelData::clear_calibrated_minima() {
  calibrated_minima_.Clear();
}
inline float GetSignalMinMaxResponse_ChannelData::_internal_calibrated_minima(int index) const {
  return calibrated_minima_.Get(index);
}
inline float GetSignalMinMaxResponse_ChannelData::calibrated_minima(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_minima)
  return _internal_calibrated_minima(index);
}
inline void GetSignalMinMaxResponse_ChannelData::set_calibrated_minima(int index, float value) {
  calibrated_minima_.Set(index, value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_minima)
}
inline void GetSignalMinMaxResponse_ChannelData::_internal_add_calibrated_minima(float value) {
  calibrated_minima_.Add(value);
}
inline void GetSignalMinMaxResponse_ChannelData::add_calibrated_minima(float value) {
  _internal_add_calibrated_minima(value);
  // @@protoc_insertion_point(field_add:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_minima)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
GetSignalMinMaxResponse_ChannelData::_internal_calibrated_minima() const {
  return calibrated_minima_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
GetSignalMinMaxResponse_ChannelData::calibrated_minima() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_minima)
  return _internal_calibrated_minima();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
GetSignalMinMaxResponse_ChannelData::_internal_mutable_calibrated_minima() {
  return &calibrated_minima_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
GetSignalMinMaxResponse_ChannelData::mutable_calibrated_minima() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_minima)
  return _internal_mutable_calibrated_minima();
}

// repeated int32 raw_minima = 2;
inline int GetSignalMinMaxResponse_ChannelData::_internal_raw_minima_size() const {
  return raw_minima_.size();
}
inline int GetSignalMinMaxResponse_ChannelData::raw_minima_size() const {
  return _internal_raw_minima_size();
}
inline void GetSignalMinMaxResponse_ChannelData::clear_raw_minima() {
  raw_minima_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSignalMinMaxResponse_ChannelData::_internal_raw_minima(int index) const {
  return raw_minima_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSignalMinMaxResponse_ChannelData::raw_minima(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_minima)
  return _internal_raw_minima(index);
}
inline void GetSignalMinMaxResponse_ChannelData::set_raw_minima(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  raw_minima_.Set(index, value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_minima)
}
inline void GetSignalMinMaxResponse_ChannelData::_internal_add_raw_minima(::PROTOBUF_NAMESPACE_ID::int32 value) {
  raw_minima_.Add(value);
}
inline void GetSignalMinMaxResponse_ChannelData::add_raw_minima(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_raw_minima(value);
  // @@protoc_insertion_point(field_add:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_minima)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GetSignalMinMaxResponse_ChannelData::_internal_raw_minima() const {
  return raw_minima_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GetSignalMinMaxResponse_ChannelData::raw_minima() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_minima)
  return _internal_raw_minima();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GetSignalMinMaxResponse_ChannelData::_internal_mutable_raw_minima() {
  return &raw_minima_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GetSignalMinMaxResponse_ChannelData::mutable_raw_minima() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_minima)
  return _internal_mutable_raw_minima();
}

// repeated float calibrated_maxima = 3;
inline int GetSignalMinMaxResponse_ChannelData::_internal_calibrated_maxima_size() const {
  return calibrated_maxima_.size();
}
inline int GetSignalMinMaxResponse_ChannelData::calibrated_maxima_size() const {
  return _internal_calibrated_maxima_size();
}
inline void GetSignalMinMaxResponse_ChannelData::clear_calibrated_maxima() {
  calibrated_maxima_.Clear();
}
inline float GetSignalMinMaxResponse_ChannelData::_internal_calibrated_maxima(int index) const {
  return calibrated_maxima_.Get(index);
}
inline float GetSignalMinMaxResponse_ChannelData::calibrated_maxima(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_maxima)
  return _internal_calibrated_maxima(index);
}
inline void GetSignalMinMaxResponse_ChannelData::set_calibrated_maxima(int index, float value) {
  calibrated_maxima_.Set(index, value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_maxima)
}
inline void GetSignalMinMaxResponse_ChannelData::_internal_add_calibrated_maxima(float value) {
  calibrated_maxima_.Add(value);
}
inline void GetSignalMinMaxResponse_ChannelData::add_calibrated_maxima(float value) {
  _internal_add_calibrated_maxima(value);
  // @@protoc_insertion_point(field_add:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_maxima)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
GetSignalMinMaxResponse_ChannelData::_internal_calibrated_maxima() const {
  return calibrated_maxima_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
GetSignalMinMaxResponse_ChannelData::calibrated_maxima() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_maxima)
  return _internal_calibrated_maxima();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
GetSignalMinMaxResponse_ChannelData::_internal_mutable_calibrated_maxima() {
  return &calibrated_maxima_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
GetSignalMinMaxResponse_ChannelData::mutable_calibrated_maxima() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetSignalMinMaxResponse.ChannelData.calibrated_maxima)
  return _internal_mutable_calibrated_maxima();
}

// repeated int32 raw_maxima = 4;
inline int GetSignalMinMaxResponse_ChannelData::_internal_raw_maxima_size() const {
  return raw_maxima_.size();
}
inline int GetSignalMinMaxResponse_ChannelData::raw_maxima_size() const {
  return _internal_raw_maxima_size();
}
inline void GetSignalMinMaxResponse_ChannelData::clear_raw_maxima() {
  raw_maxima_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSignalMinMaxResponse_ChannelData::_internal_raw_maxima(int index) const {
  return raw_maxima_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetSignalMinMaxResponse_ChannelData::raw_maxima(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_maxima)
  return _internal_raw_maxima(index);
}
inline void GetSignalMinMaxResponse_ChannelData::set_raw_maxima(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  raw_maxima_.Set(index, value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_maxima)
}
inline void GetSignalMinMaxResponse_ChannelData::_internal_add_raw_maxima(::PROTOBUF_NAMESPACE_ID::int32 value) {
  raw_maxima_.Add(value);
}
inline void GetSignalMinMaxResponse_ChannelData::add_raw_maxima(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_raw_maxima(value);
  // @@protoc_insertion_point(field_add:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_maxima)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GetSignalMinMaxResponse_ChannelData::_internal_raw_maxima() const {
  return raw_maxima_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GetSignalMinMaxResponse_ChannelData::raw_maxima() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_maxima)
  return _internal_raw_maxima();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GetSignalMinMaxResponse_ChannelData::_internal_mutable_raw_maxima() {
  return &raw_maxima_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GetSignalMinMaxResponse_ChannelData::mutable_raw_maxima() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetSignalMinMaxResponse.ChannelData.raw_maxima)
  return _internal_mutable_raw_maxima();
}

// -------------------------------------------------------------------

// GetSignalMinMaxResponse

// uint64 samples_since_start = 1;
inline void GetSignalMinMaxResponse::clear_samples_since_start() {
  samples_since_start_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetSignalMinMaxResponse::_internal_samples_since_start() const {
  return samples_since_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetSignalMinMaxResponse::samples_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxResponse.samples_since_start)
  return _internal_samples_since_start();
}
inline void GetSignalMinMaxResponse::_internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samples_since_start_ = value;
}
inline void GetSignalMinMaxResponse::set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxResponse.samples_since_start)
}

// double seconds_since_start = 2;
inline void GetSignalMinMaxResponse::clear_seconds_since_start() {
  seconds_since_start_ = 0;
}
inline double GetSignalMinMaxResponse::_internal_seconds_since_start() const {
  return seconds_since_start_;
}
inline double GetSignalMinMaxResponse::seconds_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxResponse.seconds_since_start)
  return _internal_seconds_since_start();
}
inline void GetSignalMinMaxResponse::_internal_set_seconds_since_start(double value) {
  
  seconds_since_start_ = value;
}
inline void GetSignalMinMaxResponse::set_seconds_since_start(double value) {
  _internal_set_seconds_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxResponse.seconds_since_start)
}

// uint32 skipped_channels = 3;
inline void GetSignalMinMaxResponse::clear_skipped_channels() {
  skipped_channels_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalMinMaxResponse::_internal_skipped_channels() const {
  return skipped_channels_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetSignalMinMaxResponse::skipped_channels() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxResponse.skipped_channels)
  return _internal_skipped_channels();
}
inline void GetSignalMinMaxResponse::_internal_set_skipped_channels(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  skipped_channels_ = value;
}
inline void GetSignalMinMaxResponse::set_skipped_channels(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skipped_channels(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetSignalMinMaxResponse.skipped_channels)
}

// repeated .minknow_api.data.GetSignalMinMaxResponse.ChannelData channels = 4;
inline int GetSignalMinMaxResponse::_internal_channels_size() const {
  return channels_.size();
}
inline int GetSignalMinMaxResponse::channels_size() const {
  return _internal_channels_size();
}
inline void GetSignalMinMaxResponse::clear_channels() {
  channels_.Clear();
}
inline ::minknow_api::data::GetSignalMinMaxResponse_ChannelData* GetSignalMinMaxResponse::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetSignalMinMaxResponse.channels)
  return channels_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalMinMaxResponse_ChannelData >*
GetSignalMinMaxResponse::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetSignalMinMaxResponse.channels)
  return &channels_;
}
inline const ::minknow_api::data::GetSignalMinMaxResponse_ChannelData& GetSignalMinMaxResponse::_internal_channels(int index) const {
  return channels_.Get(index);
}
inline const ::minknow_api::data::GetSignalMinMaxResponse_ChannelData& GetSignalMinMaxResponse::channels(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetSignalMinMaxResponse.channels)
  return _internal_channels(index);
}
inline ::minknow_api::data::GetSignalMinMaxResponse_ChannelData* GetSignalMinMaxResponse::_internal_add_channels() {
  return channels_.Add();
}
inline ::minknow_api::data::GetSignalMinMaxResponse_ChannelData* GetSignalMinMaxResponse::add_channels() {
  ::minknow_api::data::GetSignalMinMaxResponse_ChannelData* _add = _internal_add_channels();
  // @@protoc_insertion_point(field_add:minknow_api.data.GetSignalMinMaxResponse.channels)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetSignalMinMaxResponse_ChannelData >&
GetSignalMinMaxResponse::channels() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetSignalMinMaxResponse.channels)
  return channels_;
}

// -------------------------------------------------------------------

// GetLiveReadsRequest_UnblockAction

// double duration = 1;
inline void GetLiveReadsRequest_UnblockAction::clear_duration() {
  duration_ = 0;
}
inline double GetLiveReadsRequest_UnblockAction::_internal_duration() const {
  return duration_;
}
inline double GetLiveReadsRequest_UnblockAction::duration() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.UnblockAction.duration)
  return _internal_duration();
}
inline void GetLiveReadsRequest_UnblockAction::_internal_set_duration(double value) {
  
  duration_ = value;
}
inline void GetLiveReadsRequest_UnblockAction::set_duration(double value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.UnblockAction.duration)
}

// -------------------------------------------------------------------

// GetLiveReadsRequest_StopFurtherData

// -------------------------------------------------------------------

// GetLiveReadsRequest_Action

// string action_id = 1;
inline void GetLiveReadsRequest_Action::clear_action_id() {
  action_id_.ClearToEmpty();
}
inline const std::string& GetLiveReadsRequest_Action::action_id() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.Action.action_id)
  return _internal_action_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetLiveReadsRequest_Action::set_action_id(ArgT0&& arg0, ArgT... args) {
 
 action_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.Action.action_id)
}
inline std::string* GetLiveReadsRequest_Action::mutable_action_id() {
  std::string* _s = _internal_mutable_action_id();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsRequest.Action.action_id)
  return _s;
}
inline const std::string& GetLiveReadsRequest_Action::_internal_action_id() const {
  return action_id_.Get();
}
inline void GetLiveReadsRequest_Action::_internal_set_action_id(const std::string& value) {
  
  action_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetLiveReadsRequest_Action::_internal_mutable_action_id() {
  
  return action_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetLiveReadsRequest_Action::release_action_id() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetLiveReadsRequest.Action.action_id)
  return action_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetLiveReadsRequest_Action::set_allocated_action_id(std::string* action_id) {
  if (action_id != nullptr) {
    
  } else {
    
  }
  action_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action_id,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetLiveReadsRequest.Action.action_id)
}

// uint32 channel = 2;
inline void GetLiveReadsRequest_Action::clear_channel() {
  channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsRequest_Action::_internal_channel() const {
  return channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsRequest_Action::channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.Action.channel)
  return _internal_channel();
}
inline void GetLiveReadsRequest_Action::_internal_set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  channel_ = value;
}
inline void GetLiveReadsRequest_Action::set_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.Action.channel)
}

// string id = 3;
inline bool GetLiveReadsRequest_Action::_internal_has_id() const {
  return read_case() == kId;
}
inline bool GetLiveReadsRequest_Action::has_id() const {
  return _internal_has_id();
}
inline void GetLiveReadsRequest_Action::set_has_id() {
  _oneof_case_[0] = kId;
}
inline void GetLiveReadsRequest_Action::clear_id() {
  if (_internal_has_id()) {
    read_.id_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_read();
  }
}
inline const std::string& GetLiveReadsRequest_Action::id() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.Action.id)
  return _internal_id();
}
template <typename ArgT0, typename... ArgT>
inline void GetLiveReadsRequest_Action::set_id(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_id()) {
    clear_read();
    set_has_id();
    read_.id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  read_.id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.Action.id)
}
inline std::string* GetLiveReadsRequest_Action::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsRequest.Action.id)
  return _s;
}
inline const std::string& GetLiveReadsRequest_Action::_internal_id() const {
  if (_internal_has_id()) {
    return read_.id_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void GetLiveReadsRequest_Action::_internal_set_id(const std::string& value) {
  if (!_internal_has_id()) {
    clear_read();
    set_has_id();
    read_.id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  read_.id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetLiveReadsRequest_Action::_internal_mutable_id() {
  if (!_internal_has_id()) {
    clear_read();
    set_has_id();
    read_.id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return read_.id_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetLiveReadsRequest_Action::release_id() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetLiveReadsRequest.Action.id)
  if (_internal_has_id()) {
    clear_has_read();
    return read_.id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void GetLiveReadsRequest_Action::set_allocated_id(std::string* id) {
  if (has_read()) {
    clear_read();
  }
  if (id != nullptr) {
    set_has_id();
    read_.id_.UnsafeSetDefault(id);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(id);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetLiveReadsRequest.Action.id)
}

// uint32 number = 4;
inline bool GetLiveReadsRequest_Action::_internal_has_number() const {
  return read_case() == kNumber;
}
inline bool GetLiveReadsRequest_Action::has_number() const {
  return _internal_has_number();
}
inline void GetLiveReadsRequest_Action::set_has_number() {
  _oneof_case_[0] = kNumber;
}
inline void GetLiveReadsRequest_Action::clear_number() {
  if (_internal_has_number()) {
    read_.number_ = 0u;
    clear_has_read();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsRequest_Action::_internal_number() const {
  if (_internal_has_number()) {
    return read_.number_;
  }
  return 0u;
}
inline void GetLiveReadsRequest_Action::_internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_number()) {
    clear_read();
    set_has_number();
  }
  read_.number_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsRequest_Action::number() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.Action.number)
  return _internal_number();
}
inline void GetLiveReadsRequest_Action::set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.Action.number)
}

// .minknow_api.data.GetLiveReadsRequest.UnblockAction unblock = 5;
inline bool GetLiveReadsRequest_Action::_internal_has_unblock() const {
  return action_case() == kUnblock;
}
inline bool GetLiveReadsRequest_Action::has_unblock() const {
  return _internal_has_unblock();
}
inline void GetLiveReadsRequest_Action::set_has_unblock() {
  _oneof_case_[1] = kUnblock;
}
inline void GetLiveReadsRequest_Action::clear_unblock() {
  if (_internal_has_unblock()) {
    if (GetArenaForAllocation() == nullptr) {
      delete action_.unblock_;
    }
    clear_has_action();
  }
}
inline ::minknow_api::data::GetLiveReadsRequest_UnblockAction* GetLiveReadsRequest_Action::release_unblock() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetLiveReadsRequest.Action.unblock)
  if (_internal_has_unblock()) {
    clear_has_action();
      ::minknow_api::data::GetLiveReadsRequest_UnblockAction* temp = action_.unblock_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    action_.unblock_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::minknow_api::data::GetLiveReadsRequest_UnblockAction& GetLiveReadsRequest_Action::_internal_unblock() const {
  return _internal_has_unblock()
      ? *action_.unblock_
      : reinterpret_cast< ::minknow_api::data::GetLiveReadsRequest_UnblockAction&>(::minknow_api::data::_GetLiveReadsRequest_UnblockAction_default_instance_);
}
inline const ::minknow_api::data::GetLiveReadsRequest_UnblockAction& GetLiveReadsRequest_Action::unblock() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.Action.unblock)
  return _internal_unblock();
}
inline ::minknow_api::data::GetLiveReadsRequest_UnblockAction* GetLiveReadsRequest_Action::unsafe_arena_release_unblock() {
  // @@protoc_insertion_point(field_unsafe_arena_release:minknow_api.data.GetLiveReadsRequest.Action.unblock)
  if (_internal_has_unblock()) {
    clear_has_action();
    ::minknow_api::data::GetLiveReadsRequest_UnblockAction* temp = action_.unblock_;
    action_.unblock_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetLiveReadsRequest_Action::unsafe_arena_set_allocated_unblock(::minknow_api::data::GetLiveReadsRequest_UnblockAction* unblock) {
  clear_action();
  if (unblock) {
    set_has_unblock();
    action_.unblock_ = unblock;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetLiveReadsRequest.Action.unblock)
}
inline ::minknow_api::data::GetLiveReadsRequest_UnblockAction* GetLiveReadsRequest_Action::_internal_mutable_unblock() {
  if (!_internal_has_unblock()) {
    clear_action();
    set_has_unblock();
    action_.unblock_ = CreateMaybeMessage< ::minknow_api::data::GetLiveReadsRequest_UnblockAction >(GetArenaForAllocation());
  }
  return action_.unblock_;
}
inline ::minknow_api::data::GetLiveReadsRequest_UnblockAction* GetLiveReadsRequest_Action::mutable_unblock() {
  ::minknow_api::data::GetLiveReadsRequest_UnblockAction* _msg = _internal_mutable_unblock();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsRequest.Action.unblock)
  return _msg;
}

// .minknow_api.data.GetLiveReadsRequest.StopFurtherData stop_further_data = 6;
inline bool GetLiveReadsRequest_Action::_internal_has_stop_further_data() const {
  return action_case() == kStopFurtherData;
}
inline bool GetLiveReadsRequest_Action::has_stop_further_data() const {
  return _internal_has_stop_further_data();
}
inline void GetLiveReadsRequest_Action::set_has_stop_further_data() {
  _oneof_case_[1] = kStopFurtherData;
}
inline void GetLiveReadsRequest_Action::clear_stop_further_data() {
  if (_internal_has_stop_further_data()) {
    if (GetArenaForAllocation() == nullptr) {
      delete action_.stop_further_data_;
    }
    clear_has_action();
  }
}
inline ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* GetLiveReadsRequest_Action::release_stop_further_data() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetLiveReadsRequest.Action.stop_further_data)
  if (_internal_has_stop_further_data()) {
    clear_has_action();
      ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* temp = action_.stop_further_data_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    action_.stop_further_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::minknow_api::data::GetLiveReadsRequest_StopFurtherData& GetLiveReadsRequest_Action::_internal_stop_further_data() const {
  return _internal_has_stop_further_data()
      ? *action_.stop_further_data_
      : reinterpret_cast< ::minknow_api::data::GetLiveReadsRequest_StopFurtherData&>(::minknow_api::data::_GetLiveReadsRequest_StopFurtherData_default_instance_);
}
inline const ::minknow_api::data::GetLiveReadsRequest_StopFurtherData& GetLiveReadsRequest_Action::stop_further_data() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.Action.stop_further_data)
  return _internal_stop_further_data();
}
inline ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* GetLiveReadsRequest_Action::unsafe_arena_release_stop_further_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:minknow_api.data.GetLiveReadsRequest.Action.stop_further_data)
  if (_internal_has_stop_further_data()) {
    clear_has_action();
    ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* temp = action_.stop_further_data_;
    action_.stop_further_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetLiveReadsRequest_Action::unsafe_arena_set_allocated_stop_further_data(::minknow_api::data::GetLiveReadsRequest_StopFurtherData* stop_further_data) {
  clear_action();
  if (stop_further_data) {
    set_has_stop_further_data();
    action_.stop_further_data_ = stop_further_data;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetLiveReadsRequest.Action.stop_further_data)
}
inline ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* GetLiveReadsRequest_Action::_internal_mutable_stop_further_data() {
  if (!_internal_has_stop_further_data()) {
    clear_action();
    set_has_stop_further_data();
    action_.stop_further_data_ = CreateMaybeMessage< ::minknow_api::data::GetLiveReadsRequest_StopFurtherData >(GetArenaForAllocation());
  }
  return action_.stop_further_data_;
}
inline ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* GetLiveReadsRequest_Action::mutable_stop_further_data() {
  ::minknow_api::data::GetLiveReadsRequest_StopFurtherData* _msg = _internal_mutable_stop_further_data();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsRequest.Action.stop_further_data)
  return _msg;
}

inline bool GetLiveReadsRequest_Action::has_read() const {
  return read_case() != READ_NOT_SET;
}
inline void GetLiveReadsRequest_Action::clear_has_read() {
  _oneof_case_[0] = READ_NOT_SET;
}
inline bool GetLiveReadsRequest_Action::has_action() const {
  return action_case() != ACTION_NOT_SET;
}
inline void GetLiveReadsRequest_Action::clear_has_action() {
  _oneof_case_[1] = ACTION_NOT_SET;
}
inline GetLiveReadsRequest_Action::ReadCase GetLiveReadsRequest_Action::read_case() const {
  return GetLiveReadsRequest_Action::ReadCase(_oneof_case_[0]);
}
inline GetLiveReadsRequest_Action::ActionCase GetLiveReadsRequest_Action::action_case() const {
  return GetLiveReadsRequest_Action::ActionCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// GetLiveReadsRequest_StreamSetup

// uint32 first_channel = 1;
inline void GetLiveReadsRequest_StreamSetup::clear_first_channel() {
  first_channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsRequest_StreamSetup::_internal_first_channel() const {
  return first_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsRequest_StreamSetup::first_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.StreamSetup.first_channel)
  return _internal_first_channel();
}
inline void GetLiveReadsRequest_StreamSetup::_internal_set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  first_channel_ = value;
}
inline void GetLiveReadsRequest_StreamSetup::set_first_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.StreamSetup.first_channel)
}

// uint32 last_channel = 2;
inline void GetLiveReadsRequest_StreamSetup::clear_last_channel() {
  last_channel_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsRequest_StreamSetup::_internal_last_channel() const {
  return last_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsRequest_StreamSetup::last_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.StreamSetup.last_channel)
  return _internal_last_channel();
}
inline void GetLiveReadsRequest_StreamSetup::_internal_set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  last_channel_ = value;
}
inline void GetLiveReadsRequest_StreamSetup::set_last_channel(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.StreamSetup.last_channel)
}

// .minknow_api.data.GetLiveReadsRequest.RawDataType raw_data_type = 3;
inline void GetLiveReadsRequest_StreamSetup::clear_raw_data_type() {
  raw_data_type_ = 0;
}
inline ::minknow_api::data::GetLiveReadsRequest_RawDataType GetLiveReadsRequest_StreamSetup::_internal_raw_data_type() const {
  return static_cast< ::minknow_api::data::GetLiveReadsRequest_RawDataType >(raw_data_type_);
}
inline ::minknow_api::data::GetLiveReadsRequest_RawDataType GetLiveReadsRequest_StreamSetup::raw_data_type() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.StreamSetup.raw_data_type)
  return _internal_raw_data_type();
}
inline void GetLiveReadsRequest_StreamSetup::_internal_set_raw_data_type(::minknow_api::data::GetLiveReadsRequest_RawDataType value) {
  
  raw_data_type_ = value;
}
inline void GetLiveReadsRequest_StreamSetup::set_raw_data_type(::minknow_api::data::GetLiveReadsRequest_RawDataType value) {
  _internal_set_raw_data_type(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.StreamSetup.raw_data_type)
}

// uint64 sample_minimum_chunk_size = 4;
inline void GetLiveReadsRequest_StreamSetup::clear_sample_minimum_chunk_size() {
  sample_minimum_chunk_size_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsRequest_StreamSetup::_internal_sample_minimum_chunk_size() const {
  return sample_minimum_chunk_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsRequest_StreamSetup::sample_minimum_chunk_size() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.StreamSetup.sample_minimum_chunk_size)
  return _internal_sample_minimum_chunk_size();
}
inline void GetLiveReadsRequest_StreamSetup::_internal_set_sample_minimum_chunk_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  sample_minimum_chunk_size_ = value;
}
inline void GetLiveReadsRequest_StreamSetup::set_sample_minimum_chunk_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sample_minimum_chunk_size(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.StreamSetup.sample_minimum_chunk_size)
}

// uint64 max_unblock_read_length_samples = 5;
inline bool GetLiveReadsRequest_StreamSetup::_internal_has_max_unblock_read_length_samples() const {
  return max_unblock_read_length_case() == kMaxUnblockReadLengthSamples;
}
inline bool GetLiveReadsRequest_StreamSetup::has_max_unblock_read_length_samples() const {
  return _internal_has_max_unblock_read_length_samples();
}
inline void GetLiveReadsRequest_StreamSetup::set_has_max_unblock_read_length_samples() {
  _oneof_case_[0] = kMaxUnblockReadLengthSamples;
}
inline void GetLiveReadsRequest_StreamSetup::clear_max_unblock_read_length_samples() {
  if (_internal_has_max_unblock_read_length_samples()) {
    max_unblock_read_length_.max_unblock_read_length_samples_ = uint64_t{0u};
    clear_has_max_unblock_read_length();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsRequest_StreamSetup::_internal_max_unblock_read_length_samples() const {
  if (_internal_has_max_unblock_read_length_samples()) {
    return max_unblock_read_length_.max_unblock_read_length_samples_;
  }
  return uint64_t{0u};
}
inline void GetLiveReadsRequest_StreamSetup::_internal_set_max_unblock_read_length_samples(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  if (!_internal_has_max_unblock_read_length_samples()) {
    clear_max_unblock_read_length();
    set_has_max_unblock_read_length_samples();
  }
  max_unblock_read_length_.max_unblock_read_length_samples_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsRequest_StreamSetup::max_unblock_read_length_samples() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.StreamSetup.max_unblock_read_length_samples)
  return _internal_max_unblock_read_length_samples();
}
inline void GetLiveReadsRequest_StreamSetup::set_max_unblock_read_length_samples(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_max_unblock_read_length_samples(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.StreamSetup.max_unblock_read_length_samples)
}

// double max_unblock_read_length_seconds = 6;
inline bool GetLiveReadsRequest_StreamSetup::_internal_has_max_unblock_read_length_seconds() const {
  return max_unblock_read_length_case() == kMaxUnblockReadLengthSeconds;
}
inline bool GetLiveReadsRequest_StreamSetup::has_max_unblock_read_length_seconds() const {
  return _internal_has_max_unblock_read_length_seconds();
}
inline void GetLiveReadsRequest_StreamSetup::set_has_max_unblock_read_length_seconds() {
  _oneof_case_[0] = kMaxUnblockReadLengthSeconds;
}
inline void GetLiveReadsRequest_StreamSetup::clear_max_unblock_read_length_seconds() {
  if (_internal_has_max_unblock_read_length_seconds()) {
    max_unblock_read_length_.max_unblock_read_length_seconds_ = 0;
    clear_has_max_unblock_read_length();
  }
}
inline double GetLiveReadsRequest_StreamSetup::_internal_max_unblock_read_length_seconds() const {
  if (_internal_has_max_unblock_read_length_seconds()) {
    return max_unblock_read_length_.max_unblock_read_length_seconds_;
  }
  return 0;
}
inline void GetLiveReadsRequest_StreamSetup::_internal_set_max_unblock_read_length_seconds(double value) {
  if (!_internal_has_max_unblock_read_length_seconds()) {
    clear_max_unblock_read_length();
    set_has_max_unblock_read_length_seconds();
  }
  max_unblock_read_length_.max_unblock_read_length_seconds_ = value;
}
inline double GetLiveReadsRequest_StreamSetup::max_unblock_read_length_seconds() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.StreamSetup.max_unblock_read_length_seconds)
  return _internal_max_unblock_read_length_seconds();
}
inline void GetLiveReadsRequest_StreamSetup::set_max_unblock_read_length_seconds(double value) {
  _internal_set_max_unblock_read_length_seconds(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsRequest.StreamSetup.max_unblock_read_length_seconds)
}

inline bool GetLiveReadsRequest_StreamSetup::has_max_unblock_read_length() const {
  return max_unblock_read_length_case() != MAX_UNBLOCK_READ_LENGTH_NOT_SET;
}
inline void GetLiveReadsRequest_StreamSetup::clear_has_max_unblock_read_length() {
  _oneof_case_[0] = MAX_UNBLOCK_READ_LENGTH_NOT_SET;
}
inline GetLiveReadsRequest_StreamSetup::MaxUnblockReadLengthCase GetLiveReadsRequest_StreamSetup::max_unblock_read_length_case() const {
  return GetLiveReadsRequest_StreamSetup::MaxUnblockReadLengthCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetLiveReadsRequest_Actions

// repeated .minknow_api.data.GetLiveReadsRequest.Action actions = 2;
inline int GetLiveReadsRequest_Actions::_internal_actions_size() const {
  return actions_.size();
}
inline int GetLiveReadsRequest_Actions::actions_size() const {
  return _internal_actions_size();
}
inline void GetLiveReadsRequest_Actions::clear_actions() {
  actions_.Clear();
}
inline ::minknow_api::data::GetLiveReadsRequest_Action* GetLiveReadsRequest_Actions::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsRequest.Actions.actions)
  return actions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsRequest_Action >*
GetLiveReadsRequest_Actions::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetLiveReadsRequest.Actions.actions)
  return &actions_;
}
inline const ::minknow_api::data::GetLiveReadsRequest_Action& GetLiveReadsRequest_Actions::_internal_actions(int index) const {
  return actions_.Get(index);
}
inline const ::minknow_api::data::GetLiveReadsRequest_Action& GetLiveReadsRequest_Actions::actions(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.Actions.actions)
  return _internal_actions(index);
}
inline ::minknow_api::data::GetLiveReadsRequest_Action* GetLiveReadsRequest_Actions::_internal_add_actions() {
  return actions_.Add();
}
inline ::minknow_api::data::GetLiveReadsRequest_Action* GetLiveReadsRequest_Actions::add_actions() {
  ::minknow_api::data::GetLiveReadsRequest_Action* _add = _internal_add_actions();
  // @@protoc_insertion_point(field_add:minknow_api.data.GetLiveReadsRequest.Actions.actions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsRequest_Action >&
GetLiveReadsRequest_Actions::actions() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetLiveReadsRequest.Actions.actions)
  return actions_;
}

// -------------------------------------------------------------------

// GetLiveReadsRequest

// .minknow_api.data.GetLiveReadsRequest.StreamSetup setup = 1;
inline bool GetLiveReadsRequest::_internal_has_setup() const {
  return request_case() == kSetup;
}
inline bool GetLiveReadsRequest::has_setup() const {
  return _internal_has_setup();
}
inline void GetLiveReadsRequest::set_has_setup() {
  _oneof_case_[0] = kSetup;
}
inline void GetLiveReadsRequest::clear_setup() {
  if (_internal_has_setup()) {
    if (GetArenaForAllocation() == nullptr) {
      delete request_.setup_;
    }
    clear_has_request();
  }
}
inline ::minknow_api::data::GetLiveReadsRequest_StreamSetup* GetLiveReadsRequest::release_setup() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetLiveReadsRequest.setup)
  if (_internal_has_setup()) {
    clear_has_request();
      ::minknow_api::data::GetLiveReadsRequest_StreamSetup* temp = request_.setup_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    request_.setup_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::minknow_api::data::GetLiveReadsRequest_StreamSetup& GetLiveReadsRequest::_internal_setup() const {
  return _internal_has_setup()
      ? *request_.setup_
      : reinterpret_cast< ::minknow_api::data::GetLiveReadsRequest_StreamSetup&>(::minknow_api::data::_GetLiveReadsRequest_StreamSetup_default_instance_);
}
inline const ::minknow_api::data::GetLiveReadsRequest_StreamSetup& GetLiveReadsRequest::setup() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.setup)
  return _internal_setup();
}
inline ::minknow_api::data::GetLiveReadsRequest_StreamSetup* GetLiveReadsRequest::unsafe_arena_release_setup() {
  // @@protoc_insertion_point(field_unsafe_arena_release:minknow_api.data.GetLiveReadsRequest.setup)
  if (_internal_has_setup()) {
    clear_has_request();
    ::minknow_api::data::GetLiveReadsRequest_StreamSetup* temp = request_.setup_;
    request_.setup_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetLiveReadsRequest::unsafe_arena_set_allocated_setup(::minknow_api::data::GetLiveReadsRequest_StreamSetup* setup) {
  clear_request();
  if (setup) {
    set_has_setup();
    request_.setup_ = setup;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetLiveReadsRequest.setup)
}
inline ::minknow_api::data::GetLiveReadsRequest_StreamSetup* GetLiveReadsRequest::_internal_mutable_setup() {
  if (!_internal_has_setup()) {
    clear_request();
    set_has_setup();
    request_.setup_ = CreateMaybeMessage< ::minknow_api::data::GetLiveReadsRequest_StreamSetup >(GetArenaForAllocation());
  }
  return request_.setup_;
}
inline ::minknow_api::data::GetLiveReadsRequest_StreamSetup* GetLiveReadsRequest::mutable_setup() {
  ::minknow_api::data::GetLiveReadsRequest_StreamSetup* _msg = _internal_mutable_setup();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsRequest.setup)
  return _msg;
}

// .minknow_api.data.GetLiveReadsRequest.Actions actions = 2;
inline bool GetLiveReadsRequest::_internal_has_actions() const {
  return request_case() == kActions;
}
inline bool GetLiveReadsRequest::has_actions() const {
  return _internal_has_actions();
}
inline void GetLiveReadsRequest::set_has_actions() {
  _oneof_case_[0] = kActions;
}
inline void GetLiveReadsRequest::clear_actions() {
  if (_internal_has_actions()) {
    if (GetArenaForAllocation() == nullptr) {
      delete request_.actions_;
    }
    clear_has_request();
  }
}
inline ::minknow_api::data::GetLiveReadsRequest_Actions* GetLiveReadsRequest::release_actions() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetLiveReadsRequest.actions)
  if (_internal_has_actions()) {
    clear_has_request();
      ::minknow_api::data::GetLiveReadsRequest_Actions* temp = request_.actions_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    request_.actions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::minknow_api::data::GetLiveReadsRequest_Actions& GetLiveReadsRequest::_internal_actions() const {
  return _internal_has_actions()
      ? *request_.actions_
      : reinterpret_cast< ::minknow_api::data::GetLiveReadsRequest_Actions&>(::minknow_api::data::_GetLiveReadsRequest_Actions_default_instance_);
}
inline const ::minknow_api::data::GetLiveReadsRequest_Actions& GetLiveReadsRequest::actions() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsRequest.actions)
  return _internal_actions();
}
inline ::minknow_api::data::GetLiveReadsRequest_Actions* GetLiveReadsRequest::unsafe_arena_release_actions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:minknow_api.data.GetLiveReadsRequest.actions)
  if (_internal_has_actions()) {
    clear_has_request();
    ::minknow_api::data::GetLiveReadsRequest_Actions* temp = request_.actions_;
    request_.actions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetLiveReadsRequest::unsafe_arena_set_allocated_actions(::minknow_api::data::GetLiveReadsRequest_Actions* actions) {
  clear_request();
  if (actions) {
    set_has_actions();
    request_.actions_ = actions;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetLiveReadsRequest.actions)
}
inline ::minknow_api::data::GetLiveReadsRequest_Actions* GetLiveReadsRequest::_internal_mutable_actions() {
  if (!_internal_has_actions()) {
    clear_request();
    set_has_actions();
    request_.actions_ = CreateMaybeMessage< ::minknow_api::data::GetLiveReadsRequest_Actions >(GetArenaForAllocation());
  }
  return request_.actions_;
}
inline ::minknow_api::data::GetLiveReadsRequest_Actions* GetLiveReadsRequest::mutable_actions() {
  ::minknow_api::data::GetLiveReadsRequest_Actions* _msg = _internal_mutable_actions();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsRequest.actions)
  return _msg;
}

inline bool GetLiveReadsRequest::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void GetLiveReadsRequest::clear_has_request() {
  _oneof_case_[0] = REQUEST_NOT_SET;
}
inline GetLiveReadsRequest::RequestCase GetLiveReadsRequest::request_case() const {
  return GetLiveReadsRequest::RequestCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetLiveReadsResponse_ReadData

// string id = 1;
inline void GetLiveReadsResponse_ReadData::clear_id() {
  id_.ClearToEmpty();
}
inline const std::string& GetLiveReadsResponse_ReadData::id() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ReadData.id)
  return _internal_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetLiveReadsResponse_ReadData::set_id(ArgT0&& arg0, ArgT... args) {
 
 id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ReadData.id)
}
inline std::string* GetLiveReadsResponse_ReadData::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsResponse.ReadData.id)
  return _s;
}
inline const std::string& GetLiveReadsResponse_ReadData::_internal_id() const {
  return id_.Get();
}
inline void GetLiveReadsResponse_ReadData::_internal_set_id(const std::string& value) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetLiveReadsResponse_ReadData::_internal_mutable_id() {
  
  return id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetLiveReadsResponse_ReadData::release_id() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetLiveReadsResponse.ReadData.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetLiveReadsResponse_ReadData::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetLiveReadsResponse.ReadData.id)
}

// uint32 number = 2;
inline void GetLiveReadsResponse_ReadData::clear_number() {
  number_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsResponse_ReadData::_internal_number() const {
  return number_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetLiveReadsResponse_ReadData::number() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ReadData.number)
  return _internal_number();
}
inline void GetLiveReadsResponse_ReadData::_internal_set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  number_ = value;
}
inline void GetLiveReadsResponse_ReadData::set_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ReadData.number)
}

// uint64 start_sample = 3;
inline void GetLiveReadsResponse_ReadData::clear_start_sample() {
  start_sample_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsResponse_ReadData::_internal_start_sample() const {
  return start_sample_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsResponse_ReadData::start_sample() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ReadData.start_sample)
  return _internal_start_sample();
}
inline void GetLiveReadsResponse_ReadData::_internal_set_start_sample(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  start_sample_ = value;
}
inline void GetLiveReadsResponse_ReadData::set_start_sample(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_start_sample(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ReadData.start_sample)
}

// uint64 chunk_start_sample = 4;
inline void GetLiveReadsResponse_ReadData::clear_chunk_start_sample() {
  chunk_start_sample_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsResponse_ReadData::_internal_chunk_start_sample() const {
  return chunk_start_sample_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsResponse_ReadData::chunk_start_sample() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ReadData.chunk_start_sample)
  return _internal_chunk_start_sample();
}
inline void GetLiveReadsResponse_ReadData::_internal_set_chunk_start_sample(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  chunk_start_sample_ = value;
}
inline void GetLiveReadsResponse_ReadData::set_chunk_start_sample(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_chunk_start_sample(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ReadData.chunk_start_sample)
}

// uint64 chunk_length = 5;
inline void GetLiveReadsResponse_ReadData::clear_chunk_length() {
  chunk_length_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsResponse_ReadData::_internal_chunk_length() const {
  return chunk_length_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsResponse_ReadData::chunk_length() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ReadData.chunk_length)
  return _internal_chunk_length();
}
inline void GetLiveReadsResponse_ReadData::_internal_set_chunk_length(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  chunk_length_ = value;
}
inline void GetLiveReadsResponse_ReadData::set_chunk_length(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_chunk_length(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ReadData.chunk_length)
}

// repeated int32 chunk_classifications = 6;
inline int GetLiveReadsResponse_ReadData::_internal_chunk_classifications_size() const {
  return chunk_classifications_.size();
}
inline int GetLiveReadsResponse_ReadData::chunk_classifications_size() const {
  return _internal_chunk_classifications_size();
}
inline void GetLiveReadsResponse_ReadData::clear_chunk_classifications() {
  chunk_classifications_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetLiveReadsResponse_ReadData::_internal_chunk_classifications(int index) const {
  return chunk_classifications_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetLiveReadsResponse_ReadData::chunk_classifications(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ReadData.chunk_classifications)
  return _internal_chunk_classifications(index);
}
inline void GetLiveReadsResponse_ReadData::set_chunk_classifications(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  chunk_classifications_.Set(index, value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ReadData.chunk_classifications)
}
inline void GetLiveReadsResponse_ReadData::_internal_add_chunk_classifications(::PROTOBUF_NAMESPACE_ID::int32 value) {
  chunk_classifications_.Add(value);
}
inline void GetLiveReadsResponse_ReadData::add_chunk_classifications(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_chunk_classifications(value);
  // @@protoc_insertion_point(field_add:minknow_api.data.GetLiveReadsResponse.ReadData.chunk_classifications)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GetLiveReadsResponse_ReadData::_internal_chunk_classifications() const {
  return chunk_classifications_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GetLiveReadsResponse_ReadData::chunk_classifications() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetLiveReadsResponse.ReadData.chunk_classifications)
  return _internal_chunk_classifications();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GetLiveReadsResponse_ReadData::_internal_mutable_chunk_classifications() {
  return &chunk_classifications_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GetLiveReadsResponse_ReadData::mutable_chunk_classifications() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetLiveReadsResponse.ReadData.chunk_classifications)
  return _internal_mutable_chunk_classifications();
}

// bytes raw_data = 7;
inline void GetLiveReadsResponse_ReadData::clear_raw_data() {
  raw_data_.ClearToEmpty();
}
inline const std::string& GetLiveReadsResponse_ReadData::raw_data() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ReadData.raw_data)
  return _internal_raw_data();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetLiveReadsResponse_ReadData::set_raw_data(ArgT0&& arg0, ArgT... args) {
 
 raw_data_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ReadData.raw_data)
}
inline std::string* GetLiveReadsResponse_ReadData::mutable_raw_data() {
  std::string* _s = _internal_mutable_raw_data();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsResponse.ReadData.raw_data)
  return _s;
}
inline const std::string& GetLiveReadsResponse_ReadData::_internal_raw_data() const {
  return raw_data_.Get();
}
inline void GetLiveReadsResponse_ReadData::_internal_set_raw_data(const std::string& value) {
  
  raw_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetLiveReadsResponse_ReadData::_internal_mutable_raw_data() {
  
  return raw_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetLiveReadsResponse_ReadData::release_raw_data() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetLiveReadsResponse.ReadData.raw_data)
  return raw_data_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetLiveReadsResponse_ReadData::set_allocated_raw_data(std::string* raw_data) {
  if (raw_data != nullptr) {
    
  } else {
    
  }
  raw_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), raw_data,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetLiveReadsResponse.ReadData.raw_data)
}

// float median_before = 8;
inline void GetLiveReadsResponse_ReadData::clear_median_before() {
  median_before_ = 0;
}
inline float GetLiveReadsResponse_ReadData::_internal_median_before() const {
  return median_before_;
}
inline float GetLiveReadsResponse_ReadData::median_before() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ReadData.median_before)
  return _internal_median_before();
}
inline void GetLiveReadsResponse_ReadData::_internal_set_median_before(float value) {
  
  median_before_ = value;
}
inline void GetLiveReadsResponse_ReadData::set_median_before(float value) {
  _internal_set_median_before(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ReadData.median_before)
}

// float median = 9;
inline void GetLiveReadsResponse_ReadData::clear_median() {
  median_ = 0;
}
inline float GetLiveReadsResponse_ReadData::_internal_median() const {
  return median_;
}
inline float GetLiveReadsResponse_ReadData::median() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ReadData.median)
  return _internal_median();
}
inline void GetLiveReadsResponse_ReadData::_internal_set_median(float value) {
  
  median_ = value;
}
inline void GetLiveReadsResponse_ReadData::set_median(float value) {
  _internal_set_median(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ReadData.median)
}

// -------------------------------------------------------------------

// GetLiveReadsResponse_ActionResponse

// string action_id = 1;
inline void GetLiveReadsResponse_ActionResponse::clear_action_id() {
  action_id_.ClearToEmpty();
}
inline const std::string& GetLiveReadsResponse_ActionResponse::action_id() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ActionResponse.action_id)
  return _internal_action_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetLiveReadsResponse_ActionResponse::set_action_id(ArgT0&& arg0, ArgT... args) {
 
 action_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ActionResponse.action_id)
}
inline std::string* GetLiveReadsResponse_ActionResponse::mutable_action_id() {
  std::string* _s = _internal_mutable_action_id();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsResponse.ActionResponse.action_id)
  return _s;
}
inline const std::string& GetLiveReadsResponse_ActionResponse::_internal_action_id() const {
  return action_id_.Get();
}
inline void GetLiveReadsResponse_ActionResponse::_internal_set_action_id(const std::string& value) {
  
  action_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* GetLiveReadsResponse_ActionResponse::_internal_mutable_action_id() {
  
  return action_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* GetLiveReadsResponse_ActionResponse::release_action_id() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetLiveReadsResponse.ActionResponse.action_id)
  return action_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void GetLiveReadsResponse_ActionResponse::set_allocated_action_id(std::string* action_id) {
  if (action_id != nullptr) {
    
  } else {
    
  }
  action_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), action_id,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetLiveReadsResponse.ActionResponse.action_id)
}

// .minknow_api.data.GetLiveReadsResponse.ActionResponse.Response response = 2;
inline void GetLiveReadsResponse_ActionResponse::clear_response() {
  response_ = 0;
}
inline ::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response GetLiveReadsResponse_ActionResponse::_internal_response() const {
  return static_cast< ::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response >(response_);
}
inline ::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response GetLiveReadsResponse_ActionResponse::response() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.ActionResponse.response)
  return _internal_response();
}
inline void GetLiveReadsResponse_ActionResponse::_internal_set_response(::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response value) {
  
  response_ = value;
}
inline void GetLiveReadsResponse_ActionResponse::set_response(::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.ActionResponse.response)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetLiveReadsResponse

// uint64 samples_since_start = 1;
inline void GetLiveReadsResponse::clear_samples_since_start() {
  samples_since_start_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsResponse::_internal_samples_since_start() const {
  return samples_since_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetLiveReadsResponse::samples_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.samples_since_start)
  return _internal_samples_since_start();
}
inline void GetLiveReadsResponse::_internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samples_since_start_ = value;
}
inline void GetLiveReadsResponse::set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.samples_since_start)
}

// double seconds_since_start = 2;
inline void GetLiveReadsResponse::clear_seconds_since_start() {
  seconds_since_start_ = 0;
}
inline double GetLiveReadsResponse::_internal_seconds_since_start() const {
  return seconds_since_start_;
}
inline double GetLiveReadsResponse::seconds_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.seconds_since_start)
  return _internal_seconds_since_start();
}
inline void GetLiveReadsResponse::_internal_set_seconds_since_start(double value) {
  
  seconds_since_start_ = value;
}
inline void GetLiveReadsResponse::set_seconds_since_start(double value) {
  _internal_set_seconds_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetLiveReadsResponse.seconds_since_start)
}

// map<uint32, .minknow_api.data.GetLiveReadsResponse.ReadData> channels = 4;
inline int GetLiveReadsResponse::_internal_channels_size() const {
  return channels_.size();
}
inline int GetLiveReadsResponse::channels_size() const {
  return _internal_channels_size();
}
inline void GetLiveReadsResponse::clear_channels() {
  channels_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData >&
GetLiveReadsResponse::_internal_channels() const {
  return channels_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData >&
GetLiveReadsResponse::channels() const {
  // @@protoc_insertion_point(field_map:minknow_api.data.GetLiveReadsResponse.channels)
  return _internal_channels();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData >*
GetLiveReadsResponse::_internal_mutable_channels() {
  return channels_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::minknow_api::data::GetLiveReadsResponse_ReadData >*
GetLiveReadsResponse::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_map:minknow_api.data.GetLiveReadsResponse.channels)
  return _internal_mutable_channels();
}

// repeated .minknow_api.data.GetLiveReadsResponse.ActionResponse action_responses = 5;
inline int GetLiveReadsResponse::_internal_action_responses_size() const {
  return action_responses_.size();
}
inline int GetLiveReadsResponse::action_responses_size() const {
  return _internal_action_responses_size();
}
inline void GetLiveReadsResponse::clear_action_responses() {
  action_responses_.Clear();
}
inline ::minknow_api::data::GetLiveReadsResponse_ActionResponse* GetLiveReadsResponse::mutable_action_responses(int index) {
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetLiveReadsResponse.action_responses)
  return action_responses_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsResponse_ActionResponse >*
GetLiveReadsResponse::mutable_action_responses() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetLiveReadsResponse.action_responses)
  return &action_responses_;
}
inline const ::minknow_api::data::GetLiveReadsResponse_ActionResponse& GetLiveReadsResponse::_internal_action_responses(int index) const {
  return action_responses_.Get(index);
}
inline const ::minknow_api::data::GetLiveReadsResponse_ActionResponse& GetLiveReadsResponse::action_responses(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetLiveReadsResponse.action_responses)
  return _internal_action_responses(index);
}
inline ::minknow_api::data::GetLiveReadsResponse_ActionResponse* GetLiveReadsResponse::_internal_add_action_responses() {
  return action_responses_.Add();
}
inline ::minknow_api::data::GetLiveReadsResponse_ActionResponse* GetLiveReadsResponse::add_action_responses() {
  ::minknow_api::data::GetLiveReadsResponse_ActionResponse* _add = _internal_add_action_responses();
  // @@protoc_insertion_point(field_add:minknow_api.data.GetLiveReadsResponse.action_responses)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetLiveReadsResponse_ActionResponse >&
GetLiveReadsResponse::action_responses() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetLiveReadsResponse.action_responses)
  return action_responses_;
}

// -------------------------------------------------------------------

// ResetChannelStatesRequest

// -------------------------------------------------------------------

// ResetChannelStatesResponse

// -------------------------------------------------------------------

// GetReadStatisticsRequest

// repeated uint32 channels = 1;
inline int GetReadStatisticsRequest::_internal_channels_size() const {
  return channels_.size();
}
inline int GetReadStatisticsRequest::channels_size() const {
  return _internal_channels_size();
}
inline void GetReadStatisticsRequest::clear_channels() {
  channels_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetReadStatisticsRequest::_internal_channels(int index) const {
  return channels_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetReadStatisticsRequest::channels(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsRequest.channels)
  return _internal_channels(index);
}
inline void GetReadStatisticsRequest::set_channels(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  channels_.Set(index, value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsRequest.channels)
}
inline void GetReadStatisticsRequest::_internal_add_channels(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  channels_.Add(value);
}
inline void GetReadStatisticsRequest::add_channels(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_channels(value);
  // @@protoc_insertion_point(field_add:minknow_api.data.GetReadStatisticsRequest.channels)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
GetReadStatisticsRequest::_internal_channels() const {
  return channels_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
GetReadStatisticsRequest::channels() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetReadStatisticsRequest.channels)
  return _internal_channels();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
GetReadStatisticsRequest::_internal_mutable_channels() {
  return &channels_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
GetReadStatisticsRequest::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetReadStatisticsRequest.channels)
  return _internal_mutable_channels();
}

// float seconds = 2;
inline bool GetReadStatisticsRequest::_internal_has_seconds() const {
  return duration_case() == kSeconds;
}
inline bool GetReadStatisticsRequest::has_seconds() const {
  return _internal_has_seconds();
}
inline void GetReadStatisticsRequest::set_has_seconds() {
  _oneof_case_[0] = kSeconds;
}
inline void GetReadStatisticsRequest::clear_seconds() {
  if (_internal_has_seconds()) {
    duration_.seconds_ = 0;
    clear_has_duration();
  }
}
inline float GetReadStatisticsRequest::_internal_seconds() const {
  if (_internal_has_seconds()) {
    return duration_.seconds_;
  }
  return 0;
}
inline void GetReadStatisticsRequest::_internal_set_seconds(float value) {
  if (!_internal_has_seconds()) {
    clear_duration();
    set_has_seconds();
  }
  duration_.seconds_ = value;
}
inline float GetReadStatisticsRequest::seconds() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsRequest.seconds)
  return _internal_seconds();
}
inline void GetReadStatisticsRequest::set_seconds(float value) {
  _internal_set_seconds(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsRequest.seconds)
}

// uint64 samples = 3;
inline bool GetReadStatisticsRequest::_internal_has_samples() const {
  return duration_case() == kSamples;
}
inline bool GetReadStatisticsRequest::has_samples() const {
  return _internal_has_samples();
}
inline void GetReadStatisticsRequest::set_has_samples() {
  _oneof_case_[0] = kSamples;
}
inline void GetReadStatisticsRequest::clear_samples() {
  if (_internal_has_samples()) {
    duration_.samples_ = uint64_t{0u};
    clear_has_duration();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsRequest::_internal_samples() const {
  if (_internal_has_samples()) {
    return duration_.samples_;
  }
  return uint64_t{0u};
}
inline void GetReadStatisticsRequest::_internal_set_samples(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  if (!_internal_has_samples()) {
    clear_duration();
    set_has_samples();
  }
  duration_.samples_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsRequest::samples() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsRequest.samples)
  return _internal_samples();
}
inline void GetReadStatisticsRequest::set_samples(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsRequest.samples)
}

// .minknow_api.data.GetReadStatisticsRequest.ReadSplit read_split = 4 [(.minknow_api.rpc_required) = true];
inline void GetReadStatisticsRequest::clear_read_split() {
  read_split_ = 0;
}
inline ::minknow_api::data::GetReadStatisticsRequest_ReadSplit GetReadStatisticsRequest::_internal_read_split() const {
  return static_cast< ::minknow_api::data::GetReadStatisticsRequest_ReadSplit >(read_split_);
}
inline ::minknow_api::data::GetReadStatisticsRequest_ReadSplit GetReadStatisticsRequest::read_split() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsRequest.read_split)
  return _internal_read_split();
}
inline void GetReadStatisticsRequest::_internal_set_read_split(::minknow_api::data::GetReadStatisticsRequest_ReadSplit value) {
  
  read_split_ = value;
}
inline void GetReadStatisticsRequest::set_read_split(::minknow_api::data::GetReadStatisticsRequest_ReadSplit value) {
  _internal_set_read_split(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsRequest.read_split)
}

// bool no_current_statistics = 5;
inline void GetReadStatisticsRequest::clear_no_current_statistics() {
  no_current_statistics_ = false;
}
inline bool GetReadStatisticsRequest::_internal_no_current_statistics() const {
  return no_current_statistics_;
}
inline bool GetReadStatisticsRequest::no_current_statistics() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsRequest.no_current_statistics)
  return _internal_no_current_statistics();
}
inline void GetReadStatisticsRequest::_internal_set_no_current_statistics(bool value) {
  
  no_current_statistics_ = value;
}
inline void GetReadStatisticsRequest::set_no_current_statistics(bool value) {
  _internal_set_no_current_statistics(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsRequest.no_current_statistics)
}

// bool no_chunk_statistics = 6;
inline void GetReadStatisticsRequest::clear_no_chunk_statistics() {
  no_chunk_statistics_ = false;
}
inline bool GetReadStatisticsRequest::_internal_no_chunk_statistics() const {
  return no_chunk_statistics_;
}
inline bool GetReadStatisticsRequest::no_chunk_statistics() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsRequest.no_chunk_statistics)
  return _internal_no_chunk_statistics();
}
inline void GetReadStatisticsRequest::_internal_set_no_chunk_statistics(bool value) {
  
  no_chunk_statistics_ = value;
}
inline void GetReadStatisticsRequest::set_no_chunk_statistics(bool value) {
  _internal_set_no_chunk_statistics(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsRequest.no_chunk_statistics)
}

// repeated string required_classifications = 7;
inline int GetReadStatisticsRequest::_internal_required_classifications_size() const {
  return required_classifications_.size();
}
inline int GetReadStatisticsRequest::required_classifications_size() const {
  return _internal_required_classifications_size();
}
inline void GetReadStatisticsRequest::clear_required_classifications() {
  required_classifications_.Clear();
}
inline std::string* GetReadStatisticsRequest::add_required_classifications() {
  std::string* _s = _internal_add_required_classifications();
  // @@protoc_insertion_point(field_add_mutable:minknow_api.data.GetReadStatisticsRequest.required_classifications)
  return _s;
}
inline const std::string& GetReadStatisticsRequest::_internal_required_classifications(int index) const {
  return required_classifications_.Get(index);
}
inline const std::string& GetReadStatisticsRequest::required_classifications(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsRequest.required_classifications)
  return _internal_required_classifications(index);
}
inline std::string* GetReadStatisticsRequest::mutable_required_classifications(int index) {
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetReadStatisticsRequest.required_classifications)
  return required_classifications_.Mutable(index);
}
inline void GetReadStatisticsRequest::set_required_classifications(int index, const std::string& value) {
  required_classifications_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsRequest.required_classifications)
}
inline void GetReadStatisticsRequest::set_required_classifications(int index, std::string&& value) {
  required_classifications_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsRequest.required_classifications)
}
inline void GetReadStatisticsRequest::set_required_classifications(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  required_classifications_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:minknow_api.data.GetReadStatisticsRequest.required_classifications)
}
inline void GetReadStatisticsRequest::set_required_classifications(int index, const char* value, size_t size) {
  required_classifications_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:minknow_api.data.GetReadStatisticsRequest.required_classifications)
}
inline std::string* GetReadStatisticsRequest::_internal_add_required_classifications() {
  return required_classifications_.Add();
}
inline void GetReadStatisticsRequest::add_required_classifications(const std::string& value) {
  required_classifications_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:minknow_api.data.GetReadStatisticsRequest.required_classifications)
}
inline void GetReadStatisticsRequest::add_required_classifications(std::string&& value) {
  required_classifications_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:minknow_api.data.GetReadStatisticsRequest.required_classifications)
}
inline void GetReadStatisticsRequest::add_required_classifications(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  required_classifications_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:minknow_api.data.GetReadStatisticsRequest.required_classifications)
}
inline void GetReadStatisticsRequest::add_required_classifications(const char* value, size_t size) {
  required_classifications_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:minknow_api.data.GetReadStatisticsRequest.required_classifications)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetReadStatisticsRequest::required_classifications() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetReadStatisticsRequest.required_classifications)
  return required_classifications_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetReadStatisticsRequest::mutable_required_classifications() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetReadStatisticsRequest.required_classifications)
  return &required_classifications_;
}

inline bool GetReadStatisticsRequest::has_duration() const {
  return duration_case() != DURATION_NOT_SET;
}
inline void GetReadStatisticsRequest::clear_has_duration() {
  _oneof_case_[0] = DURATION_NOT_SET;
}
inline GetReadStatisticsRequest::DurationCase GetReadStatisticsRequest::duration_case() const {
  return GetReadStatisticsRequest::DurationCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetReadStatisticsResponse_Statistics

// double min = 1;
inline void GetReadStatisticsResponse_Statistics::clear_min() {
  min_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_min() const {
  return min_;
}
inline double GetReadStatisticsResponse_Statistics::min() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.min)
  return _internal_min();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_min(double value) {
  
  min_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_min(double value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.min)
}

// double max = 2;
inline void GetReadStatisticsResponse_Statistics::clear_max() {
  max_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_max() const {
  return max_;
}
inline double GetReadStatisticsResponse_Statistics::max() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.max)
  return _internal_max();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_max(double value) {
  
  max_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_max(double value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.max)
}

// double mean = 3;
inline void GetReadStatisticsResponse_Statistics::clear_mean() {
  mean_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_mean() const {
  return mean_;
}
inline double GetReadStatisticsResponse_Statistics::mean() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.mean)
  return _internal_mean();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_mean(double value) {
  
  mean_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_mean(double value) {
  _internal_set_mean(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.mean)
}

// double s_d = 4;
inline void GetReadStatisticsResponse_Statistics::clear_s_d() {
  s_d_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_s_d() const {
  return s_d_;
}
inline double GetReadStatisticsResponse_Statistics::s_d() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.s_d)
  return _internal_s_d();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_s_d(double value) {
  
  s_d_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_s_d(double value) {
  _internal_set_s_d(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.s_d)
}

// double median = 6;
inline void GetReadStatisticsResponse_Statistics::clear_median() {
  median_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_median() const {
  return median_;
}
inline double GetReadStatisticsResponse_Statistics::median() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.median)
  return _internal_median();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_median(double value) {
  
  median_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_median(double value) {
  _internal_set_median(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.median)
}

// double q_5 = 7;
inline void GetReadStatisticsResponse_Statistics::clear_q_5() {
  q_5_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_q_5() const {
  return q_5_;
}
inline double GetReadStatisticsResponse_Statistics::q_5() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.q_5)
  return _internal_q_5();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_q_5(double value) {
  
  q_5_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_q_5(double value) {
  _internal_set_q_5(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.q_5)
}

// double q_10 = 8;
inline void GetReadStatisticsResponse_Statistics::clear_q_10() {
  q_10_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_q_10() const {
  return q_10_;
}
inline double GetReadStatisticsResponse_Statistics::q_10() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.q_10)
  return _internal_q_10();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_q_10(double value) {
  
  q_10_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_q_10(double value) {
  _internal_set_q_10(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.q_10)
}

// double q_25 = 9;
inline void GetReadStatisticsResponse_Statistics::clear_q_25() {
  q_25_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_q_25() const {
  return q_25_;
}
inline double GetReadStatisticsResponse_Statistics::q_25() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.q_25)
  return _internal_q_25();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_q_25(double value) {
  
  q_25_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_q_25(double value) {
  _internal_set_q_25(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.q_25)
}

// double q_75 = 10;
inline void GetReadStatisticsResponse_Statistics::clear_q_75() {
  q_75_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_q_75() const {
  return q_75_;
}
inline double GetReadStatisticsResponse_Statistics::q_75() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.q_75)
  return _internal_q_75();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_q_75(double value) {
  
  q_75_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_q_75(double value) {
  _internal_set_q_75(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.q_75)
}

// double q_90 = 11;
inline void GetReadStatisticsResponse_Statistics::clear_q_90() {
  q_90_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_q_90() const {
  return q_90_;
}
inline double GetReadStatisticsResponse_Statistics::q_90() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.q_90)
  return _internal_q_90();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_q_90(double value) {
  
  q_90_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_q_90(double value) {
  _internal_set_q_90(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.q_90)
}

// double q_95 = 12;
inline void GetReadStatisticsResponse_Statistics::clear_q_95() {
  q_95_ = 0;
}
inline double GetReadStatisticsResponse_Statistics::_internal_q_95() const {
  return q_95_;
}
inline double GetReadStatisticsResponse_Statistics::q_95() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.Statistics.q_95)
  return _internal_q_95();
}
inline void GetReadStatisticsResponse_Statistics::_internal_set_q_95(double value) {
  
  q_95_ = value;
}
inline void GetReadStatisticsResponse_Statistics::set_q_95(double value) {
  _internal_set_q_95(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.Statistics.q_95)
}

// -------------------------------------------------------------------

// GetReadStatisticsResponse_ChunkStatistics

// double median_sd = 1;
inline void GetReadStatisticsResponse_ChunkStatistics::clear_median_sd() {
  median_sd_ = 0;
}
inline double GetReadStatisticsResponse_ChunkStatistics::_internal_median_sd() const {
  return median_sd_;
}
inline double GetReadStatisticsResponse_ChunkStatistics::median_sd() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.ChunkStatistics.median_sd)
  return _internal_median_sd();
}
inline void GetReadStatisticsResponse_ChunkStatistics::_internal_set_median_sd(double value) {
  
  median_sd_ = value;
}
inline void GetReadStatisticsResponse_ChunkStatistics::set_median_sd(double value) {
  _internal_set_median_sd(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.ChunkStatistics.median_sd)
}

// double median = 2;
inline void GetReadStatisticsResponse_ChunkStatistics::clear_median() {
  median_ = 0;
}
inline double GetReadStatisticsResponse_ChunkStatistics::_internal_median() const {
  return median_;
}
inline double GetReadStatisticsResponse_ChunkStatistics::median() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.ChunkStatistics.median)
  return _internal_median();
}
inline void GetReadStatisticsResponse_ChunkStatistics::_internal_set_median(double value) {
  
  median_ = value;
}
inline void GetReadStatisticsResponse_ChunkStatistics::set_median(double value) {
  _internal_set_median(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.ChunkStatistics.median)
}

// double range = 3;
inline void GetReadStatisticsResponse_ChunkStatistics::clear_range() {
  range_ = 0;
}
inline double GetReadStatisticsResponse_ChunkStatistics::_internal_range() const {
  return range_;
}
inline double GetReadStatisticsResponse_ChunkStatistics::range() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.ChunkStatistics.range)
  return _internal_range();
}
inline void GetReadStatisticsResponse_ChunkStatistics::_internal_set_range(double value) {
  
  range_ = value;
}
inline void GetReadStatisticsResponse_ChunkStatistics::set_range(double value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.ChunkStatistics.range)
}

// -------------------------------------------------------------------

// GetReadStatisticsResponse_PerClassificationData

// .minknow_api.data.GetReadStatisticsResponse.Statistics duration_statistics = 1;
inline bool GetReadStatisticsResponse_PerClassificationData::_internal_has_duration_statistics() const {
  return this != internal_default_instance() && duration_statistics_ != nullptr;
}
inline bool GetReadStatisticsResponse_PerClassificationData::has_duration_statistics() const {
  return _internal_has_duration_statistics();
}
inline void GetReadStatisticsResponse_PerClassificationData::clear_duration_statistics() {
  if (GetArenaForAllocation() == nullptr && duration_statistics_ != nullptr) {
    delete duration_statistics_;
  }
  duration_statistics_ = nullptr;
}
inline const ::minknow_api::data::GetReadStatisticsResponse_Statistics& GetReadStatisticsResponse_PerClassificationData::_internal_duration_statistics() const {
  const ::minknow_api::data::GetReadStatisticsResponse_Statistics* p = duration_statistics_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetReadStatisticsResponse_Statistics&>(
      ::minknow_api::data::_GetReadStatisticsResponse_Statistics_default_instance_);
}
inline const ::minknow_api::data::GetReadStatisticsResponse_Statistics& GetReadStatisticsResponse_PerClassificationData::duration_statistics() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.duration_statistics)
  return _internal_duration_statistics();
}
inline void GetReadStatisticsResponse_PerClassificationData::unsafe_arena_set_allocated_duration_statistics(
    ::minknow_api::data::GetReadStatisticsResponse_Statistics* duration_statistics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration_statistics_);
  }
  duration_statistics_ = duration_statistics;
  if (duration_statistics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.duration_statistics)
}
inline ::minknow_api::data::GetReadStatisticsResponse_Statistics* GetReadStatisticsResponse_PerClassificationData::release_duration_statistics() {
  
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* temp = duration_statistics_;
  duration_statistics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetReadStatisticsResponse_Statistics* GetReadStatisticsResponse_PerClassificationData::unsafe_arena_release_duration_statistics() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.duration_statistics)
  
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* temp = duration_statistics_;
  duration_statistics_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetReadStatisticsResponse_Statistics* GetReadStatisticsResponse_PerClassificationData::_internal_mutable_duration_statistics() {
  
  if (duration_statistics_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_Statistics>(GetArenaForAllocation());
    duration_statistics_ = p;
  }
  return duration_statistics_;
}
inline ::minknow_api::data::GetReadStatisticsResponse_Statistics* GetReadStatisticsResponse_PerClassificationData::mutable_duration_statistics() {
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* _msg = _internal_mutable_duration_statistics();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.duration_statistics)
  return _msg;
}
inline void GetReadStatisticsResponse_PerClassificationData::set_allocated_duration_statistics(::minknow_api::data::GetReadStatisticsResponse_Statistics* duration_statistics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete duration_statistics_;
  }
  if (duration_statistics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetReadStatisticsResponse_Statistics>::GetOwningArena(duration_statistics);
    if (message_arena != submessage_arena) {
      duration_statistics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, duration_statistics, submessage_arena);
    }
    
  } else {
    
  }
  duration_statistics_ = duration_statistics;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.duration_statistics)
}

// .minknow_api.data.GetReadStatisticsResponse.Statistics current_statistics = 2;
inline bool GetReadStatisticsResponse_PerClassificationData::_internal_has_current_statistics() const {
  return this != internal_default_instance() && current_statistics_ != nullptr;
}
inline bool GetReadStatisticsResponse_PerClassificationData::has_current_statistics() const {
  return _internal_has_current_statistics();
}
inline void GetReadStatisticsResponse_PerClassificationData::clear_current_statistics() {
  if (GetArenaForAllocation() == nullptr && current_statistics_ != nullptr) {
    delete current_statistics_;
  }
  current_statistics_ = nullptr;
}
inline const ::minknow_api::data::GetReadStatisticsResponse_Statistics& GetReadStatisticsResponse_PerClassificationData::_internal_current_statistics() const {
  const ::minknow_api::data::GetReadStatisticsResponse_Statistics* p = current_statistics_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetReadStatisticsResponse_Statistics&>(
      ::minknow_api::data::_GetReadStatisticsResponse_Statistics_default_instance_);
}
inline const ::minknow_api::data::GetReadStatisticsResponse_Statistics& GetReadStatisticsResponse_PerClassificationData::current_statistics() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.current_statistics)
  return _internal_current_statistics();
}
inline void GetReadStatisticsResponse_PerClassificationData::unsafe_arena_set_allocated_current_statistics(
    ::minknow_api::data::GetReadStatisticsResponse_Statistics* current_statistics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(current_statistics_);
  }
  current_statistics_ = current_statistics;
  if (current_statistics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.current_statistics)
}
inline ::minknow_api::data::GetReadStatisticsResponse_Statistics* GetReadStatisticsResponse_PerClassificationData::release_current_statistics() {
  
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* temp = current_statistics_;
  current_statistics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetReadStatisticsResponse_Statistics* GetReadStatisticsResponse_PerClassificationData::unsafe_arena_release_current_statistics() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.current_statistics)
  
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* temp = current_statistics_;
  current_statistics_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetReadStatisticsResponse_Statistics* GetReadStatisticsResponse_PerClassificationData::_internal_mutable_current_statistics() {
  
  if (current_statistics_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_Statistics>(GetArenaForAllocation());
    current_statistics_ = p;
  }
  return current_statistics_;
}
inline ::minknow_api::data::GetReadStatisticsResponse_Statistics* GetReadStatisticsResponse_PerClassificationData::mutable_current_statistics() {
  ::minknow_api::data::GetReadStatisticsResponse_Statistics* _msg = _internal_mutable_current_statistics();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.current_statistics)
  return _msg;
}
inline void GetReadStatisticsResponse_PerClassificationData::set_allocated_current_statistics(::minknow_api::data::GetReadStatisticsResponse_Statistics* current_statistics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete current_statistics_;
  }
  if (current_statistics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetReadStatisticsResponse_Statistics>::GetOwningArena(current_statistics);
    if (message_arena != submessage_arena) {
      current_statistics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, current_statistics, submessage_arena);
    }
    
  } else {
    
  }
  current_statistics_ = current_statistics;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.current_statistics)
}

// .minknow_api.data.GetReadStatisticsResponse.ChunkStatistics chunk_statistics = 6;
inline bool GetReadStatisticsResponse_PerClassificationData::_internal_has_chunk_statistics() const {
  return this != internal_default_instance() && chunk_statistics_ != nullptr;
}
inline bool GetReadStatisticsResponse_PerClassificationData::has_chunk_statistics() const {
  return _internal_has_chunk_statistics();
}
inline void GetReadStatisticsResponse_PerClassificationData::clear_chunk_statistics() {
  if (GetArenaForAllocation() == nullptr && chunk_statistics_ != nullptr) {
    delete chunk_statistics_;
  }
  chunk_statistics_ = nullptr;
}
inline const ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics& GetReadStatisticsResponse_PerClassificationData::_internal_chunk_statistics() const {
  const ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* p = chunk_statistics_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics&>(
      ::minknow_api::data::_GetReadStatisticsResponse_ChunkStatistics_default_instance_);
}
inline const ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics& GetReadStatisticsResponse_PerClassificationData::chunk_statistics() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.chunk_statistics)
  return _internal_chunk_statistics();
}
inline void GetReadStatisticsResponse_PerClassificationData::unsafe_arena_set_allocated_chunk_statistics(
    ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* chunk_statistics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(chunk_statistics_);
  }
  chunk_statistics_ = chunk_statistics;
  if (chunk_statistics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.chunk_statistics)
}
inline ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* GetReadStatisticsResponse_PerClassificationData::release_chunk_statistics() {
  
  ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* temp = chunk_statistics_;
  chunk_statistics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* GetReadStatisticsResponse_PerClassificationData::unsafe_arena_release_chunk_statistics() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.chunk_statistics)
  
  ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* temp = chunk_statistics_;
  chunk_statistics_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* GetReadStatisticsResponse_PerClassificationData::_internal_mutable_chunk_statistics() {
  
  if (chunk_statistics_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics>(GetArenaForAllocation());
    chunk_statistics_ = p;
  }
  return chunk_statistics_;
}
inline ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* GetReadStatisticsResponse_PerClassificationData::mutable_chunk_statistics() {
  ::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* _msg = _internal_mutable_chunk_statistics();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.chunk_statistics)
  return _msg;
}
inline void GetReadStatisticsResponse_PerClassificationData::set_allocated_chunk_statistics(::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics* chunk_statistics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete chunk_statistics_;
  }
  if (chunk_statistics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetReadStatisticsResponse_ChunkStatistics>::GetOwningArena(chunk_statistics);
    if (message_arena != submessage_arena) {
      chunk_statistics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chunk_statistics, submessage_arena);
    }
    
  } else {
    
  }
  chunk_statistics_ = chunk_statistics;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.chunk_statistics)
}

// uint64 samples_duration = 4;
inline void GetReadStatisticsResponse_PerClassificationData::clear_samples_duration() {
  samples_duration_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsResponse_PerClassificationData::_internal_samples_duration() const {
  return samples_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsResponse_PerClassificationData::samples_duration() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.samples_duration)
  return _internal_samples_duration();
}
inline void GetReadStatisticsResponse_PerClassificationData::_internal_set_samples_duration(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samples_duration_ = value;
}
inline void GetReadStatisticsResponse_PerClassificationData::set_samples_duration(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples_duration(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.samples_duration)
}

// double seconds_duration = 5;
inline void GetReadStatisticsResponse_PerClassificationData::clear_seconds_duration() {
  seconds_duration_ = 0;
}
inline double GetReadStatisticsResponse_PerClassificationData::_internal_seconds_duration() const {
  return seconds_duration_;
}
inline double GetReadStatisticsResponse_PerClassificationData::seconds_duration() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.seconds_duration)
  return _internal_seconds_duration();
}
inline void GetReadStatisticsResponse_PerClassificationData::_internal_set_seconds_duration(double value) {
  
  seconds_duration_ = value;
}
inline void GetReadStatisticsResponse_PerClassificationData::set_seconds_duration(double value) {
  _internal_set_seconds_duration(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.PerClassificationData.seconds_duration)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetReadStatisticsResponse_PerConfigurationData

// .minknow_api.device.ReturnedChannelConfiguration channel_configuration = 1;
inline bool GetReadStatisticsResponse_PerConfigurationData::_internal_has_channel_configuration() const {
  return this != internal_default_instance() && channel_configuration_ != nullptr;
}
inline bool GetReadStatisticsResponse_PerConfigurationData::has_channel_configuration() const {
  return _internal_has_channel_configuration();
}
inline const ::minknow_api::device::ReturnedChannelConfiguration& GetReadStatisticsResponse_PerConfigurationData::_internal_channel_configuration() const {
  const ::minknow_api::device::ReturnedChannelConfiguration* p = channel_configuration_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::device::ReturnedChannelConfiguration&>(
      ::minknow_api::device::_ReturnedChannelConfiguration_default_instance_);
}
inline const ::minknow_api::device::ReturnedChannelConfiguration& GetReadStatisticsResponse_PerConfigurationData::channel_configuration() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.channel_configuration)
  return _internal_channel_configuration();
}
inline void GetReadStatisticsResponse_PerConfigurationData::unsafe_arena_set_allocated_channel_configuration(
    ::minknow_api::device::ReturnedChannelConfiguration* channel_configuration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_configuration_);
  }
  channel_configuration_ = channel_configuration;
  if (channel_configuration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.channel_configuration)
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetReadStatisticsResponse_PerConfigurationData::release_channel_configuration() {
  
  ::minknow_api::device::ReturnedChannelConfiguration* temp = channel_configuration_;
  channel_configuration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetReadStatisticsResponse_PerConfigurationData::unsafe_arena_release_channel_configuration() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.channel_configuration)
  
  ::minknow_api::device::ReturnedChannelConfiguration* temp = channel_configuration_;
  channel_configuration_ = nullptr;
  return temp;
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetReadStatisticsResponse_PerConfigurationData::_internal_mutable_channel_configuration() {
  
  if (channel_configuration_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::device::ReturnedChannelConfiguration>(GetArenaForAllocation());
    channel_configuration_ = p;
  }
  return channel_configuration_;
}
inline ::minknow_api::device::ReturnedChannelConfiguration* GetReadStatisticsResponse_PerConfigurationData::mutable_channel_configuration() {
  ::minknow_api::device::ReturnedChannelConfiguration* _msg = _internal_mutable_channel_configuration();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.channel_configuration)
  return _msg;
}
inline void GetReadStatisticsResponse_PerConfigurationData::set_allocated_channel_configuration(::minknow_api::device::ReturnedChannelConfiguration* channel_configuration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_configuration_);
  }
  if (channel_configuration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_configuration));
    if (message_arena != submessage_arena) {
      channel_configuration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel_configuration, submessage_arena);
    }
    
  } else {
    
  }
  channel_configuration_ = channel_configuration;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.channel_configuration)
}

// map<string, .minknow_api.data.GetReadStatisticsResponse.PerClassificationData> classifications = 2;
inline int GetReadStatisticsResponse_PerConfigurationData::_internal_classifications_size() const {
  return classifications_.size();
}
inline int GetReadStatisticsResponse_PerConfigurationData::classifications_size() const {
  return _internal_classifications_size();
}
inline void GetReadStatisticsResponse_PerConfigurationData::clear_classifications() {
  classifications_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData >&
GetReadStatisticsResponse_PerConfigurationData::_internal_classifications() const {
  return classifications_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData >&
GetReadStatisticsResponse_PerConfigurationData::classifications() const {
  // @@protoc_insertion_point(field_map:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.classifications)
  return _internal_classifications();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData >*
GetReadStatisticsResponse_PerConfigurationData::_internal_mutable_classifications() {
  return classifications_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData >*
GetReadStatisticsResponse_PerConfigurationData::mutable_classifications() {
  // @@protoc_insertion_point(field_mutable_map:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.classifications)
  return _internal_mutable_classifications();
}

// .minknow_api.data.GetReadStatisticsResponse.PerClassificationData incomplete = 3;
inline bool GetReadStatisticsResponse_PerConfigurationData::_internal_has_incomplete() const {
  return this != internal_default_instance() && incomplete_ != nullptr;
}
inline bool GetReadStatisticsResponse_PerConfigurationData::has_incomplete() const {
  return _internal_has_incomplete();
}
inline void GetReadStatisticsResponse_PerConfigurationData::clear_incomplete() {
  if (GetArenaForAllocation() == nullptr && incomplete_ != nullptr) {
    delete incomplete_;
  }
  incomplete_ = nullptr;
}
inline const ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData& GetReadStatisticsResponse_PerConfigurationData::_internal_incomplete() const {
  const ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* p = incomplete_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData&>(
      ::minknow_api::data::_GetReadStatisticsResponse_PerClassificationData_default_instance_);
}
inline const ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData& GetReadStatisticsResponse_PerConfigurationData::incomplete() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.incomplete)
  return _internal_incomplete();
}
inline void GetReadStatisticsResponse_PerConfigurationData::unsafe_arena_set_allocated_incomplete(
    ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* incomplete) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(incomplete_);
  }
  incomplete_ = incomplete;
  if (incomplete) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.incomplete)
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* GetReadStatisticsResponse_PerConfigurationData::release_incomplete() {
  
  ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* temp = incomplete_;
  incomplete_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* GetReadStatisticsResponse_PerConfigurationData::unsafe_arena_release_incomplete() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.incomplete)
  
  ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* temp = incomplete_;
  incomplete_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* GetReadStatisticsResponse_PerConfigurationData::_internal_mutable_incomplete() {
  
  if (incomplete_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetReadStatisticsResponse_PerClassificationData>(GetArenaForAllocation());
    incomplete_ = p;
  }
  return incomplete_;
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* GetReadStatisticsResponse_PerConfigurationData::mutable_incomplete() {
  ::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* _msg = _internal_mutable_incomplete();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.incomplete)
  return _msg;
}
inline void GetReadStatisticsResponse_PerConfigurationData::set_allocated_incomplete(::minknow_api::data::GetReadStatisticsResponse_PerClassificationData* incomplete) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete incomplete_;
  }
  if (incomplete) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetReadStatisticsResponse_PerClassificationData>::GetOwningArena(incomplete);
    if (message_arena != submessage_arena) {
      incomplete = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, incomplete, submessage_arena);
    }
    
  } else {
    
  }
  incomplete_ = incomplete;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetReadStatisticsResponse.PerConfigurationData.incomplete)
}

// -------------------------------------------------------------------

// GetReadStatisticsResponse_PerChannelData

// repeated .minknow_api.data.GetReadStatisticsResponse.PerConfigurationData configurations = 6;
inline int GetReadStatisticsResponse_PerChannelData::_internal_configurations_size() const {
  return configurations_.size();
}
inline int GetReadStatisticsResponse_PerChannelData::configurations_size() const {
  return _internal_configurations_size();
}
inline void GetReadStatisticsResponse_PerChannelData::clear_configurations() {
  configurations_.Clear();
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData* GetReadStatisticsResponse_PerChannelData::mutable_configurations(int index) {
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetReadStatisticsResponse.PerChannelData.configurations)
  return configurations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData >*
GetReadStatisticsResponse_PerChannelData::mutable_configurations() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetReadStatisticsResponse.PerChannelData.configurations)
  return &configurations_;
}
inline const ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData& GetReadStatisticsResponse_PerChannelData::_internal_configurations(int index) const {
  return configurations_.Get(index);
}
inline const ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData& GetReadStatisticsResponse_PerChannelData::configurations(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerChannelData.configurations)
  return _internal_configurations(index);
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData* GetReadStatisticsResponse_PerChannelData::_internal_add_configurations() {
  return configurations_.Add();
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData* GetReadStatisticsResponse_PerChannelData::add_configurations() {
  ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData* _add = _internal_add_configurations();
  // @@protoc_insertion_point(field_add:minknow_api.data.GetReadStatisticsResponse.PerChannelData.configurations)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerConfigurationData >&
GetReadStatisticsResponse_PerChannelData::configurations() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetReadStatisticsResponse.PerChannelData.configurations)
  return configurations_;
}

// uint64 samples_since_start = 2;
inline void GetReadStatisticsResponse_PerChannelData::clear_samples_since_start() {
  samples_since_start_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsResponse_PerChannelData::_internal_samples_since_start() const {
  return samples_since_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsResponse_PerChannelData::samples_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerChannelData.samples_since_start)
  return _internal_samples_since_start();
}
inline void GetReadStatisticsResponse_PerChannelData::_internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samples_since_start_ = value;
}
inline void GetReadStatisticsResponse_PerChannelData::set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.PerChannelData.samples_since_start)
}

// double seconds_since_start = 3;
inline void GetReadStatisticsResponse_PerChannelData::clear_seconds_since_start() {
  seconds_since_start_ = 0;
}
inline double GetReadStatisticsResponse_PerChannelData::_internal_seconds_since_start() const {
  return seconds_since_start_;
}
inline double GetReadStatisticsResponse_PerChannelData::seconds_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerChannelData.seconds_since_start)
  return _internal_seconds_since_start();
}
inline void GetReadStatisticsResponse_PerChannelData::_internal_set_seconds_since_start(double value) {
  
  seconds_since_start_ = value;
}
inline void GetReadStatisticsResponse_PerChannelData::set_seconds_since_start(double value) {
  _internal_set_seconds_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.PerChannelData.seconds_since_start)
}

// uint64 samples_duration = 4;
inline void GetReadStatisticsResponse_PerChannelData::clear_samples_duration() {
  samples_duration_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsResponse_PerChannelData::_internal_samples_duration() const {
  return samples_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsResponse_PerChannelData::samples_duration() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerChannelData.samples_duration)
  return _internal_samples_duration();
}
inline void GetReadStatisticsResponse_PerChannelData::_internal_set_samples_duration(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samples_duration_ = value;
}
inline void GetReadStatisticsResponse_PerChannelData::set_samples_duration(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples_duration(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.PerChannelData.samples_duration)
}

// double seconds_duration = 5;
inline void GetReadStatisticsResponse_PerChannelData::clear_seconds_duration() {
  seconds_duration_ = 0;
}
inline double GetReadStatisticsResponse_PerChannelData::_internal_seconds_duration() const {
  return seconds_duration_;
}
inline double GetReadStatisticsResponse_PerChannelData::seconds_duration() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.PerChannelData.seconds_duration)
  return _internal_seconds_duration();
}
inline void GetReadStatisticsResponse_PerChannelData::_internal_set_seconds_duration(double value) {
  
  seconds_duration_ = value;
}
inline void GetReadStatisticsResponse_PerChannelData::set_seconds_duration(double value) {
  _internal_set_seconds_duration(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.PerChannelData.seconds_duration)
}

// -------------------------------------------------------------------

// GetReadStatisticsResponse

// repeated .minknow_api.data.GetReadStatisticsResponse.PerChannelData channels = 1;
inline int GetReadStatisticsResponse::_internal_channels_size() const {
  return channels_.size();
}
inline int GetReadStatisticsResponse::channels_size() const {
  return _internal_channels_size();
}
inline void GetReadStatisticsResponse::clear_channels() {
  channels_.Clear();
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerChannelData* GetReadStatisticsResponse::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetReadStatisticsResponse.channels)
  return channels_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerChannelData >*
GetReadStatisticsResponse::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.GetReadStatisticsResponse.channels)
  return &channels_;
}
inline const ::minknow_api::data::GetReadStatisticsResponse_PerChannelData& GetReadStatisticsResponse::_internal_channels(int index) const {
  return channels_.Get(index);
}
inline const ::minknow_api::data::GetReadStatisticsResponse_PerChannelData& GetReadStatisticsResponse::channels(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.channels)
  return _internal_channels(index);
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerChannelData* GetReadStatisticsResponse::_internal_add_channels() {
  return channels_.Add();
}
inline ::minknow_api::data::GetReadStatisticsResponse_PerChannelData* GetReadStatisticsResponse::add_channels() {
  ::minknow_api::data::GetReadStatisticsResponse_PerChannelData* _add = _internal_add_channels();
  // @@protoc_insertion_point(field_add:minknow_api.data.GetReadStatisticsResponse.channels)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::minknow_api::data::GetReadStatisticsResponse_PerChannelData >&
GetReadStatisticsResponse::channels() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.GetReadStatisticsResponse.channels)
  return channels_;
}

// uint64 samples_since_start = 2;
inline void GetReadStatisticsResponse::clear_samples_since_start() {
  samples_since_start_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsResponse::_internal_samples_since_start() const {
  return samples_since_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetReadStatisticsResponse::samples_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.samples_since_start)
  return _internal_samples_since_start();
}
inline void GetReadStatisticsResponse::_internal_set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samples_since_start_ = value;
}
inline void GetReadStatisticsResponse::set_samples_since_start(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.samples_since_start)
}

// double seconds_since_start = 3;
inline void GetReadStatisticsResponse::clear_seconds_since_start() {
  seconds_since_start_ = 0;
}
inline double GetReadStatisticsResponse::_internal_seconds_since_start() const {
  return seconds_since_start_;
}
inline double GetReadStatisticsResponse::seconds_since_start() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetReadStatisticsResponse.seconds_since_start)
  return _internal_seconds_since_start();
}
inline void GetReadStatisticsResponse::_internal_set_seconds_since_start(double value) {
  
  seconds_since_start_ = value;
}
inline void GetReadStatisticsResponse::set_seconds_since_start(double value) {
  _internal_set_seconds_since_start(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetReadStatisticsResponse.seconds_since_start)
}

// -------------------------------------------------------------------

// LockChannelStatesRequest

// repeated uint64 channels = 1 [(.minknow_api.rpc_required) = true];
inline int LockChannelStatesRequest::_internal_channels_size() const {
  return channels_.size();
}
inline int LockChannelStatesRequest::channels_size() const {
  return _internal_channels_size();
}
inline void LockChannelStatesRequest::clear_channels() {
  channels_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LockChannelStatesRequest::_internal_channels(int index) const {
  return channels_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LockChannelStatesRequest::channels(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.LockChannelStatesRequest.channels)
  return _internal_channels(index);
}
inline void LockChannelStatesRequest::set_channels(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  channels_.Set(index, value);
  // @@protoc_insertion_point(field_set:minknow_api.data.LockChannelStatesRequest.channels)
}
inline void LockChannelStatesRequest::_internal_add_channels(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  channels_.Add(value);
}
inline void LockChannelStatesRequest::add_channels(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_channels(value);
  // @@protoc_insertion_point(field_add:minknow_api.data.LockChannelStatesRequest.channels)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
LockChannelStatesRequest::_internal_channels() const {
  return channels_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
LockChannelStatesRequest::channels() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.LockChannelStatesRequest.channels)
  return _internal_channels();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
LockChannelStatesRequest::_internal_mutable_channels() {
  return &channels_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
LockChannelStatesRequest::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.LockChannelStatesRequest.channels)
  return _internal_mutable_channels();
}

// string state_name = 2 [(.minknow_api.rpc_required) = true];
inline void LockChannelStatesRequest::clear_state_name() {
  state_name_.ClearToEmpty();
}
inline const std::string& LockChannelStatesRequest::state_name() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.LockChannelStatesRequest.state_name)
  return _internal_state_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void LockChannelStatesRequest::set_state_name(ArgT0&& arg0, ArgT... args) {
 
 state_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:minknow_api.data.LockChannelStatesRequest.state_name)
}
inline std::string* LockChannelStatesRequest::mutable_state_name() {
  std::string* _s = _internal_mutable_state_name();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.LockChannelStatesRequest.state_name)
  return _s;
}
inline const std::string& LockChannelStatesRequest::_internal_state_name() const {
  return state_name_.Get();
}
inline void LockChannelStatesRequest::_internal_set_state_name(const std::string& value) {
  
  state_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* LockChannelStatesRequest::_internal_mutable_state_name() {
  
  return state_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* LockChannelStatesRequest::release_state_name() {
  // @@protoc_insertion_point(field_release:minknow_api.data.LockChannelStatesRequest.state_name)
  return state_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void LockChannelStatesRequest::set_allocated_state_name(std::string* state_name) {
  if (state_name != nullptr) {
    
  } else {
    
  }
  state_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), state_name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.LockChannelStatesRequest.state_name)
}

// -------------------------------------------------------------------

// LockChannelStatesResponse

// -------------------------------------------------------------------

// UnlockChannelStatesRequest

// repeated uint64 channels = 1 [(.minknow_api.rpc_required) = true];
inline int UnlockChannelStatesRequest::_internal_channels_size() const {
  return channels_.size();
}
inline int UnlockChannelStatesRequest::channels_size() const {
  return _internal_channels_size();
}
inline void UnlockChannelStatesRequest::clear_channels() {
  channels_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnlockChannelStatesRequest::_internal_channels(int index) const {
  return channels_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UnlockChannelStatesRequest::channels(int index) const {
  // @@protoc_insertion_point(field_get:minknow_api.data.UnlockChannelStatesRequest.channels)
  return _internal_channels(index);
}
inline void UnlockChannelStatesRequest::set_channels(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  channels_.Set(index, value);
  // @@protoc_insertion_point(field_set:minknow_api.data.UnlockChannelStatesRequest.channels)
}
inline void UnlockChannelStatesRequest::_internal_add_channels(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  channels_.Add(value);
}
inline void UnlockChannelStatesRequest::add_channels(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_channels(value);
  // @@protoc_insertion_point(field_add:minknow_api.data.UnlockChannelStatesRequest.channels)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
UnlockChannelStatesRequest::_internal_channels() const {
  return channels_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
UnlockChannelStatesRequest::channels() const {
  // @@protoc_insertion_point(field_list:minknow_api.data.UnlockChannelStatesRequest.channels)
  return _internal_channels();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
UnlockChannelStatesRequest::_internal_mutable_channels() {
  return &channels_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
UnlockChannelStatesRequest::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:minknow_api.data.UnlockChannelStatesRequest.channels)
  return _internal_mutable_channels();
}

// -------------------------------------------------------------------

// UnlockChannelStatesResponse

// -------------------------------------------------------------------

// GetExperimentYieldInfoRequest

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_CompleteReadInfo

// uint64 pending_chunks = 1;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_pending_chunks() {
  pending_chunks_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_pending_chunks() const {
  return pending_chunks_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::pending_chunks() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_chunks)
  return _internal_pending_chunks();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_pending_chunks(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_chunks_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_pending_chunks(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_chunks(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_chunks)
}

// uint64 pending_memory_reads = 2;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_pending_memory_reads() {
  pending_memory_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_pending_memory_reads() const {
  return pending_memory_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::pending_memory_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_memory_reads)
  return _internal_pending_memory_reads();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_pending_memory_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_memory_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_pending_memory_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_memory_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_memory_reads)
}

// uint64 pending_disk_reads = 15;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_pending_disk_reads() {
  pending_disk_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_pending_disk_reads() const {
  return pending_disk_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::pending_disk_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_disk_reads)
  return _internal_pending_disk_reads();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_pending_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_disk_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_pending_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_disk_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_disk_reads)
}

// uint64 pending_multi_disk_reads = 3;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_pending_multi_disk_reads() {
  pending_multi_disk_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_pending_multi_disk_reads() const {
  return pending_multi_disk_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::pending_multi_disk_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_multi_disk_reads)
  return _internal_pending_multi_disk_reads();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_pending_multi_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_multi_disk_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_pending_multi_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_multi_disk_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_multi_disk_reads)
}

// uint64 pending_skipped_reads = 4;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_pending_skipped_reads() {
  pending_skipped_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_pending_skipped_reads() const {
  return pending_skipped_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::pending_skipped_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_skipped_reads)
  return _internal_pending_skipped_reads();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_pending_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_skipped_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_pending_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_skipped_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_skipped_reads)
}

// uint64 pending_force_skipped_reads = 5;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_pending_force_skipped_reads() {
  pending_force_skipped_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_pending_force_skipped_reads() const {
  return pending_force_skipped_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::pending_force_skipped_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_force_skipped_reads)
  return _internal_pending_force_skipped_reads();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_pending_force_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_force_skipped_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_pending_force_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_force_skipped_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.pending_force_skipped_reads)
}

// uint64 processed_memory_reads = 6;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_processed_memory_reads() {
  processed_memory_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_processed_memory_reads() const {
  return processed_memory_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::processed_memory_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.processed_memory_reads)
  return _internal_processed_memory_reads();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_processed_memory_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  processed_memory_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_processed_memory_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_processed_memory_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.processed_memory_reads)
}

// uint64 processed_disk_reads = 7;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_processed_disk_reads() {
  processed_disk_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_processed_disk_reads() const {
  return processed_disk_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::processed_disk_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.processed_disk_reads)
  return _internal_processed_disk_reads();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_processed_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  processed_disk_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_processed_disk_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_processed_disk_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.processed_disk_reads)
}

// uint64 processed_skipped_reads = 8;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_processed_skipped_reads() {
  processed_skipped_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_processed_skipped_reads() const {
  return processed_skipped_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::processed_skipped_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.processed_skipped_reads)
  return _internal_processed_skipped_reads();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_processed_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  processed_skipped_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_processed_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_processed_skipped_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.processed_skipped_reads)
}

// uint64 processed_force_skipped_reads = 9;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_processed_force_skipped_reads() {
  processed_force_skipped_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_processed_force_skipped_reads() const {
  return processed_force_skipped_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::processed_force_skipped_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.processed_force_skipped_reads)
  return _internal_processed_force_skipped_reads();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_processed_force_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  processed_force_skipped_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_processed_force_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_processed_force_skipped_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.processed_force_skipped_reads)
}

// uint64 stored_reads_bytes_memory = 10;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_stored_reads_bytes_memory() {
  stored_reads_bytes_memory_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_stored_reads_bytes_memory() const {
  return stored_reads_bytes_memory_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::stored_reads_bytes_memory() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.stored_reads_bytes_memory)
  return _internal_stored_reads_bytes_memory();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_stored_reads_bytes_memory(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  stored_reads_bytes_memory_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_stored_reads_bytes_memory(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_stored_reads_bytes_memory(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.stored_reads_bytes_memory)
}

// uint64 stored_read_supporting_bytes_memory = 16;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_stored_read_supporting_bytes_memory() {
  stored_read_supporting_bytes_memory_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_stored_read_supporting_bytes_memory() const {
  return stored_read_supporting_bytes_memory_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::stored_read_supporting_bytes_memory() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.stored_read_supporting_bytes_memory)
  return _internal_stored_read_supporting_bytes_memory();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_stored_read_supporting_bytes_memory(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  stored_read_supporting_bytes_memory_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_stored_read_supporting_bytes_memory(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_stored_read_supporting_bytes_memory(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.stored_read_supporting_bytes_memory)
}

// uint64 stored_reads_bytes_disk = 11;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_stored_reads_bytes_disk() {
  stored_reads_bytes_disk_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_stored_reads_bytes_disk() const {
  return stored_reads_bytes_disk_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::stored_reads_bytes_disk() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.stored_reads_bytes_disk)
  return _internal_stored_reads_bytes_disk();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_stored_reads_bytes_disk(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  stored_reads_bytes_disk_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_stored_reads_bytes_disk(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_stored_reads_bytes_disk(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.stored_reads_bytes_disk)
}

// uint64 discarded_error_bytes = 12;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_discarded_error_bytes() {
  discarded_error_bytes_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_discarded_error_bytes() const {
  return discarded_error_bytes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::discarded_error_bytes() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.discarded_error_bytes)
  return _internal_discarded_error_bytes();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_discarded_error_bytes(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  discarded_error_bytes_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_discarded_error_bytes(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_discarded_error_bytes(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.discarded_error_bytes)
}

// uint64 channels_writing_to_disk = 13;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_channels_writing_to_disk() {
  channels_writing_to_disk_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_channels_writing_to_disk() const {
  return channels_writing_to_disk_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::channels_writing_to_disk() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.channels_writing_to_disk)
  return _internal_channels_writing_to_disk();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_channels_writing_to_disk(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  channels_writing_to_disk_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_channels_writing_to_disk(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_channels_writing_to_disk(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.channels_writing_to_disk)
}

// uint64 channels_writing_to_disk_tmp = 14;
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::clear_channels_writing_to_disk_tmp() {
  channels_writing_to_disk_tmp_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_channels_writing_to_disk_tmp() const {
  return channels_writing_to_disk_tmp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_CompleteReadInfo::channels_writing_to_disk_tmp() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.channels_writing_to_disk_tmp)
  return _internal_channels_writing_to_disk_tmp();
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::_internal_set_channels_writing_to_disk_tmp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  channels_writing_to_disk_tmp_ = value;
}
inline void GetExperimentYieldInfoResponse_CompleteReadInfo::set_channels_writing_to_disk_tmp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_channels_writing_to_disk_tmp(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo.channels_writing_to_disk_tmp)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_AcquisitionInfo

// uint64 raw_per_channel = 1;
inline void GetExperimentYieldInfoResponse_AcquisitionInfo::clear_raw_per_channel() {
  raw_per_channel_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AcquisitionInfo::_internal_raw_per_channel() const {
  return raw_per_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AcquisitionInfo::raw_per_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.AcquisitionInfo.raw_per_channel)
  return _internal_raw_per_channel();
}
inline void GetExperimentYieldInfoResponse_AcquisitionInfo::_internal_set_raw_per_channel(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  raw_per_channel_ = value;
}
inline void GetExperimentYieldInfoResponse_AcquisitionInfo::set_raw_per_channel(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_raw_per_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.AcquisitionInfo.raw_per_channel)
}

// uint64 frame_discontinuities = 2;
inline void GetExperimentYieldInfoResponse_AcquisitionInfo::clear_frame_discontinuities() {
  frame_discontinuities_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AcquisitionInfo::_internal_frame_discontinuities() const {
  return frame_discontinuities_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AcquisitionInfo::frame_discontinuities() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.AcquisitionInfo.frame_discontinuities)
  return _internal_frame_discontinuities();
}
inline void GetExperimentYieldInfoResponse_AcquisitionInfo::_internal_set_frame_discontinuities(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  frame_discontinuities_ = value;
}
inline void GetExperimentYieldInfoResponse_AcquisitionInfo::set_frame_discontinuities(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_frame_discontinuities(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.AcquisitionInfo.frame_discontinuities)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_AnalyserInfo

// uint64 raw_per_channel = 1;
inline void GetExperimentYieldInfoResponse_AnalyserInfo::clear_raw_per_channel() {
  raw_per_channel_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::_internal_raw_per_channel() const {
  return raw_per_channel_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::raw_per_channel() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.raw_per_channel)
  return _internal_raw_per_channel();
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::_internal_set_raw_per_channel(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  raw_per_channel_ = value;
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::set_raw_per_channel(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_raw_per_channel(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.raw_per_channel)
}

// uint64 total_selected_raw = 2;
inline void GetExperimentYieldInfoResponse_AnalyserInfo::clear_total_selected_raw() {
  total_selected_raw_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::_internal_total_selected_raw() const {
  return total_selected_raw_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::total_selected_raw() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.total_selected_raw)
  return _internal_total_selected_raw();
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::_internal_set_total_selected_raw(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_selected_raw_ = value;
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::set_total_selected_raw(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_selected_raw(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.total_selected_raw)
}

// uint64 total_selected_events = 3;
inline void GetExperimentYieldInfoResponse_AnalyserInfo::clear_total_selected_events() {
  total_selected_events_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::_internal_total_selected_events() const {
  return total_selected_events_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::total_selected_events() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.total_selected_events)
  return _internal_total_selected_events();
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::_internal_set_total_selected_events(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_selected_events_ = value;
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::set_total_selected_events(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_selected_events(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.total_selected_events)
}

// uint64 total_events = 4;
inline void GetExperimentYieldInfoResponse_AnalyserInfo::clear_total_events() {
  total_events_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::_internal_total_events() const {
  return total_events_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::total_events() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.total_events)
  return _internal_total_events();
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::_internal_set_total_events(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_events_ = value;
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::set_total_events(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_events(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.total_events)
}

// uint64 total_read_chunks = 5;
inline void GetExperimentYieldInfoResponse_AnalyserInfo::clear_total_read_chunks() {
  total_read_chunks_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::_internal_total_read_chunks() const {
  return total_read_chunks_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::total_read_chunks() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.total_read_chunks)
  return _internal_total_read_chunks();
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::_internal_set_total_read_chunks(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_read_chunks_ = value;
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::set_total_read_chunks(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_read_chunks(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.total_read_chunks)
}

// uint64 completed_selected_reads_count = 6;
inline void GetExperimentYieldInfoResponse_AnalyserInfo::clear_completed_selected_reads_count() {
  completed_selected_reads_count_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::_internal_completed_selected_reads_count() const {
  return completed_selected_reads_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::completed_selected_reads_count() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.completed_selected_reads_count)
  return _internal_completed_selected_reads_count();
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::_internal_set_completed_selected_reads_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  completed_selected_reads_count_ = value;
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::set_completed_selected_reads_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_completed_selected_reads_count(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.completed_selected_reads_count)
}

// uint64 completed_unselected_reads_count = 7;
inline void GetExperimentYieldInfoResponse_AnalyserInfo::clear_completed_unselected_reads_count() {
  completed_unselected_reads_count_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::_internal_completed_unselected_reads_count() const {
  return completed_unselected_reads_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_AnalyserInfo::completed_unselected_reads_count() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.completed_unselected_reads_count)
  return _internal_completed_unselected_reads_count();
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::_internal_set_completed_unselected_reads_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  completed_unselected_reads_count_ = value;
}
inline void GetExperimentYieldInfoResponse_AnalyserInfo::set_completed_unselected_reads_count(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_completed_unselected_reads_count(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo.completed_unselected_reads_count)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_BulkInfo

// uint64 total_raw = 1;
inline void GetExperimentYieldInfoResponse_BulkInfo::clear_total_raw() {
  total_raw_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BulkInfo::_internal_total_raw() const {
  return total_raw_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BulkInfo::total_raw() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BulkInfo.total_raw)
  return _internal_total_raw();
}
inline void GetExperimentYieldInfoResponse_BulkInfo::_internal_set_total_raw(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_raw_ = value;
}
inline void GetExperimentYieldInfoResponse_BulkInfo::set_total_raw(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_raw(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BulkInfo.total_raw)
}

// uint64 total_events = 2;
inline void GetExperimentYieldInfoResponse_BulkInfo::clear_total_events() {
  total_events_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BulkInfo::_internal_total_events() const {
  return total_events_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BulkInfo::total_events() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BulkInfo.total_events)
  return _internal_total_events();
}
inline void GetExperimentYieldInfoResponse_BulkInfo::_internal_set_total_events(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  total_events_ = value;
}
inline void GetExperimentYieldInfoResponse_BulkInfo::set_total_events(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_total_events(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BulkInfo.total_events)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_HdfWriterInfo

// uint64 pending_compressions = 1;
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::clear_pending_compressions() {
  pending_compressions_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_pending_compressions() const {
  return pending_compressions_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::pending_compressions() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.pending_compressions)
  return _internal_pending_compressions();
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_set_pending_compressions(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_compressions_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::set_pending_compressions(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_compressions(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.pending_compressions)
}

// uint64 pending_writes = 2;
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::clear_pending_writes() {
  pending_writes_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_pending_writes() const {
  return pending_writes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::pending_writes() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.pending_writes)
  return _internal_pending_writes();
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_set_pending_writes(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_writes_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::set_pending_writes(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_writes(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.pending_writes)
}

// uint64 pending_hdf_tasks = 3;
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::clear_pending_hdf_tasks() {
  pending_hdf_tasks_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_pending_hdf_tasks() const {
  return pending_hdf_tasks_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::pending_hdf_tasks() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.pending_hdf_tasks)
  return _internal_pending_hdf_tasks();
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_set_pending_hdf_tasks(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_hdf_tasks_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::set_pending_hdf_tasks(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_hdf_tasks(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.pending_hdf_tasks)
}

// uint64 completed_writes = 4;
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::clear_completed_writes() {
  completed_writes_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_completed_writes() const {
  return completed_writes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::completed_writes() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.completed_writes)
  return _internal_completed_writes();
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_set_completed_writes(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  completed_writes_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::set_completed_writes(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_completed_writes(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.completed_writes)
}

// uint64 dataset_bytes_data_in_flight = 5;
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::clear_dataset_bytes_data_in_flight() {
  dataset_bytes_data_in_flight_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_dataset_bytes_data_in_flight() const {
  return dataset_bytes_data_in_flight_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfWriterInfo::dataset_bytes_data_in_flight() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.dataset_bytes_data_in_flight)
  return _internal_dataset_bytes_data_in_flight();
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::_internal_set_dataset_bytes_data_in_flight(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  dataset_bytes_data_in_flight_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfWriterInfo::set_dataset_bytes_data_in_flight(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_dataset_bytes_data_in_flight(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo.dataset_bytes_data_in_flight)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_BasecallStatistics

// uint64 reads_in_progress = 1;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_reads_in_progress() {
  reads_in_progress_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_reads_in_progress() const {
  return reads_in_progress_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::reads_in_progress() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_in_progress)
  return _internal_reads_in_progress();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_reads_in_progress(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_in_progress_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_reads_in_progress(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_in_progress(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_in_progress)
}

// uint64 reads_processed = 2;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_reads_processed() {
  reads_processed_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_reads_processed() const {
  return reads_processed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::reads_processed() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_processed)
  return _internal_reads_processed();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_reads_processed(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_processed_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_reads_processed(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_processed(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_processed)
}

// uint64 reads_skipped = 3;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_reads_skipped() {
  reads_skipped_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_reads_skipped() const {
  return reads_skipped_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::reads_skipped() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_skipped)
  return _internal_reads_skipped();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_reads_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_skipped_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_reads_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_skipped(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_skipped)
}

// uint64 reads_force_skipped = 4;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_reads_force_skipped() {
  reads_force_skipped_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_reads_force_skipped() const {
  return reads_force_skipped_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::reads_force_skipped() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_force_skipped)
  return _internal_reads_force_skipped();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_reads_force_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_force_skipped_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_reads_force_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_force_skipped(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_force_skipped)
}

// uint64 reads_failed_calling_filtered = 5;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_reads_failed_calling_filtered() {
  reads_failed_calling_filtered_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_reads_failed_calling_filtered() const {
  return reads_failed_calling_filtered_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::reads_failed_calling_filtered() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_failed_calling_filtered)
  return _internal_reads_failed_calling_filtered();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_reads_failed_calling_filtered(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_failed_calling_filtered_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_reads_failed_calling_filtered(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_failed_calling_filtered(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_failed_calling_filtered)
}

// uint64 reads_failed_calling = 6;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_reads_failed_calling() {
  reads_failed_calling_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_reads_failed_calling() const {
  return reads_failed_calling_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::reads_failed_calling() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_failed_calling)
  return _internal_reads_failed_calling();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_reads_failed_calling(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_failed_calling_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_reads_failed_calling(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_failed_calling(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_failed_calling)
}

// uint64 reads_called = 7;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_reads_called() {
  reads_called_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_reads_called() const {
  return reads_called_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::reads_called() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_called)
  return _internal_reads_called();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_reads_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_called_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_reads_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_called(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.reads_called)
}

// uint64 samples_called = 8;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_samples_called() {
  samples_called_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_samples_called() const {
  return samples_called_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::samples_called() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.samples_called)
  return _internal_samples_called();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_samples_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samples_called_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_samples_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples_called(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.samples_called)
}

// uint64 samples_skipped = 9;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_samples_skipped() {
  samples_skipped_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_samples_skipped() const {
  return samples_skipped_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::samples_skipped() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.samples_skipped)
  return _internal_samples_skipped();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_samples_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samples_skipped_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_samples_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samples_skipped(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.samples_skipped)
}

// uint64 bases_passed_called = 10;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_bases_passed_called() {
  bases_passed_called_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_bases_passed_called() const {
  return bases_passed_called_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::bases_passed_called() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.bases_passed_called)
  return _internal_bases_passed_called();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_bases_passed_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  bases_passed_called_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_bases_passed_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bases_passed_called(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.bases_passed_called)
}

// uint64 bases_failed_called = 12;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_bases_failed_called() {
  bases_failed_called_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_bases_failed_called() const {
  return bases_failed_called_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::bases_failed_called() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.bases_failed_called)
  return _internal_bases_failed_called();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_bases_failed_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  bases_failed_called_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_bases_failed_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bases_failed_called(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.bases_failed_called)
}

// uint64 events_called = 11;
inline void GetExperimentYieldInfoResponse_BasecallStatistics::clear_events_called() {
  events_called_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::_internal_events_called() const {
  return events_called_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_BasecallStatistics::events_called() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.events_called)
  return _internal_events_called();
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::_internal_set_events_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  events_called_ = value;
}
inline void GetExperimentYieldInfoResponse_BasecallStatistics::set_events_called(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_events_called(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics.events_called)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics

// uint64 reads_written = 1;
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::clear_reads_written() {
  reads_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_reads_written() const {
  return reads_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::reads_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.reads_written)
  return _internal_reads_written();
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_set_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_written_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::set_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.reads_written)
}

// uint64 passed_reads_written = 2;
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::clear_passed_reads_written() {
  passed_reads_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_passed_reads_written() const {
  return passed_reads_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::passed_reads_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.passed_reads_written)
  return _internal_passed_reads_written();
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_set_passed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  passed_reads_written_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::set_passed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_passed_reads_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.passed_reads_written)
}

// uint64 failed_reads_written = 3;
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::clear_failed_reads_written() {
  failed_reads_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_failed_reads_written() const {
  return failed_reads_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::failed_reads_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.failed_reads_written)
  return _internal_failed_reads_written();
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_set_failed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  failed_reads_written_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::set_failed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_failed_reads_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.failed_reads_written)
}

// uint64 force_skipped_reads_written = 4;
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::clear_force_skipped_reads_written() {
  force_skipped_reads_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_force_skipped_reads_written() const {
  return force_skipped_reads_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::force_skipped_reads_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.force_skipped_reads_written)
  return _internal_force_skipped_reads_written();
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_set_force_skipped_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  force_skipped_reads_written_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::set_force_skipped_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_force_skipped_reads_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.force_skipped_reads_written)
}

// uint64 raw_bytes_written = 5;
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::clear_raw_bytes_written() {
  raw_bytes_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_raw_bytes_written() const {
  return raw_bytes_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::raw_bytes_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.raw_bytes_written)
  return _internal_raw_bytes_written();
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_set_raw_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  raw_bytes_written_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::set_raw_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_raw_bytes_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.raw_bytes_written)
}

// uint64 fastq_bytes_written = 6;
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::clear_fastq_bytes_written() {
  fastq_bytes_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_fastq_bytes_written() const {
  return fastq_bytes_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::fastq_bytes_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.fastq_bytes_written)
  return _internal_fastq_bytes_written();
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_set_fastq_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  fastq_bytes_written_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::set_fastq_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_fastq_bytes_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.fastq_bytes_written)
}

// uint64 basecall_events_bytes_written = 7;
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::clear_basecall_events_bytes_written() {
  basecall_events_bytes_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_basecall_events_bytes_written() const {
  return basecall_events_bytes_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::basecall_events_bytes_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.basecall_events_bytes_written)
  return _internal_basecall_events_bytes_written();
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::_internal_set_basecall_events_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  basecall_events_bytes_written_ = value;
}
inline void GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics::set_basecall_events_bytes_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_basecall_events_bytes_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics.basecall_events_bytes_written)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_FastqReadWritingStatistics

// uint64 passed_reads_written = 1;
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::clear_passed_reads_written() {
  passed_reads_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_passed_reads_written() const {
  return passed_reads_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::passed_reads_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.passed_reads_written)
  return _internal_passed_reads_written();
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_set_passed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  passed_reads_written_ = value;
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::set_passed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_passed_reads_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.passed_reads_written)
}

// uint64 skipped_reads = 2;
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::clear_skipped_reads() {
  skipped_reads_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_skipped_reads() const {
  return skipped_reads_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::skipped_reads() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.skipped_reads)
  return _internal_skipped_reads();
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_set_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  skipped_reads_ = value;
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::set_skipped_reads(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_skipped_reads(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.skipped_reads)
}

// uint64 forced_skipped = 3;
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::clear_forced_skipped() {
  forced_skipped_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_forced_skipped() const {
  return forced_skipped_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::forced_skipped() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.forced_skipped)
  return _internal_forced_skipped();
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_set_forced_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  forced_skipped_ = value;
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::set_forced_skipped(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_forced_skipped(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.forced_skipped)
}

// uint64 failed_reads_written = 4;
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::clear_failed_reads_written() {
  failed_reads_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_failed_reads_written() const {
  return failed_reads_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::failed_reads_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.failed_reads_written)
  return _internal_failed_reads_written();
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_set_failed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  failed_reads_written_ = value;
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::set_failed_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_failed_reads_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.failed_reads_written)
}

// uint64 failed_reads_discarded = 5;
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::clear_failed_reads_discarded() {
  failed_reads_discarded_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_failed_reads_discarded() const {
  return failed_reads_discarded_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FastqReadWritingStatistics::failed_reads_discarded() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.failed_reads_discarded)
  return _internal_failed_reads_discarded();
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::_internal_set_failed_reads_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  failed_reads_discarded_ = value;
}
inline void GetExperimentYieldInfoResponse_FastqReadWritingStatistics::set_failed_reads_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_failed_reads_discarded(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics.failed_reads_discarded)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics

// uint64 read_chunks_written = 1;
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::clear_read_chunks_written() {
  read_chunks_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::_internal_read_chunks_written() const {
  return read_chunks_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::read_chunks_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics.read_chunks_written)
  return _internal_read_chunks_written();
}
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::_internal_set_read_chunks_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  read_chunks_written_ = value;
}
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::set_read_chunks_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_read_chunks_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics.read_chunks_written)
}

// uint64 read_chunks_discarded = 2;
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::clear_read_chunks_discarded() {
  read_chunks_discarded_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::_internal_read_chunks_discarded() const {
  return read_chunks_discarded_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::read_chunks_discarded() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics.read_chunks_discarded)
  return _internal_read_chunks_discarded();
}
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::_internal_set_read_chunks_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  read_chunks_discarded_ = value;
}
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::set_read_chunks_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_read_chunks_discarded(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics.read_chunks_discarded)
}

// uint64 reads_written = 3;
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::clear_reads_written() {
  reads_written_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::_internal_reads_written() const {
  return reads_written_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::reads_written() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics.reads_written)
  return _internal_reads_written();
}
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::_internal_set_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_written_ = value;
}
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::set_reads_written(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_written(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics.reads_written)
}

// uint64 reads_discarded = 4;
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::clear_reads_discarded() {
  reads_discarded_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::_internal_reads_discarded() const {
  return reads_discarded_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::reads_discarded() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics.reads_discarded)
  return _internal_reads_discarded();
}
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::_internal_set_reads_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  reads_discarded_ = value;
}
inline void GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics::set_reads_discarded(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_reads_discarded(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics.reads_discarded)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo

// uint64 files_moved_successfully = 1;
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::clear_files_moved_successfully() {
  files_moved_successfully_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::_internal_files_moved_successfully() const {
  return files_moved_successfully_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::files_moved_successfully() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo.files_moved_successfully)
  return _internal_files_moved_successfully();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::_internal_set_files_moved_successfully(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  files_moved_successfully_ = value;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::set_files_moved_successfully(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_files_moved_successfully(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo.files_moved_successfully)
}

// uint64 files_moved_to_fallback = 2;
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::clear_files_moved_to_fallback() {
  files_moved_to_fallback_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::_internal_files_moved_to_fallback() const {
  return files_moved_to_fallback_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::files_moved_to_fallback() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo.files_moved_to_fallback)
  return _internal_files_moved_to_fallback();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::_internal_set_files_moved_to_fallback(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  files_moved_to_fallback_ = value;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::set_files_moved_to_fallback(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_files_moved_to_fallback(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo.files_moved_to_fallback)
}

// uint64 files_failed_to_move = 3;
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::clear_files_failed_to_move() {
  files_failed_to_move_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::_internal_files_failed_to_move() const {
  return files_failed_to_move_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::files_failed_to_move() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo.files_failed_to_move)
  return _internal_files_failed_to_move();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::_internal_set_files_failed_to_move(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  files_failed_to_move_ = value;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo::set_files_failed_to_move(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_files_failed_to_move(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo.files_failed_to_move)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse_FileOperationQueueProgress

// uint64 pending_operations = 1;
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::clear_pending_operations() {
  pending_operations_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_pending_operations() const {
  return pending_operations_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::pending_operations() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.pending_operations)
  return _internal_pending_operations();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_set_pending_operations(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pending_operations_ = value;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::set_pending_operations(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pending_operations(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.pending_operations)
}

// uint64 complete_successful_operations = 2;
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::clear_complete_successful_operations() {
  complete_successful_operations_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_complete_successful_operations() const {
  return complete_successful_operations_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::complete_successful_operations() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.complete_successful_operations)
  return _internal_complete_successful_operations();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_set_complete_successful_operations(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  complete_successful_operations_ = value;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::set_complete_successful_operations(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_complete_successful_operations(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.complete_successful_operations)
}

// uint64 complete_failed_operations = 3;
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::clear_complete_failed_operations() {
  complete_failed_operations_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_complete_failed_operations() const {
  return complete_failed_operations_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::complete_failed_operations() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.complete_failed_operations)
  return _internal_complete_failed_operations();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_set_complete_failed_operations(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  complete_failed_operations_ = value;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::set_complete_failed_operations(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_complete_failed_operations(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.complete_failed_operations)
}

// uint64 bytes_to_move_posted = 4;
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::clear_bytes_to_move_posted() {
  bytes_to_move_posted_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_bytes_to_move_posted() const {
  return bytes_to_move_posted_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::bytes_to_move_posted() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.bytes_to_move_posted)
  return _internal_bytes_to_move_posted();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_set_bytes_to_move_posted(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  bytes_to_move_posted_ = value;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::set_bytes_to_move_posted(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bytes_to_move_posted(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.bytes_to_move_posted)
}

// uint64 bytes_to_move_failed = 5;
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::clear_bytes_to_move_failed() {
  bytes_to_move_failed_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_bytes_to_move_failed() const {
  return bytes_to_move_failed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::bytes_to_move_failed() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.bytes_to_move_failed)
  return _internal_bytes_to_move_failed();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_set_bytes_to_move_failed(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  bytes_to_move_failed_ = value;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::set_bytes_to_move_failed(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bytes_to_move_failed(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.bytes_to_move_failed)
}

// uint64 bytes_to_move_completed = 6;
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::clear_bytes_to_move_completed() {
  bytes_to_move_completed_ = uint64_t{0u};
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_bytes_to_move_completed() const {
  return bytes_to_move_completed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetExperimentYieldInfoResponse_FileOperationQueueProgress::bytes_to_move_completed() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.bytes_to_move_completed)
  return _internal_bytes_to_move_completed();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_set_bytes_to_move_completed(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  bytes_to_move_completed_ = value;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::set_bytes_to_move_completed(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bytes_to_move_completed(value);
  // @@protoc_insertion_point(field_set:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.bytes_to_move_completed)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo fast5 = 7;
inline bool GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_has_fast5() const {
  return this != internal_default_instance() && fast5_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse_FileOperationQueueProgress::has_fast5() const {
  return _internal_has_fast5();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::clear_fast5() {
  if (GetArenaForAllocation() == nullptr && fast5_ != nullptr) {
    delete fast5_;
  }
  fast5_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_fast5() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* p = fast5_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& GetExperimentYieldInfoResponse_FileOperationQueueProgress::fast5() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fast5)
  return _internal_fast5();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::unsafe_arena_set_allocated_fast5(
    ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fast5) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fast5_);
  }
  fast5_ = fast5;
  if (fast5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fast5)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* GetExperimentYieldInfoResponse_FileOperationQueueProgress::release_fast5() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* temp = fast5_;
  fast5_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* GetExperimentYieldInfoResponse_FileOperationQueueProgress::unsafe_arena_release_fast5() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fast5)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* temp = fast5_;
  fast5_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_mutable_fast5() {
  
  if (fast5_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo>(GetArenaForAllocation());
    fast5_ = p;
  }
  return fast5_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* GetExperimentYieldInfoResponse_FileOperationQueueProgress::mutable_fast5() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* _msg = _internal_mutable_fast5();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fast5)
  return _msg;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::set_allocated_fast5(::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fast5) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete fast5_;
  }
  if (fast5) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo>::GetOwningArena(fast5);
    if (message_arena != submessage_arena) {
      fast5 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fast5, submessage_arena);
    }
    
  } else {
    
  }
  fast5_ = fast5;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fast5)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.FileTypeInfo fastq = 8;
inline bool GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_has_fastq() const {
  return this != internal_default_instance() && fastq_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse_FileOperationQueueProgress::has_fastq() const {
  return _internal_has_fastq();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::clear_fastq() {
  if (GetArenaForAllocation() == nullptr && fastq_ != nullptr) {
    delete fastq_;
  }
  fastq_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_fastq() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* p = fastq_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo& GetExperimentYieldInfoResponse_FileOperationQueueProgress::fastq() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fastq)
  return _internal_fastq();
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::unsafe_arena_set_allocated_fastq(
    ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fastq) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fastq_);
  }
  fastq_ = fastq;
  if (fastq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fastq)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* GetExperimentYieldInfoResponse_FileOperationQueueProgress::release_fastq() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* temp = fastq_;
  fastq_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* GetExperimentYieldInfoResponse_FileOperationQueueProgress::unsafe_arena_release_fastq() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fastq)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* temp = fastq_;
  fastq_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* GetExperimentYieldInfoResponse_FileOperationQueueProgress::_internal_mutable_fastq() {
  
  if (fastq_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo>(GetArenaForAllocation());
    fastq_ = p;
  }
  return fastq_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* GetExperimentYieldInfoResponse_FileOperationQueueProgress::mutable_fastq() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* _msg = _internal_mutable_fastq();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fastq)
  return _msg;
}
inline void GetExperimentYieldInfoResponse_FileOperationQueueProgress::set_allocated_fastq(::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo* fastq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete fastq_;
  }
  if (fastq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress_FileTypeInfo>::GetOwningArena(fastq);
    if (message_arena != submessage_arena) {
      fastq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fastq, submessage_arena);
    }
    
  } else {
    
  }
  fastq_ = fastq;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress.fastq)
}

// -------------------------------------------------------------------

// GetExperimentYieldInfoResponse

// .minknow_api.data.GetExperimentYieldInfoResponse.CompleteReadInfo complete_read_info = 1;
inline bool GetExperimentYieldInfoResponse::_internal_has_complete_read_info() const {
  return this != internal_default_instance() && complete_read_info_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_complete_read_info() const {
  return _internal_has_complete_read_info();
}
inline void GetExperimentYieldInfoResponse::clear_complete_read_info() {
  if (GetArenaForAllocation() == nullptr && complete_read_info_ != nullptr) {
    delete complete_read_info_;
  }
  complete_read_info_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo& GetExperimentYieldInfoResponse::_internal_complete_read_info() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* p = complete_read_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_CompleteReadInfo_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo& GetExperimentYieldInfoResponse::complete_read_info() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.complete_read_info)
  return _internal_complete_read_info();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_complete_read_info(
    ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* complete_read_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(complete_read_info_);
  }
  complete_read_info_ = complete_read_info;
  if (complete_read_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.complete_read_info)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* GetExperimentYieldInfoResponse::release_complete_read_info() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* temp = complete_read_info_;
  complete_read_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* GetExperimentYieldInfoResponse::unsafe_arena_release_complete_read_info() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.complete_read_info)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* temp = complete_read_info_;
  complete_read_info_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* GetExperimentYieldInfoResponse::_internal_mutable_complete_read_info() {
  
  if (complete_read_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo>(GetArenaForAllocation());
    complete_read_info_ = p;
  }
  return complete_read_info_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* GetExperimentYieldInfoResponse::mutable_complete_read_info() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* _msg = _internal_mutable_complete_read_info();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.complete_read_info)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_complete_read_info(::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo* complete_read_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete complete_read_info_;
  }
  if (complete_read_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_CompleteReadInfo>::GetOwningArena(complete_read_info);
    if (message_arena != submessage_arena) {
      complete_read_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, complete_read_info, submessage_arena);
    }
    
  } else {
    
  }
  complete_read_info_ = complete_read_info;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.complete_read_info)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.AcquisitionInfo acquisition_info = 2;
inline bool GetExperimentYieldInfoResponse::_internal_has_acquisition_info() const {
  return this != internal_default_instance() && acquisition_info_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_acquisition_info() const {
  return _internal_has_acquisition_info();
}
inline void GetExperimentYieldInfoResponse::clear_acquisition_info() {
  if (GetArenaForAllocation() == nullptr && acquisition_info_ != nullptr) {
    delete acquisition_info_;
  }
  acquisition_info_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo& GetExperimentYieldInfoResponse::_internal_acquisition_info() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* p = acquisition_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_AcquisitionInfo_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo& GetExperimentYieldInfoResponse::acquisition_info() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.acquisition_info)
  return _internal_acquisition_info();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_acquisition_info(
    ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* acquisition_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(acquisition_info_);
  }
  acquisition_info_ = acquisition_info;
  if (acquisition_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.acquisition_info)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* GetExperimentYieldInfoResponse::release_acquisition_info() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* temp = acquisition_info_;
  acquisition_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* GetExperimentYieldInfoResponse::unsafe_arena_release_acquisition_info() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.acquisition_info)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* temp = acquisition_info_;
  acquisition_info_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* GetExperimentYieldInfoResponse::_internal_mutable_acquisition_info() {
  
  if (acquisition_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo>(GetArenaForAllocation());
    acquisition_info_ = p;
  }
  return acquisition_info_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* GetExperimentYieldInfoResponse::mutable_acquisition_info() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* _msg = _internal_mutable_acquisition_info();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.acquisition_info)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_acquisition_info(::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo* acquisition_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete acquisition_info_;
  }
  if (acquisition_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_AcquisitionInfo>::GetOwningArena(acquisition_info);
    if (message_arena != submessage_arena) {
      acquisition_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, acquisition_info, submessage_arena);
    }
    
  } else {
    
  }
  acquisition_info_ = acquisition_info;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.acquisition_info)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.AnalyserInfo analyser_info = 3;
inline bool GetExperimentYieldInfoResponse::_internal_has_analyser_info() const {
  return this != internal_default_instance() && analyser_info_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_analyser_info() const {
  return _internal_has_analyser_info();
}
inline void GetExperimentYieldInfoResponse::clear_analyser_info() {
  if (GetArenaForAllocation() == nullptr && analyser_info_ != nullptr) {
    delete analyser_info_;
  }
  analyser_info_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo& GetExperimentYieldInfoResponse::_internal_analyser_info() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* p = analyser_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_AnalyserInfo_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo& GetExperimentYieldInfoResponse::analyser_info() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.analyser_info)
  return _internal_analyser_info();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_analyser_info(
    ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* analyser_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(analyser_info_);
  }
  analyser_info_ = analyser_info;
  if (analyser_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.analyser_info)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* GetExperimentYieldInfoResponse::release_analyser_info() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* temp = analyser_info_;
  analyser_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* GetExperimentYieldInfoResponse::unsafe_arena_release_analyser_info() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.analyser_info)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* temp = analyser_info_;
  analyser_info_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* GetExperimentYieldInfoResponse::_internal_mutable_analyser_info() {
  
  if (analyser_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo>(GetArenaForAllocation());
    analyser_info_ = p;
  }
  return analyser_info_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* GetExperimentYieldInfoResponse::mutable_analyser_info() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* _msg = _internal_mutable_analyser_info();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.analyser_info)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_analyser_info(::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo* analyser_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete analyser_info_;
  }
  if (analyser_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_AnalyserInfo>::GetOwningArena(analyser_info);
    if (message_arena != submessage_arena) {
      analyser_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, analyser_info, submessage_arena);
    }
    
  } else {
    
  }
  analyser_info_ = analyser_info;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.analyser_info)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.BulkInfo bulk_info = 4;
inline bool GetExperimentYieldInfoResponse::_internal_has_bulk_info() const {
  return this != internal_default_instance() && bulk_info_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_bulk_info() const {
  return _internal_has_bulk_info();
}
inline void GetExperimentYieldInfoResponse::clear_bulk_info() {
  if (GetArenaForAllocation() == nullptr && bulk_info_ != nullptr) {
    delete bulk_info_;
  }
  bulk_info_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo& GetExperimentYieldInfoResponse::_internal_bulk_info() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* p = bulk_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_BulkInfo_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo& GetExperimentYieldInfoResponse::bulk_info() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.bulk_info)
  return _internal_bulk_info();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_bulk_info(
    ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* bulk_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bulk_info_);
  }
  bulk_info_ = bulk_info;
  if (bulk_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.bulk_info)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* GetExperimentYieldInfoResponse::release_bulk_info() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* temp = bulk_info_;
  bulk_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* GetExperimentYieldInfoResponse::unsafe_arena_release_bulk_info() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.bulk_info)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* temp = bulk_info_;
  bulk_info_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* GetExperimentYieldInfoResponse::_internal_mutable_bulk_info() {
  
  if (bulk_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo>(GetArenaForAllocation());
    bulk_info_ = p;
  }
  return bulk_info_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* GetExperimentYieldInfoResponse::mutable_bulk_info() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* _msg = _internal_mutable_bulk_info();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.bulk_info)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_bulk_info(::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo* bulk_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete bulk_info_;
  }
  if (bulk_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_BulkInfo>::GetOwningArena(bulk_info);
    if (message_arena != submessage_arena) {
      bulk_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bulk_info, submessage_arena);
    }
    
  } else {
    
  }
  bulk_info_ = bulk_info;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.bulk_info)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.HdfWriterInfo hdf_writer_info = 5;
inline bool GetExperimentYieldInfoResponse::_internal_has_hdf_writer_info() const {
  return this != internal_default_instance() && hdf_writer_info_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_hdf_writer_info() const {
  return _internal_has_hdf_writer_info();
}
inline void GetExperimentYieldInfoResponse::clear_hdf_writer_info() {
  if (GetArenaForAllocation() == nullptr && hdf_writer_info_ != nullptr) {
    delete hdf_writer_info_;
  }
  hdf_writer_info_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo& GetExperimentYieldInfoResponse::_internal_hdf_writer_info() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* p = hdf_writer_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_HdfWriterInfo_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo& GetExperimentYieldInfoResponse::hdf_writer_info() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.hdf_writer_info)
  return _internal_hdf_writer_info();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_hdf_writer_info(
    ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* hdf_writer_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hdf_writer_info_);
  }
  hdf_writer_info_ = hdf_writer_info;
  if (hdf_writer_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.hdf_writer_info)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* GetExperimentYieldInfoResponse::release_hdf_writer_info() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* temp = hdf_writer_info_;
  hdf_writer_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* GetExperimentYieldInfoResponse::unsafe_arena_release_hdf_writer_info() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.hdf_writer_info)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* temp = hdf_writer_info_;
  hdf_writer_info_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* GetExperimentYieldInfoResponse::_internal_mutable_hdf_writer_info() {
  
  if (hdf_writer_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo>(GetArenaForAllocation());
    hdf_writer_info_ = p;
  }
  return hdf_writer_info_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* GetExperimentYieldInfoResponse::mutable_hdf_writer_info() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* _msg = _internal_mutable_hdf_writer_info();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.hdf_writer_info)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_hdf_writer_info(::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo* hdf_writer_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete hdf_writer_info_;
  }
  if (hdf_writer_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_HdfWriterInfo>::GetOwningArena(hdf_writer_info);
    if (message_arena != submessage_arena) {
      hdf_writer_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hdf_writer_info, submessage_arena);
    }
    
  } else {
    
  }
  hdf_writer_info_ = hdf_writer_info;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.hdf_writer_info)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.BasecallStatistics basecaller_statistics = 6;
inline bool GetExperimentYieldInfoResponse::_internal_has_basecaller_statistics() const {
  return this != internal_default_instance() && basecaller_statistics_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_basecaller_statistics() const {
  return _internal_has_basecaller_statistics();
}
inline void GetExperimentYieldInfoResponse::clear_basecaller_statistics() {
  if (GetArenaForAllocation() == nullptr && basecaller_statistics_ != nullptr) {
    delete basecaller_statistics_;
  }
  basecaller_statistics_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics& GetExperimentYieldInfoResponse::_internal_basecaller_statistics() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* p = basecaller_statistics_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_BasecallStatistics_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics& GetExperimentYieldInfoResponse::basecaller_statistics() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.basecaller_statistics)
  return _internal_basecaller_statistics();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_basecaller_statistics(
    ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* basecaller_statistics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(basecaller_statistics_);
  }
  basecaller_statistics_ = basecaller_statistics;
  if (basecaller_statistics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.basecaller_statistics)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* GetExperimentYieldInfoResponse::release_basecaller_statistics() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* temp = basecaller_statistics_;
  basecaller_statistics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* GetExperimentYieldInfoResponse::unsafe_arena_release_basecaller_statistics() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.basecaller_statistics)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* temp = basecaller_statistics_;
  basecaller_statistics_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* GetExperimentYieldInfoResponse::_internal_mutable_basecaller_statistics() {
  
  if (basecaller_statistics_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics>(GetArenaForAllocation());
    basecaller_statistics_ = p;
  }
  return basecaller_statistics_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* GetExperimentYieldInfoResponse::mutable_basecaller_statistics() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* _msg = _internal_mutable_basecaller_statistics();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.basecaller_statistics)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_basecaller_statistics(::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics* basecaller_statistics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete basecaller_statistics_;
  }
  if (basecaller_statistics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_BasecallStatistics>::GetOwningArena(basecaller_statistics);
    if (message_arena != submessage_arena) {
      basecaller_statistics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, basecaller_statistics, submessage_arena);
    }
    
  } else {
    
  }
  basecaller_statistics_ = basecaller_statistics;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.basecaller_statistics)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.HdfMultiReadWritingStatistics hdf_multi_read_writing_statisitics = 7;
inline bool GetExperimentYieldInfoResponse::_internal_has_hdf_multi_read_writing_statisitics() const {
  return this != internal_default_instance() && hdf_multi_read_writing_statisitics_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_hdf_multi_read_writing_statisitics() const {
  return _internal_has_hdf_multi_read_writing_statisitics();
}
inline void GetExperimentYieldInfoResponse::clear_hdf_multi_read_writing_statisitics() {
  if (GetArenaForAllocation() == nullptr && hdf_multi_read_writing_statisitics_ != nullptr) {
    delete hdf_multi_read_writing_statisitics_;
  }
  hdf_multi_read_writing_statisitics_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& GetExperimentYieldInfoResponse::_internal_hdf_multi_read_writing_statisitics() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* p = hdf_multi_read_writing_statisitics_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics& GetExperimentYieldInfoResponse::hdf_multi_read_writing_statisitics() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.hdf_multi_read_writing_statisitics)
  return _internal_hdf_multi_read_writing_statisitics();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_hdf_multi_read_writing_statisitics(
    ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* hdf_multi_read_writing_statisitics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hdf_multi_read_writing_statisitics_);
  }
  hdf_multi_read_writing_statisitics_ = hdf_multi_read_writing_statisitics;
  if (hdf_multi_read_writing_statisitics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.hdf_multi_read_writing_statisitics)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* GetExperimentYieldInfoResponse::release_hdf_multi_read_writing_statisitics() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* temp = hdf_multi_read_writing_statisitics_;
  hdf_multi_read_writing_statisitics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* GetExperimentYieldInfoResponse::unsafe_arena_release_hdf_multi_read_writing_statisitics() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.hdf_multi_read_writing_statisitics)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* temp = hdf_multi_read_writing_statisitics_;
  hdf_multi_read_writing_statisitics_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* GetExperimentYieldInfoResponse::_internal_mutable_hdf_multi_read_writing_statisitics() {
  
  if (hdf_multi_read_writing_statisitics_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics>(GetArenaForAllocation());
    hdf_multi_read_writing_statisitics_ = p;
  }
  return hdf_multi_read_writing_statisitics_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* GetExperimentYieldInfoResponse::mutable_hdf_multi_read_writing_statisitics() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* _msg = _internal_mutable_hdf_multi_read_writing_statisitics();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.hdf_multi_read_writing_statisitics)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_hdf_multi_read_writing_statisitics(::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics* hdf_multi_read_writing_statisitics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete hdf_multi_read_writing_statisitics_;
  }
  if (hdf_multi_read_writing_statisitics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_HdfMultiReadWritingStatistics>::GetOwningArena(hdf_multi_read_writing_statisitics);
    if (message_arena != submessage_arena) {
      hdf_multi_read_writing_statisitics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hdf_multi_read_writing_statisitics, submessage_arena);
    }
    
  } else {
    
  }
  hdf_multi_read_writing_statisitics_ = hdf_multi_read_writing_statisitics;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.hdf_multi_read_writing_statisitics)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.FastqReadWritingStatistics fastq_read_writing_statistics = 8;
inline bool GetExperimentYieldInfoResponse::_internal_has_fastq_read_writing_statistics() const {
  return this != internal_default_instance() && fastq_read_writing_statistics_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_fastq_read_writing_statistics() const {
  return _internal_has_fastq_read_writing_statistics();
}
inline void GetExperimentYieldInfoResponse::clear_fastq_read_writing_statistics() {
  if (GetArenaForAllocation() == nullptr && fastq_read_writing_statistics_ != nullptr) {
    delete fastq_read_writing_statistics_;
  }
  fastq_read_writing_statistics_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics& GetExperimentYieldInfoResponse::_internal_fastq_read_writing_statistics() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* p = fastq_read_writing_statistics_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_FastqReadWritingStatistics_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics& GetExperimentYieldInfoResponse::fastq_read_writing_statistics() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.fastq_read_writing_statistics)
  return _internal_fastq_read_writing_statistics();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_fastq_read_writing_statistics(
    ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* fastq_read_writing_statistics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fastq_read_writing_statistics_);
  }
  fastq_read_writing_statistics_ = fastq_read_writing_statistics;
  if (fastq_read_writing_statistics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.fastq_read_writing_statistics)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* GetExperimentYieldInfoResponse::release_fastq_read_writing_statistics() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* temp = fastq_read_writing_statistics_;
  fastq_read_writing_statistics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* GetExperimentYieldInfoResponse::unsafe_arena_release_fastq_read_writing_statistics() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.fastq_read_writing_statistics)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* temp = fastq_read_writing_statistics_;
  fastq_read_writing_statistics_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* GetExperimentYieldInfoResponse::_internal_mutable_fastq_read_writing_statistics() {
  
  if (fastq_read_writing_statistics_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics>(GetArenaForAllocation());
    fastq_read_writing_statistics_ = p;
  }
  return fastq_read_writing_statistics_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* GetExperimentYieldInfoResponse::mutable_fastq_read_writing_statistics() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* _msg = _internal_mutable_fastq_read_writing_statistics();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.fastq_read_writing_statistics)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_fastq_read_writing_statistics(::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics* fastq_read_writing_statistics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete fastq_read_writing_statistics_;
  }
  if (fastq_read_writing_statistics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_FastqReadWritingStatistics>::GetOwningArena(fastq_read_writing_statistics);
    if (message_arena != submessage_arena) {
      fastq_read_writing_statistics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fastq_read_writing_statistics, submessage_arena);
    }
    
  } else {
    
  }
  fastq_read_writing_statistics_ = fastq_read_writing_statistics;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.fastq_read_writing_statistics)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.ProtobufReadWritingStatistics protobuf_read_writing_statistics = 9;
inline bool GetExperimentYieldInfoResponse::_internal_has_protobuf_read_writing_statistics() const {
  return this != internal_default_instance() && protobuf_read_writing_statistics_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_protobuf_read_writing_statistics() const {
  return _internal_has_protobuf_read_writing_statistics();
}
inline void GetExperimentYieldInfoResponse::clear_protobuf_read_writing_statistics() {
  if (GetArenaForAllocation() == nullptr && protobuf_read_writing_statistics_ != nullptr) {
    delete protobuf_read_writing_statistics_;
  }
  protobuf_read_writing_statistics_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& GetExperimentYieldInfoResponse::_internal_protobuf_read_writing_statistics() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* p = protobuf_read_writing_statistics_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics& GetExperimentYieldInfoResponse::protobuf_read_writing_statistics() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.protobuf_read_writing_statistics)
  return _internal_protobuf_read_writing_statistics();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_protobuf_read_writing_statistics(
    ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* protobuf_read_writing_statistics) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(protobuf_read_writing_statistics_);
  }
  protobuf_read_writing_statistics_ = protobuf_read_writing_statistics;
  if (protobuf_read_writing_statistics) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.protobuf_read_writing_statistics)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* GetExperimentYieldInfoResponse::release_protobuf_read_writing_statistics() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* temp = protobuf_read_writing_statistics_;
  protobuf_read_writing_statistics_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* GetExperimentYieldInfoResponse::unsafe_arena_release_protobuf_read_writing_statistics() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.protobuf_read_writing_statistics)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* temp = protobuf_read_writing_statistics_;
  protobuf_read_writing_statistics_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* GetExperimentYieldInfoResponse::_internal_mutable_protobuf_read_writing_statistics() {
  
  if (protobuf_read_writing_statistics_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics>(GetArenaForAllocation());
    protobuf_read_writing_statistics_ = p;
  }
  return protobuf_read_writing_statistics_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* GetExperimentYieldInfoResponse::mutable_protobuf_read_writing_statistics() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* _msg = _internal_mutable_protobuf_read_writing_statistics();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.protobuf_read_writing_statistics)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_protobuf_read_writing_statistics(::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics* protobuf_read_writing_statistics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete protobuf_read_writing_statistics_;
  }
  if (protobuf_read_writing_statistics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_ProtobufReadWritingStatistics>::GetOwningArena(protobuf_read_writing_statistics);
    if (message_arena != submessage_arena) {
      protobuf_read_writing_statistics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, protobuf_read_writing_statistics, submessage_arena);
    }
    
  } else {
    
  }
  protobuf_read_writing_statistics_ = protobuf_read_writing_statistics;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.protobuf_read_writing_statistics)
}

// .minknow_api.data.GetExperimentYieldInfoResponse.FileOperationQueueProgress file_operation_queue_progress = 10;
inline bool GetExperimentYieldInfoResponse::_internal_has_file_operation_queue_progress() const {
  return this != internal_default_instance() && file_operation_queue_progress_ != nullptr;
}
inline bool GetExperimentYieldInfoResponse::has_file_operation_queue_progress() const {
  return _internal_has_file_operation_queue_progress();
}
inline void GetExperimentYieldInfoResponse::clear_file_operation_queue_progress() {
  if (GetArenaForAllocation() == nullptr && file_operation_queue_progress_ != nullptr) {
    delete file_operation_queue_progress_;
  }
  file_operation_queue_progress_ = nullptr;
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress& GetExperimentYieldInfoResponse::_internal_file_operation_queue_progress() const {
  const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* p = file_operation_queue_progress_;
  return p != nullptr ? *p : reinterpret_cast<const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress&>(
      ::minknow_api::data::_GetExperimentYieldInfoResponse_FileOperationQueueProgress_default_instance_);
}
inline const ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress& GetExperimentYieldInfoResponse::file_operation_queue_progress() const {
  // @@protoc_insertion_point(field_get:minknow_api.data.GetExperimentYieldInfoResponse.file_operation_queue_progress)
  return _internal_file_operation_queue_progress();
}
inline void GetExperimentYieldInfoResponse::unsafe_arena_set_allocated_file_operation_queue_progress(
    ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* file_operation_queue_progress) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(file_operation_queue_progress_);
  }
  file_operation_queue_progress_ = file_operation_queue_progress;
  if (file_operation_queue_progress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.file_operation_queue_progress)
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* GetExperimentYieldInfoResponse::release_file_operation_queue_progress() {
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* temp = file_operation_queue_progress_;
  file_operation_queue_progress_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* GetExperimentYieldInfoResponse::unsafe_arena_release_file_operation_queue_progress() {
  // @@protoc_insertion_point(field_release:minknow_api.data.GetExperimentYieldInfoResponse.file_operation_queue_progress)
  
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* temp = file_operation_queue_progress_;
  file_operation_queue_progress_ = nullptr;
  return temp;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* GetExperimentYieldInfoResponse::_internal_mutable_file_operation_queue_progress() {
  
  if (file_operation_queue_progress_ == nullptr) {
    auto* p = CreateMaybeMessage<::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress>(GetArenaForAllocation());
    file_operation_queue_progress_ = p;
  }
  return file_operation_queue_progress_;
}
inline ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* GetExperimentYieldInfoResponse::mutable_file_operation_queue_progress() {
  ::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* _msg = _internal_mutable_file_operation_queue_progress();
  // @@protoc_insertion_point(field_mutable:minknow_api.data.GetExperimentYieldInfoResponse.file_operation_queue_progress)
  return _msg;
}
inline void GetExperimentYieldInfoResponse::set_allocated_file_operation_queue_progress(::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress* file_operation_queue_progress) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete file_operation_queue_progress_;
  }
  if (file_operation_queue_progress) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::minknow_api::data::GetExperimentYieldInfoResponse_FileOperationQueueProgress>::GetOwningArena(file_operation_queue_progress);
    if (message_arena != submessage_arena) {
      file_operation_queue_progress = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file_operation_queue_progress, submessage_arena);
    }
    
  } else {
    
  }
  file_operation_queue_progress_ = file_operation_queue_progress;
  // @@protoc_insertion_point(field_set_allocated:minknow_api.data.GetExperimentYieldInfoResponse.file_operation_queue_progress)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace minknow_api

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::minknow_api::data::GetDataTypesResponse_DataType_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::minknow_api::data::GetDataTypesResponse_DataType_Type>() {
  return ::minknow_api::data::GetDataTypesResponse_DataType_Type_descriptor();
}
template <> struct is_proto_enum< ::minknow_api::data::GetLiveReadsRequest_RawDataType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::minknow_api::data::GetLiveReadsRequest_RawDataType>() {
  return ::minknow_api::data::GetLiveReadsRequest_RawDataType_descriptor();
}
template <> struct is_proto_enum< ::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response>() {
  return ::minknow_api::data::GetLiveReadsResponse_ActionResponse_Response_descriptor();
}
template <> struct is_proto_enum< ::minknow_api::data::GetReadStatisticsRequest_ReadSplit> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::minknow_api::data::GetReadStatisticsRequest_ReadSplit>() {
  return ::minknow_api::data::GetReadStatisticsRequest_ReadSplit_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_minknow_5fapi_2fdata_2eproto
